{"text": " Salve a tutti e ben ritrovati per un nuovo episodio di Pensieri in Codice. Giusto un paio di episodi fa abbiamo visto a grandi linee come funziona l'algoritmo di indicizzazione di un generico motore di ricerca. Se non l'avete gi\u00e0 fatto vi consiglio di ascoltare la puntata numero 28 prima di continuare con l'ascolto di questa. Senza infatti conoscere le nozioni di cui abbiamo discusso in quell'episodio potrebbe essere difficile capire i riferimenti che faremo in questo. In quell'occasione abbiamo detto che in realt\u00e0 il nome algoritmo di indicizzazione nasconde due concetti ben distinti che sono l'indicizzazione appunto e l'ordinamento. Nella puntata numero 28 ho utilizzato la parola classificazione intendendo l'operazione di dare un voto e quindi creare una classifica ma in realt\u00e0 la parola ordinamento risulta pi\u00f9 adatta. Mentre il meccanismo di indicizzazione al netto di qualche piccola variante pu\u00f2 essere considerato pi\u00f9 o meno comune per tutti i motori di ricerca, quello di ordinamento pu\u00f2 cambiare profondamente da motore a motore e la sua maggiore o minore efficienza pu\u00f2 determinare il successo o il fallimento del motore che lo implementa. Per questo motivo infatti quasi tutte le aziende che gestiscono un motore di ricerca tendono a mantenere segreti i dettagli riguardanti il funzionamento del proprio algoritmo. Un esempio che \u00e8 sotto gli occhi di tutti risale al 1990 ed \u00e8 l'algoritmo chiamato PageRank ideato da Larry Page e Sergey Brin che permise alla allora neonata Google di superare i propri maggiori concorrenti nonostante essi fossero entrati in attivit\u00e0 ben 4 anni prima del motore di Mountain View. Ed \u00e8 proprio per questo motivo ed anche perch\u00e9 il funzionamento della prima versione di PageRank fu reso pubblico dagli stessi autori con un documento del 1998 che nell'episodio di oggi andremo a scoprire i principi base di questo algoritmo che ha ricoperto un ruolo cos\u00ec importante per la costruzione di internet cos\u00ec come oggi lo conosciamo. Nell'episodio numero 28 abbiamo illustrato un metodo basilare per ordinare alcune pagine come pi\u00f9 o meno attinenti rispetto a una ricerca basandoci su elementi come la distanza tra le parole cercate e il ruolo che tali parole assumono all'interno del testo. Ora per\u00f2 con l'algoritmo PageRank facciamo un passo in pi\u00f9 e aggiungiamo altri elementi che ci permettano di migliorare la precisione della nostra classificazione. In pratica cerchiamo un modo per aumentare le probabilit\u00e0 di restituire la risposta pi\u00f9 corretta possibile ai nostri utenti. L'idea alla base di PageRank sta nel fatto che in generale le pagine web sono collegate fra loro. Come ben sappiamo infatti tantissimi siti rimandano spesso e volentieri ad altri siti. Pensiamo ad esempio ad un quotidiano online o a un blog o a un forum e noteremo che gli articoli in esso contenuti sono spesso pieni di link che fanno riferimento ad altre pagine sparse per il web. L'intuizione di Breen e Page fu quella di utilizzare questi link per dare un valore di autorevolezza a ciascuna pagina. In parole povere ogni pagina \u00e8 pi\u00f9 autorevole quanto pi\u00f9 viene menzionata sotto forma di link ovviamente in tutte le altre pagine e pi\u00f9 essa \u00e8 autorevole pi\u00f9 conferisce autorevolezza alle pagine a cui fa riferimento. Ok lo so che detta cos\u00ec sembra qualcosa di molto complicato ma in realt\u00e0 non lo \u00e8. Procediamo un passo alla volta e tutto ci apparir\u00e0 chiaro. Prima di tutto chiariamo il concetto di base. Per ogni pagina che Google indicizza nei propri archivi il page rank conta quanti link riesce a trovare in tutto il web che puntano a quella pagina e usa questo valore per calcolare l'autorevolezza della pagina. In questo modo quando l'utente effettua una ricerca il motore pu\u00f2 facilmente presentargli i risultati ordinati per autorevolezza. Ora per\u00f2 chiunque utilizzi il web sa benissimo che non sempre un blog, un tweet o uno stato su Facebook contengono link a qualcosa che l'autore apprezza. Se \u00e8 infatti vero che ciascuno di noi pu\u00f2 pubblicare un link a una pagina perch\u00e9 vuole farne conoscere i contenuti \u00e8 per\u00f2 altrettanto vero che si possa fare riferimento a pagine che ci fanno indignare o che vogliamo criticare. Oltre a questo nulla vieta a qualcuno di creare link a pagine perch\u00e9 gli autori gli hanno corrisposto un compenso per farlo. O ancora \u00e8 possibile per qualcuno creare una rete di centinaia di pagine che fanno riferimento l'una all'altra allo scopo di simulare un interesse per i contenuti che in realt\u00e0 non esiste. Siamo quindi sicuri che pur parlando in ognuno di questi casi di collegamenti essi abbiano tutti lo stesso valore dal punto di vista di una ricerca sul web? Beh ovviamente la risposta a questa domanda \u00e8 no e infatti l'algoritmo PageRank gi\u00e0 nella sua prima versione era in grado di mitigare enormemente l'effetto di tutti questi disturbi nel calcolo dell'autorevolezza. La soluzione a questo problema implementata da Breen e Page \u00e8 al tempo stesso molto semplice ed efficace. \u00c8 bastato aggiungere la regola che nel calcolo dell'autorevolezza di una pagina i collegamenti provenienti da pagine pi\u00f9 autorevoli hanno un valore maggiore rispetto a quelli provenienti da pagine meno autorevoli. Questa semplice accortezza permette a PageRank di escludere o limitare l'influenza che i link poco utili o artificiosi producono nella classificazione e al tempo stesso crea una lista di pagine i cui valori di autorevolezza sono di tipo esponenziale. Proviamo a fare un esempio per chiarire bene il concetto. Fingiamo che in tutto il web esistano solo due podcast di informatica. Uno \u00e8 Pensieri in Codice, l'altro \u00e8 Pillole di Bit che a proposito \u00e8 un bellissimo podcast e io vi consiglio caldamente di ascoltare, vi lascio un link in descrizione. Ora, fingiamo anche che tutto il web sia composto da sole 27 pagine. Due appartengono ai due podcast appunto e delle restanti 25, 15 contengono link verso Pensieri in Codice e 10 verso Pillole di Bit. Secondo quanto abbiamo detto all'inizio verrebbe automatico pensare che effettuando una ricerca per podcast di informatica debbano venire fuori i due risultati nell'ordine, prima Pensieri in Codice e poi Pillole di Bit con i rispettivi punteggi di 15 e 10. Tuttavia consideriamo questa situazione. Tra le 10 pagine che puntano a Pillole di Bit ce n'\u00e8 una che si intitola Esperto di Podcast. Di tutte le 27 pagine del nostro finto web ben 20 fanno riferimento all'esperto di podcast perch\u00e9 quasi tutti si fidano dei suoi pareri sui vari podcast. Riapplicando quindi i calcoli la pagina Pillole di Bit non avr\u00e0 pi\u00f9 un punteggio di 10, bens\u00ec uno di 9, la somma delle 9 pagine generiche, pi\u00f9 21, il valore di autorevolezza della pagina Esperto di Podcast e quindi avr\u00e0 un totale di 30 e questo la far\u00e0 passare automaticamente in prima posizione. Ora, sembrerebbe che tutti i problemi di ordinamento siano stati risolti con i meccanismi che abbiamo descritto nel blocco precedente, ma in realt\u00e0 questo non \u00e8 affatto vero. Un problema a questo punto \u00e8 molto poco intuibile ma c'\u00e8 ed \u00e8 anche molto grave. Per capirlo immaginiamo sempre di avere un web ridotto a poche pagine. Ad esempio immaginiamo di avere la pagina A che punta alla pagina B, B a C e C di nuovo ad A. E inoltre immaginiamo di avere una pagina D che punta sempre ad A. In una condizione del genere, se proviamo a calcolare il valore di autorevolezza, ci troviamo in una strana situazione. La pagina D, infatti, causer\u00e0 il ricalcolo del valore della pagina A, la quale a sua volta produrr\u00e0 il ricalcolo di B, poi di C e poi C nuovamente produrr\u00e0 il ricalcolo del valore di A, ma ricalcolando A dovremo ricalcolare anche B e poi C e poi di nuovo A e cos\u00ec via. A questo punto dovrebbe essere chiaro che siamo entrati in una di quelle fastidiosissime condizioni dell'informatica che si chiamano loop. Una operazione ne condiziona un'altra che a sua volta ne condiziona una terza e questa terza condiziona di nuovo la prima e tutto si ripete all'infinito. Ovviamente il PageRank non soffre nella realt\u00e0 di questo problema e quindi noi ora proveremo a capire il perch\u00e9. La soluzione che Breen e Page scogitarono per questo problema \u00e8 molto difficile da intuire e si basa sull'introduzione di un fattore di casualit\u00e0 all'interno dell'algoritmo. In pratica i due inventori strutturarono il processo di assegnazione dell'autorevolezza nel seguente modo. L'algoritmo parte da una pagina a caso tra quelle disponibili e segue casualmente uno dei link che questa possiede verso le altre pagine. Arrivato alla seconda pagina ne incrementa il valore di autorevolezza e sceglie un nuovo link a caso e procede alla successiva. Inoltre ad ogni passaggio di pagina in pagina esiste una probabilit\u00e0 del 15% che l'algoritmo si fermi e riparta da un'altra pagina a caso. Ora capite bene che con un comportamento del genere non si rischia pi\u00f9 di entrare in un loop perch\u00e9 prima o poi l'algoritmo si ferma e riparte altrove. Ma quello che resta da capire \u00e8 se il risultato di un processo del genere possa essere considerato equivalente a quello che abbiamo descritto nel blocco precedente. Dal momento per\u00f2 che siamo in un podcast io non posso mostrarvi una dimostrazione scritta e per questo motivo proviamo ad affidarci a un po' di logica. Fingiamo quindi che il nostro web sia formato da 100 pagine e tutte queste pagine siano interconnesse fra loro da 2 o 3 collegamenti. Supponiamo poi che esista una sola pagina di queste 100 che chiameremo A alla quale fanno riferimento 50 delle nostre pagine. In una situazione del genere \u00e8 abbastanza facile intuire che se partissimo da una pagina a caso e ci muovessimo di collegamento in collegamento a caso le possibilit\u00e0 di capitare sulla pagina A sarebbero molto pi\u00f9 alte che su qualsiasi altra pagina perch\u00e9 avremo almeno 50 strade che portano ad essa contro le 2 o 3 che portano a qualsiasi altra. Se ripetessimo quindi il processo un numero sufficientemente alto di volte mediamente le pagine con pi\u00f9 link in ingresso tenderebbero ad essere attraversate pi\u00f9 volte perch\u00e9 ci sarebbero tante strade che portano ad esse e sarebbe quindi pi\u00f9 facile raggiungerle per l'algoritmo che si muove casualmente. In questo modo avremmo rispettato la condizione secondo cui pagine con pi\u00f9 collegamenti in ingresso devono avere un valore pi\u00f9 alto di autorevolezza. Sempre ragionando da un punto di vista statistico le pagine con pi\u00f9 link in ingresso tenderanno anche maggiormente a fare da ponte verso le pagine a cui puntano aumentando il numero di volte in cui queste ultime vengono raggiunte. Basandoci quindi sull'esempio precedente immaginiamo che la pagina A abbia due collegamenti uno verso B e un altro verso C. Siccome abbiamo detto poco fa c'\u00e8 un'alta probabilit\u00e0 che procedendo a caso ci si trovi a passare per A allora \u00e8 anche molto probabile che da A si arrivi a B o a C innalzando in questo modo la possibilit\u00e0 che queste due pagine vengano raggiunte. Anche in questo caso quindi viene rispettato il vincolo secondo cui le pagine con un valore pi\u00f9 alto conferiscono autorevolezza maggiore a quelle a cui puntano. Bene, io spero di essere riuscito a spiegare al meglio questo importante algoritmo. In caso contrario fatemi sapere cosa non \u00e8 chiaro nei commenti oppure nel gruppo Telegram. Io per ora vi ringrazio per essere arrivati fin qui. Ringrazio Walter Vannini del podcast Data Nightmare per le informazioni sulla frase che avevo iniziato ad utilizzare a chiusura degli episodi e quindi vi saluto con le parole di Giovanni degli Antoni. Un informatico risolve problemi, a volte anche usando il computer. Grazie.", "segments": [{"id": 1, "seek": 2500, "start": 0.0, "end": 25.0, "text": " Salve a tutti e ben ritrovati per un nuovo episodio di Pensieri in Codice.", "tokens": [50364, 5996, 303, 257, 19822, 308, 3271, 11289, 24088, 6908, 680, 517, 49348, 39200, 1004, 1026, 45035, 45980, 294, 383, 378, 573, 13, 51614], "temperature": 0.0, "avg_logprob": -0.33954327496198505, "compression_ratio": 1.0277777777777777, "no_speech_prob": 0.09759521484375, "words": null}, {"id": 2, "seek": 4900, "start": 25.0, "end": 32.0, "text": " Giusto un paio di episodi fa abbiamo visto a grandi linee come funziona l'algoritmo di indicizzazione di un generico motore di ricerca.", "tokens": [50364, 15334, 48260, 517, 2502, 1004, 1026, 2927, 30727, 2050, 22815, 17558, 257, 45155, 1622, 68, 808, 49345, 21758, 287, 6, 20422, 50017, 3280, 1026, 4694, 8072, 12928, 1026, 517, 1337, 2789, 2184, 418, 1026, 21040, 36127, 13, 50714], "temperature": 0.0, "avg_logprob": -0.15026042064030964, "compression_ratio": 1.6285714285714286, "no_speech_prob": 0.244140625, "words": null}, {"id": 3, "seek": 4900, "start": 33.0, "end": 39.0, "text": " Se non l'avete gi\u00e0 fatto vi consiglio di ascoltare la puntata numero 28 prima di continuare con l'ascolto di questa.", "tokens": [50764, 1100, 2107, 287, 6, 706, 3498, 30469, 23228, 1932, 40233, 19987, 1026, 15526, 4837, 543, 635, 18212, 3274, 46839, 7562, 19507, 1026, 2993, 543, 416, 287, 6, 4806, 401, 1353, 1026, 16540, 13, 51064], "temperature": 0.0, "avg_logprob": -0.15026042064030964, "compression_ratio": 1.6285714285714286, "no_speech_prob": 0.244140625, "words": null}, {"id": 4, "seek": 4900, "start": 40.0, "end": 49.0, "text": " Senza infatti conoscere le nozioni di cui abbiamo discusso in quell'episodio potrebbe essere difficile capire i riferimenti che faremo in questo.", "tokens": [51114, 3862, 2394, 1536, 21515, 416, 10466, 323, 476, 572, 89, 15273, 1026, 22929, 22815, 717, 1149, 539, 294, 631, 285, 6, 595, 271, 378, 1004, 1847, 39487, 19799, 26607, 1410, 621, 741, 367, 9361, 2328, 72, 947, 11994, 3280, 294, 10263, 13, 51564], "temperature": 0.0, "avg_logprob": -0.15026042064030964, "compression_ratio": 1.6285714285714286, "no_speech_prob": 0.244140625, "words": null}, {"id": 5, "seek": 7700, "start": 50.0, "end": 62.0, "text": " In quell'occasione abbiamo detto che in realt\u00e0 il nome algoritmo di indicizzazione nasconde due concetti ben distinti che sono l'indicizzazione appunto e l'ordinamento.", "tokens": [50414, 682, 631, 285, 6, 905, 16369, 5328, 22815, 41031, 947, 294, 47512, 1930, 19003, 3501, 50017, 3280, 1026, 4694, 8072, 12928, 297, 4806, 7259, 3462, 1588, 12495, 3271, 31489, 72, 947, 9259, 287, 6, 471, 299, 8072, 12928, 724, 24052, 308, 287, 6, 6241, 8824, 13, 51014], "temperature": 0.0, "avg_logprob": -0.15765625208616257, "compression_ratio": 1.663594470046083, "no_speech_prob": 0.271728515625, "words": null}, {"id": 6, "seek": 7700, "start": 63.0, "end": 77.0, "text": " Nella puntata numero 28 ho utilizzato la parola classificazione intendendo l'operazione di dare un voto e quindi creare una classifica ma in realt\u00e0 la parola ordinamento risulta pi\u00f9 adatta.", "tokens": [51064, 426, 9885, 18212, 3274, 46839, 7562, 1106, 40355, 2513, 635, 971, 4711, 1508, 1089, 12928, 19759, 3999, 287, 6, 7192, 12928, 1026, 8955, 517, 3478, 78, 308, 15727, 1197, 543, 2002, 1508, 43377, 463, 294, 47512, 635, 971, 4711, 25376, 8824, 2253, 723, 64, 10589, 614, 18405, 13, 51764], "temperature": 0.0, "avg_logprob": -0.15765625208616257, "compression_ratio": 1.663594470046083, "no_speech_prob": 0.271728515625, "words": null}, {"id": 7, "seek": 9900, "start": 78.0, "end": 87.0, "text": " Mentre il meccanismo di indicizzazione al netto di qualche piccola variante pu\u00f2 essere considerato pi\u00f9 o meno comune per tutti i motori di ricerca,", "tokens": [50414, 376, 24570, 1930, 385, 1914, 282, 6882, 1026, 4694, 8072, 12928, 419, 2533, 1353, 1026, 38737, 13363, 66, 4711, 3034, 2879, 26526, 19799, 1949, 2513, 10589, 277, 40236, 395, 2613, 680, 19822, 741, 5932, 72, 1026, 21040, 36127, 11, 50864], "temperature": 0.0, "avg_logprob": -0.1353298564751943, "compression_ratio": 1.6067961165048543, "no_speech_prob": 0.0736083984375, "words": null}, {"id": 8, "seek": 9900, "start": 88.0, "end": 99.0, "text": " quello di ordinamento pu\u00f2 cambiare profondamente da motore a motore e la sua maggiore o minore efficienza pu\u00f2 determinare il successo o il fallimento del motore che lo implementa.", "tokens": [50914, 22813, 1026, 25376, 8824, 26526, 19569, 543, 1740, 684, 3439, 1120, 2184, 418, 257, 2184, 418, 308, 635, 8233, 463, 22771, 418, 277, 923, 418, 4703, 42331, 26526, 15957, 543, 1930, 2245, 78, 277, 1930, 2100, 10030, 1103, 2184, 418, 947, 450, 4445, 64, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1353298564751943, "compression_ratio": 1.6067961165048543, "no_speech_prob": 0.0736083984375, "words": null}, {"id": 9, "seek": 12000, "start": 99.0, "end": 110.0, "text": " Per questo motivo infatti quasi tutte le aziende che gestiscono un motore di ricerca tendono a mantenere segreti i dettagli riguardanti il funzionamento del proprio algoritmo.", "tokens": [50364, 3026, 10263, 35804, 1536, 21515, 20954, 38632, 476, 7883, 45816, 947, 7219, 271, 45846, 517, 2184, 418, 1026, 21040, 36127, 3928, 8957, 257, 38417, 323, 3896, 1505, 72, 741, 1141, 25030, 2081, 8329, 16981, 11520, 1930, 49345, 313, 8824, 1103, 28203, 3501, 50017, 3280, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1403556096142736, "compression_ratio": 1.4757281553398058, "no_speech_prob": 0.428955078125, "words": null}, {"id": 10, "seek": 12000, "start": 111.0, "end": 120.0, "text": " Un esempio che \u00e8 sotto gli occhi di tutti risale al 1990 ed \u00e8 l'algoritmo chiamato PageRank ideato da Larry Page e Sergey Brin", "tokens": [50964, 1156, 33627, 947, 4873, 43754, 17161, 10409, 8036, 1026, 19822, 2253, 1220, 419, 13384, 1257, 4873, 287, 6, 20422, 50017, 3280, 417, 2918, 2513, 21217, 49, 657, 1153, 2513, 1120, 18145, 21217, 308, 49238, 1603, 259, 51414], "temperature": 0.0, "avg_logprob": -0.1403556096142736, "compression_ratio": 1.4757281553398058, "no_speech_prob": 0.428955078125, "words": null}, {"id": 11, "seek": 14100, "start": 120.0, "end": 131.0, "text": " che permise alla allora neonata Google di superare i propri maggiori concorrenti nonostante essi fossero entrati in attivit\u00e0 ben 4 anni prima del motore di Mountain View.", "tokens": [50364, 947, 4784, 908, 11591, 44141, 30820, 3274, 3329, 1026, 1687, 543, 741, 40465, 44639, 1973, 72, 1588, 284, 1753, 72, 2107, 555, 2879, 2097, 72, 14090, 2032, 948, 4481, 72, 294, 951, 592, 12445, 3271, 1017, 31164, 19507, 1103, 2184, 418, 1026, 15586, 13909, 13, 50914], "temperature": 0.0, "avg_logprob": -0.16131524201277847, "compression_ratio": 1.4669603524229076, "no_speech_prob": 0.572265625, "words": null}, {"id": 12, "seek": 14100, "start": 132.0, "end": 141.0, "text": " Ed \u00e8 proprio per questo motivo ed anche perch\u00e9 il funzionamento della prima versione di PageRank fu reso pubblico dagli stessi autori con un documento del 1998", "tokens": [50964, 3977, 4873, 28203, 680, 10263, 35804, 1257, 11585, 14303, 1930, 49345, 313, 8824, 11618, 19507, 3037, 68, 1026, 21217, 49, 657, 8536, 319, 539, 1535, 11489, 78, 15460, 2081, 342, 442, 72, 1476, 7386, 416, 517, 4166, 78, 1103, 21404, 51414], "temperature": 0.0, "avg_logprob": -0.16131524201277847, "compression_ratio": 1.4669603524229076, "no_speech_prob": 0.572265625, "words": null}, {"id": 13, "seek": 15200, "start": 142.0, "end": 152.0, "text": " che nell'episodio di oggi andremo a scoprire i principi base di questo algoritmo che ha ricoperto un ruolo cos\u00ec importante per la costruzione di internet cos\u00ec come oggi lo conosciamo.", "tokens": [50414, 947, 44666, 6, 595, 271, 378, 1004, 1026, 34768, 293, 44172, 257, 795, 404, 38920, 741, 6959, 72, 3096, 1026, 10263, 3501, 50017, 3280, 947, 324, 367, 14149, 13098, 517, 5420, 7902, 23278, 9416, 680, 635, 2063, 894, 19706, 1026, 4705, 23278, 808, 34768, 450, 49892, 42052, 13, 50914], "temperature": 0.0, "avg_logprob": -0.156700726885062, "compression_ratio": 1.4122137404580153, "no_speech_prob": 0.391357421875, "words": null}, {"id": 14, "seek": 18000, "start": 152.0, "end": 180.0, "text": " Nell'episodio numero 28 abbiamo illustrato un metodo basilare per ordinare alcune pagine come pi\u00f9 o meno attinenti rispetto a una ricerca basandoci su elementi come la distanza tra le parole cercate e il ruolo che tali parole assumono all'interno del testo.", "tokens": [50364, 426, 898, 6, 595, 271, 378, 1004, 46839, 7562, 22815, 8490, 43037, 517, 1131, 17423, 987, 388, 543, 680, 25376, 543, 20005, 2613, 280, 10260, 808, 10589, 277, 40236, 951, 11058, 72, 2253, 42801, 257, 2002, 21040, 36127, 987, 1806, 537, 459, 4478, 72, 808, 635, 1483, 20030, 944, 476, 26783, 36099, 473, 308, 1930, 5420, 7902, 947, 4023, 72, 26783, 5339, 8957, 439, 6, 5106, 1771, 1103, 1500, 78, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1633333388964335, "compression_ratio": 1.4827586206896552, "no_speech_prob": 0.90771484375, "words": null}, {"id": 15, "seek": 21000, "start": 181.0, "end": 191.0, "text": " Ora per\u00f2 con l'algoritmo PageRank facciamo un passo in pi\u00f9 e aggiungiamo altri elementi che ci permettano di migliorare la precisione della nostra classificazione.", "tokens": [50414, 43672, 12673, 416, 287, 6, 20422, 50017, 3280, 21217, 49, 657, 1915, 42052, 517, 38159, 294, 10589, 308, 42254, 1063, 7415, 33707, 4478, 72, 947, 6983, 21540, 3730, 1026, 6186, 75, 1973, 543, 635, 18356, 68, 11618, 34311, 1508, 1089, 12928, 13, 50914], "temperature": 0.0, "avg_logprob": -0.12937213412118614, "compression_ratio": 1.5662650602409638, "no_speech_prob": 0.157958984375, "words": null}, {"id": 16, "seek": 21000, "start": 192.0, "end": 199.0, "text": " In pratica cerchiamo un modo per aumentare le probabilit\u00e0 di restituire la risposta pi\u00f9 corretta possibile ai nostri utenti.", "tokens": [50964, 682, 28844, 2262, 10146, 339, 7415, 517, 16664, 680, 17128, 543, 476, 31959, 12445, 1026, 1472, 6380, 621, 635, 2253, 79, 8638, 10589, 1181, 1505, 1328, 50184, 9783, 10397, 470, 2839, 23012, 13, 51314], "temperature": 0.0, "avg_logprob": -0.12937213412118614, "compression_ratio": 1.5662650602409638, "no_speech_prob": 0.157958984375, "words": null}, {"id": 17, "seek": 21000, "start": 200.0, "end": 209.0, "text": " L'idea alla base di PageRank sta nel fatto che in generale le pagine web sono collegate fra loro.", "tokens": [51364, 441, 6, 482, 64, 11591, 3096, 1026, 21217, 49, 657, 11135, 15373, 23228, 947, 294, 1337, 1220, 476, 280, 10260, 3670, 9259, 13300, 473, 6600, 28810, 13, 51814], "temperature": 0.0, "avg_logprob": -0.12937213412118614, "compression_ratio": 1.5662650602409638, "no_speech_prob": 0.157958984375, "words": null}, {"id": 18, "seek": 23800, "start": 210.0, "end": 215.0, "text": " Come ben sappiamo infatti tantissimi siti rimandano spesso e volentieri ad altri siti.", "tokens": [50364, 2492, 3271, 46938, 7415, 1536, 21515, 12095, 891, 10121, 1394, 72, 15982, 474, 3730, 637, 5557, 308, 1996, 317, 45980, 614, 33707, 1394, 72, 13, 50614], "temperature": 0.0, "avg_logprob": -0.1370389407775441, "compression_ratio": 1.662551440329218, "no_speech_prob": 0.0079345703125, "words": null}, {"id": 19, "seek": 23800, "start": 216.0, "end": 229.0, "text": " Pensiamo ad esempio ad un quotidiano online o a un blog o a un forum e noteremo che gli articoli in esso contenuti sono spesso pieni di link che fanno riferimento ad altre pagine sparse per il web.", "tokens": [50664, 45035, 7415, 614, 33627, 614, 517, 44017, 6254, 2950, 277, 257, 517, 6968, 277, 257, 517, 17542, 308, 406, 323, 3280, 947, 17161, 15228, 9384, 294, 2097, 78, 21795, 29161, 9259, 637, 5557, 26274, 72, 1026, 2113, 947, 283, 13484, 367, 9361, 10030, 614, 34983, 280, 10260, 637, 11668, 680, 1930, 3670, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1370389407775441, "compression_ratio": 1.662551440329218, "no_speech_prob": 0.0079345703125, "words": null}, {"id": 20, "seek": 23800, "start": 230.0, "end": 238.0, "text": " L'intuizione di Breen e Page fu quella di utilizzare questi link per dare un valore di autorevolezza a ciascuna pagina.", "tokens": [51364, 441, 6, 686, 84, 35740, 1026, 363, 1492, 308, 21217, 8536, 32234, 1026, 40355, 543, 29729, 2113, 680, 8955, 517, 1323, 418, 1026, 1476, 418, 3080, 20336, 2394, 257, 269, 4609, 66, 5051, 11812, 1426, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1370389407775441, "compression_ratio": 1.662551440329218, "no_speech_prob": 0.0079345703125, "words": null}, {"id": 21, "seek": 26300, "start": 238.0, "end": 254.0, "text": " In parole povere ogni pagina \u00e8 pi\u00f9 autorevole quanto pi\u00f9 viene menzionata sotto forma di link ovviamente in tutte le altre pagine e pi\u00f9 essa \u00e8 autorevole pi\u00f9 conferisce autorevolezza alle pagine a cui fa riferimento.", "tokens": [50364, 682, 26783, 714, 5887, 33189, 11812, 1426, 4873, 10589, 1476, 418, 3080, 306, 17820, 10589, 19561, 1706, 89, 313, 3274, 43754, 8366, 1026, 2113, 14187, 23347, 294, 38632, 476, 34983, 280, 10260, 308, 10589, 7208, 4873, 1476, 418, 3080, 306, 10589, 13765, 49596, 1476, 418, 3080, 20336, 2394, 5430, 280, 10260, 257, 22929, 2050, 367, 9361, 10030, 13, 51164], "temperature": 0.0, "avg_logprob": -0.16265625715255738, "compression_ratio": 1.5793991416309012, "no_speech_prob": 0.0311279296875, "words": null}, {"id": 22, "seek": 26300, "start": 255.0, "end": 263.0, "text": " Ok lo so che detta cos\u00ec sembra qualcosa di molto complicato ma in realt\u00e0 non lo \u00e8. Procediamo un passo alla volta e tutto ci apparir\u00e0 chiaro.", "tokens": [51214, 3477, 450, 370, 947, 48888, 23278, 20775, 424, 42400, 1026, 16394, 16060, 2513, 463, 294, 47512, 2107, 450, 4873, 13, 1705, 1232, 7415, 517, 38159, 11591, 18765, 308, 23048, 6983, 45914, 347, 1467, 47454, 78, 13, 51614], "temperature": 0.0, "avg_logprob": -0.16265625715255738, "compression_ratio": 1.5793991416309012, "no_speech_prob": 0.0311279296875, "words": null}, {"id": 23, "seek": 28900, "start": 264.0, "end": 281.0, "text": " Prima di tutto chiariamo il concetto di base. Per ogni pagina che Google indicizza nei propri archivi il page rank conta quanti link riesce a trovare in tutto il web che puntano a quella pagina e usa questo valore per calcolare l'autorevolezza della pagina.", "tokens": [50414, 2114, 4775, 1026, 23048, 47454, 7415, 1930, 1588, 23778, 1026, 3096, 13, 3026, 33189, 11812, 1426, 947, 3329, 4694, 7176, 34517, 40465, 3912, 33448, 1930, 3028, 6181, 24001, 4426, 72, 2113, 23932, 384, 257, 35449, 543, 294, 23048, 1930, 3670, 947, 18212, 3730, 257, 32234, 11812, 1426, 308, 29909, 10263, 1323, 418, 680, 2104, 8768, 543, 287, 6, 1375, 418, 3080, 20336, 2394, 11618, 11812, 1426, 13, 51264], "temperature": 0.0, "avg_logprob": -0.15624999453168398, "compression_ratio": 1.6371308016877637, "no_speech_prob": 0.31689453125, "words": null}, {"id": 24, "seek": 28900, "start": 282.0, "end": 289.0, "text": " In questo modo quando l'utente effettua una ricerca il motore pu\u00f2 facilmente presentargli i risultati ordinati per autorevolezza.", "tokens": [51314, 682, 10263, 16664, 7770, 287, 6, 325, 1576, 1244, 3093, 4398, 2002, 21040, 36127, 1930, 2184, 418, 26526, 10217, 4082, 1974, 33544, 2081, 741, 2253, 723, 6908, 25376, 6908, 680, 1476, 418, 3080, 20336, 2394, 13, 51664], "temperature": 0.0, "avg_logprob": -0.15624999453168398, "compression_ratio": 1.6371308016877637, "no_speech_prob": 0.31689453125, "words": null}, {"id": 25, "seek": 31500, "start": 289.0, "end": 300.0, "text": " Ora per\u00f2 chiunque utilizzi il web sa benissimo che non sempre un blog, un tweet o uno stato su Facebook contengono link a qualcosa che l'autore apprezza.", "tokens": [50364, 43672, 12673, 13228, 409, 1077, 19906, 3992, 1930, 3670, 601, 3271, 34966, 947, 2107, 9553, 517, 6968, 11, 517, 15258, 277, 8526, 29657, 459, 4384, 660, 1501, 8957, 2113, 257, 42400, 947, 287, 6, 1375, 418, 724, 17693, 2394, 13, 50914], "temperature": 0.0, "avg_logprob": -0.17286035794395585, "compression_ratio": 1.5755102040816327, "no_speech_prob": 0.3271484375, "words": null}, {"id": 26, "seek": 31500, "start": 301.0, "end": 315.0, "text": " Se \u00e8 infatti vero che ciascuno di noi pu\u00f2 pubblicare un link a una pagina perch\u00e9 vuole farne conoscere i contenuti \u00e8 per\u00f2 altrettanto vero che si possa fare riferimento a pagine che ci fanno indignare o che vogliamo criticare.", "tokens": [50964, 1100, 4873, 1536, 21515, 1306, 78, 947, 269, 4609, 66, 12638, 1026, 22447, 26526, 1535, 11489, 543, 517, 2113, 257, 2002, 11812, 1426, 14303, 9732, 4812, 1400, 716, 416, 10466, 323, 741, 21795, 29161, 4873, 12673, 4955, 14313, 5857, 1306, 78, 947, 1511, 41564, 11994, 367, 9361, 10030, 257, 280, 10260, 947, 6983, 283, 13484, 1016, 788, 543, 277, 947, 31273, 49926, 7850, 543, 13, 51664], "temperature": 0.0, "avg_logprob": -0.17286035794395585, "compression_ratio": 1.5755102040816327, "no_speech_prob": 0.3271484375, "words": null}, {"id": 27, "seek": 33500, "start": 315.0, "end": 323.0, "text": " Oltre a questo nulla vieta a qualcuno di creare link a pagine perch\u00e9 gli autori gli hanno corrisposto un compenso per farlo.", "tokens": [50364, 422, 2282, 265, 257, 10263, 18184, 64, 371, 1684, 64, 257, 32101, 12638, 1026, 1197, 543, 2113, 257, 280, 10260, 14303, 17161, 1476, 7386, 17161, 26595, 1181, 5714, 79, 22756, 517, 715, 268, 539, 680, 1400, 752, 13, 50764], "temperature": 0.0, "avg_logprob": -0.11798469722270966, "compression_ratio": 1.6040609137055837, "no_speech_prob": 0.3134765625, "words": null}, {"id": 28, "seek": 33500, "start": 324.0, "end": 335.0, "text": " O ancora \u00e8 possibile per qualcuno creare una rete di centinaia di pagine che fanno riferimento l'una all'altra allo scopo di simulare un interesse per i contenuti che in realt\u00e0 non esiste.", "tokens": [50814, 422, 30656, 4873, 50184, 680, 32101, 12638, 1197, 543, 2002, 319, 975, 1026, 1489, 1426, 654, 1026, 280, 10260, 947, 283, 13484, 367, 9361, 10030, 287, 6, 5051, 439, 6, 38865, 439, 78, 795, 404, 78, 1026, 1034, 425, 543, 517, 728, 7357, 680, 741, 21795, 29161, 947, 294, 47512, 2107, 785, 8375, 13, 51364], "temperature": 0.0, "avg_logprob": -0.11798469722270966, "compression_ratio": 1.6040609137055837, "no_speech_prob": 0.3134765625, "words": null}, {"id": 29, "seek": 36000, "start": 336.0, "end": 345.0, "text": " Siamo quindi sicuri che pur parlando in ognuno di questi casi di collegamenti essi abbiano tutti lo stesso valore dal punto di vista di una ricerca sul web?", "tokens": [50414, 318, 7415, 15727, 33579, 9744, 947, 1864, 971, 16201, 294, 277, 4568, 12638, 1026, 29729, 22567, 1026, 13300, 2466, 72, 2097, 72, 16903, 6254, 19822, 450, 44413, 1323, 418, 11702, 14326, 1026, 22553, 1026, 2002, 21040, 36127, 17603, 3670, 30, 50864], "temperature": 0.0, "avg_logprob": -0.1506696383158366, "compression_ratio": 1.5267489711934157, "no_speech_prob": 0.44482421875, "words": null}, {"id": 30, "seek": 36000, "start": 346.0, "end": 360.0, "text": " Beh ovviamente la risposta a questa domanda \u00e8 no e infatti l'algoritmo PageRank gi\u00e0 nella sua prima versione era in grado di mitigare enormemente l'effetto di tutti questi disturbi nel calcolo dell'autorevolezza.", "tokens": [50914, 13068, 14187, 23347, 635, 2253, 79, 8638, 257, 16540, 3285, 5575, 4873, 572, 308, 1536, 21515, 287, 6, 20422, 50017, 3280, 21217, 49, 657, 30469, 23878, 8233, 19507, 3037, 68, 4249, 294, 677, 1573, 1026, 15699, 543, 8473, 16288, 287, 6, 30774, 23778, 1026, 19822, 29729, 10242, 5614, 15373, 2104, 46086, 19781, 6, 1375, 418, 3080, 20336, 2394, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1506696383158366, "compression_ratio": 1.5267489711934157, "no_speech_prob": 0.44482421875, "words": null}, {"id": 31, "seek": 38200, "start": 361.0, "end": 368.0, "text": " La soluzione a questo problema implementata da Breen e Page \u00e8 al tempo stesso molto semplice ed efficace.", "tokens": [50414, 2369, 1404, 3334, 5328, 257, 10263, 12395, 4445, 3274, 1120, 363, 1492, 308, 21217, 4873, 419, 8972, 44413, 16394, 4361, 564, 573, 1257, 4703, 617, 13, 50764], "temperature": 0.0, "avg_logprob": -0.14095395176034226, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0284271240234375, "words": null}, {"id": 32, "seek": 38200, "start": 369.0, "end": 382.0, "text": " \u00c8 bastato aggiungere la regola che nel calcolo dell'autorevolezza di una pagina i collegamenti provenienti da pagine pi\u00f9 autorevoli hanno un valore maggiore rispetto a quelli provenienti da pagine meno autorevoli.", "tokens": [50814, 34495, 8414, 2513, 42254, 1063, 323, 635, 1121, 4711, 947, 15373, 2104, 46086, 19781, 6, 1375, 418, 3080, 20336, 2394, 1026, 2002, 11812, 1426, 741, 13300, 2466, 72, 12785, 1196, 72, 1120, 280, 10260, 10589, 1476, 418, 85, 9384, 26595, 517, 1323, 418, 463, 22771, 418, 2253, 42801, 257, 631, 16320, 12785, 1196, 72, 1120, 280, 10260, 40236, 1476, 418, 85, 9384, 13, 51464], "temperature": 0.0, "avg_logprob": -0.14095395176034226, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0284271240234375, "words": null}, {"id": 33, "seek": 40300, "start": 383.0, "end": 399.0, "text": " Questa semplice accortezza permette a PageRank di escludere o limitare l'influenza che i link poco utili o artificiosi producono nella classificazione e al tempo stesso crea una lista di pagine i cui valori di autorevolezza sono di tipo esponenziale.", "tokens": [50414, 2326, 7841, 4361, 564, 573, 1317, 477, 4371, 2394, 4784, 3007, 257, 21217, 49, 657, 1026, 4721, 1471, 323, 277, 4948, 543, 287, 6, 19920, 2781, 23691, 947, 741, 2113, 10639, 2839, 2312, 277, 39905, 2717, 72, 1082, 45846, 23878, 1508, 1089, 12928, 308, 419, 8972, 44413, 1197, 64, 2002, 27764, 1026, 280, 10260, 741, 22929, 1323, 7386, 1026, 1476, 418, 3080, 20336, 2394, 9259, 1026, 9746, 7089, 266, 11368, 25051, 13, 51214], "temperature": 0.0, "avg_logprob": -0.13850203577591025, "compression_ratio": 1.54, "no_speech_prob": 0.0557861328125, "words": null}, {"id": 34, "seek": 40300, "start": 400.0, "end": 403.0, "text": " Proviamo a fare un esempio per chiarire bene il concetto.", "tokens": [51264, 15685, 7415, 257, 11994, 517, 33627, 680, 47454, 621, 2537, 1930, 1588, 23778, 13, 51414], "temperature": 0.0, "avg_logprob": -0.13850203577591025, "compression_ratio": 1.54, "no_speech_prob": 0.0557861328125, "words": null}, {"id": 35, "seek": 41900, "start": 403.0, "end": 419.0, "text": " Fingiamo che in tutto il web esistano solo due podcast di informatica. Uno \u00e8 Pensieri in Codice, l'altro \u00e8 Pillole di Bit che a proposito \u00e8 un bellissimo podcast e io vi consiglio caldamente di ascoltare, vi lascio un link in descrizione.", "tokens": [50364, 479, 278, 7415, 947, 294, 23048, 1930, 3670, 785, 468, 3730, 6944, 3462, 7367, 1026, 1356, 267, 2262, 13, 37468, 4873, 45035, 45980, 294, 383, 378, 573, 11, 287, 6, 47484, 4873, 44656, 4812, 1026, 9101, 947, 257, 7532, 3528, 4873, 517, 4549, 34966, 7367, 308, 19785, 1932, 40233, 19987, 2104, 67, 3439, 1026, 15526, 4837, 543, 11, 1932, 2439, 8529, 517, 2113, 294, 2189, 19706, 13, 51164], "temperature": 0.0, "avg_logprob": -0.20246479502865966, "compression_ratio": 1.4011627906976745, "no_speech_prob": 0.68115234375, "words": null}, {"id": 36, "seek": 43800, "start": 420.0, "end": 438.0, "text": " Ora, fingiamo anche che tutto il web sia composto da sole 27 pagine. Due appartengono ai due podcast appunto e delle restanti 25, 15 contengono link verso Pensieri in Codice e 10 verso Pillole di Bit.", "tokens": [50414, 43672, 11, 3823, 7415, 11585, 947, 23048, 1930, 3670, 25176, 20203, 78, 1120, 12321, 7634, 280, 10260, 13, 18980, 724, 446, 1501, 8957, 9783, 3462, 7367, 724, 24052, 308, 16485, 1472, 11520, 3552, 11, 2119, 660, 1501, 8957, 2113, 49786, 45035, 45980, 294, 383, 378, 573, 308, 1266, 49786, 44656, 4812, 1026, 9101, 13, 51314], "temperature": 0.0, "avg_logprob": -0.2113415940568365, "compression_ratio": 1.3513513513513513, "no_speech_prob": 0.9560546875, "words": null}, {"id": 37, "seek": 45600, "start": 439.0, "end": 456.0, "text": " Secondo quanto abbiamo detto all'inizio verrebbe automatico pensare che effettuando una ricerca per podcast di informatica debbano venire fuori i due risultati nell'ordine, prima Pensieri in Codice e poi Pillole di Bit con i rispettivi punteggi di 15 e 10.", "tokens": [50414, 5736, 78, 17820, 22815, 41031, 439, 6, 9328, 1004, 1306, 39487, 12509, 78, 6099, 543, 947, 1244, 42747, 1806, 2002, 21040, 36127, 680, 7367, 1026, 1356, 267, 2262, 3001, 65, 3730, 6138, 621, 8536, 7386, 741, 3462, 2253, 723, 6908, 44666, 6, 765, 533, 11, 19507, 45035, 45980, 294, 383, 378, 573, 308, 19260, 44656, 4812, 1026, 9101, 416, 741, 2253, 79, 3093, 33448, 4468, 975, 22771, 1026, 2119, 308, 1266, 13, 51264], "temperature": 0.0, "avg_logprob": -0.16447368911222407, "compression_ratio": 1.4065934065934067, "no_speech_prob": 0.6357421875, "words": null}, {"id": 38, "seek": 47700, "start": 457.0, "end": 477.0, "text": " Tuttavia consideriamo questa situazione. Tra le 10 pagine che puntano a Pillole di Bit ce n'\u00e8 una che si intitola Esperto di Podcast. Di tutte le 27 pagine del nostro finto web ben 20 fanno riferimento all'esperto di podcast perch\u00e9 quasi tutti si fidano dei suoi pareri sui vari podcast.", "tokens": [50414, 314, 13478, 23015, 1949, 7415, 16540, 2054, 12928, 13, 5403, 476, 1266, 280, 10260, 947, 18212, 3730, 257, 44656, 4812, 1026, 9101, 1769, 297, 6, 1462, 2002, 947, 1511, 560, 270, 4711, 24142, 1353, 1026, 29972, 13, 8789, 38632, 476, 7634, 280, 10260, 1103, 35779, 283, 17246, 3670, 3271, 945, 283, 13484, 367, 9361, 10030, 439, 6, 34698, 1353, 1026, 7367, 14303, 20954, 19822, 1511, 24553, 3730, 13874, 459, 4869, 971, 16310, 459, 72, 3034, 7367, 13, 51414], "temperature": 0.0, "avg_logprob": -0.16367669458742495, "compression_ratio": 1.467005076142132, "no_speech_prob": 0.80419921875, "words": null}, {"id": 39, "seek": 50700, "start": 477.0, "end": 499.0, "text": " Riapplicando quindi i calcoli la pagina Pillole di Bit non avr\u00e0 pi\u00f9 un punteggio di 10, bens\u00ec uno di 9, la somma delle 9 pagine generiche, pi\u00f9 21, il valore di autorevolezza della pagina Esperto di Podcast e quindi avr\u00e0 un totale di 30 e questo la far\u00e0 passare automaticamente in prima posizione.", "tokens": [50364, 497, 654, 427, 1050, 1806, 15727, 741, 2104, 8768, 72, 635, 11812, 1426, 44656, 4812, 1026, 9101, 2107, 1305, 39212, 10589, 517, 4468, 975, 1615, 1004, 1026, 1266, 11, 272, 694, 4749, 8526, 1026, 1722, 11, 635, 262, 30243, 16485, 1722, 280, 10260, 1337, 9304, 11, 10589, 5080, 11, 1930, 1323, 418, 1026, 1476, 418, 3080, 20336, 2394, 11618, 11812, 1426, 24142, 1353, 1026, 29972, 308, 15727, 1305, 39212, 517, 1993, 1220, 1026, 2217, 308, 10263, 635, 1400, 1467, 1320, 543, 12509, 3439, 294, 19507, 1366, 35740, 13, 51464], "temperature": 0.0, "avg_logprob": -0.15324519722016303, "compression_ratio": 1.4519230769230769, "no_speech_prob": 0.5107421875, "words": null}, {"id": 40, "seek": 52600, "start": 508.0, "end": 526.0, "text": " Ora, sembrerebbe che tutti i problemi di ordinamento siano stati risolti con i meccanismi che abbiamo descritto nel blocco precedente, ma in realt\u00e0 questo non \u00e8 affatto vero. Un problema a questo punto \u00e8 molto poco intuibile ma c'\u00e8 ed \u00e8 anche molto grave.", "tokens": [50414, 43672, 11, 4361, 1443, 323, 39042, 947, 19822, 741, 1154, 72, 1026, 25376, 8824, 262, 6254, 2219, 72, 2253, 4837, 72, 416, 741, 385, 1914, 282, 1434, 72, 947, 22815, 7471, 18579, 78, 15373, 1749, 49552, 16969, 1576, 11, 463, 294, 47512, 10263, 2107, 4873, 2096, 37491, 1306, 78, 13, 1156, 12395, 257, 10263, 14326, 4873, 16394, 10639, 560, 84, 30898, 463, 269, 6, 1462, 1257, 4873, 11585, 16394, 12525, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1740625023841858, "compression_ratio": 1.4942528735632183, "no_speech_prob": 0.7587890625, "words": null}, {"id": 41, "seek": 54300, "start": 526.0, "end": 543.0, "text": " Per capirlo immaginiamo sempre di avere un web ridotto a poche pagine. Ad esempio immaginiamo di avere la pagina A che punta alla pagina B, B a C e C di nuovo ad A. E inoltre immaginiamo di avere una pagina D che punta sempre ad A.", "tokens": [50364, 3026, 1410, 347, 752, 3397, 559, 259, 7415, 9553, 1026, 37914, 517, 3670, 3973, 18838, 257, 714, 1876, 280, 10260, 13, 1999, 33627, 3397, 559, 259, 7415, 1026, 37914, 635, 11812, 1426, 316, 947, 4468, 1328, 11591, 11812, 1426, 363, 11, 363, 257, 383, 308, 383, 1026, 49348, 614, 316, 13, 462, 294, 401, 3599, 3397, 559, 259, 7415, 1026, 37914, 2002, 11812, 1426, 413, 947, 4468, 1328, 9553, 614, 316, 13, 51214], "temperature": 0.0, "avg_logprob": -0.13034538807053314, "compression_ratio": 1.711111111111111, "no_speech_prob": 0.95068359375, "words": null}, {"id": 42, "seek": 57100, "start": 544.0, "end": 571.0, "text": " In una condizione del genere, se proviamo a calcolare il valore di autorevolezza, ci troviamo in una strana situazione. La pagina D, infatti, causer\u00e0 il ricalcolo del valore della pagina A, la quale a sua volta produrr\u00e0 il ricalcolo di B, poi di C e poi C nuovamente produrr\u00e0 il ricalcolo del valore di A, ma ricalcolando A dovremo ricalcolare anche B e poi C e poi di nuovo A e cos\u00ec via.", "tokens": [50414, 682, 2002, 2224, 35740, 1103, 41553, 11, 369, 1439, 7415, 257, 2104, 8768, 543, 1930, 1323, 418, 1026, 1476, 418, 3080, 20336, 2394, 11, 6983, 35449, 7415, 294, 2002, 1056, 2095, 2054, 12928, 13, 2369, 11812, 1426, 413, 11, 1536, 21515, 11, 3302, 260, 1467, 1930, 367, 804, 46086, 1103, 1323, 418, 11618, 11812, 1426, 316, 11, 635, 421, 1220, 257, 8233, 18765, 15792, 374, 39212, 1930, 367, 804, 46086, 1026, 363, 11, 19260, 1026, 383, 308, 19260, 383, 3822, 5179, 3439, 15792, 374, 39212, 1930, 367, 804, 46086, 1103, 1323, 418, 1026, 316, 11, 463, 367, 804, 8768, 1806, 316, 30870, 44172, 367, 804, 8768, 543, 11585, 363, 308, 19260, 383, 308, 19260, 1026, 49348, 316, 308, 23278, 5766, 13, 51764], "temperature": 0.0, "avg_logprob": -0.15424999332427977, "compression_ratio": 1.798165137614679, "no_speech_prob": 0.96142578125, "words": null}, {"id": 43, "seek": 59000, "start": 572.0, "end": 590.0, "text": " A questo punto dovrebbe essere chiaro che siamo entrati in una di quelle fastidiosissime condizioni dell'informatica che si chiamano loop. Una operazione ne condiziona un'altra che a sua volta ne condiziona una terza e questa terza condiziona di nuovo la prima e tutto si ripete all'infinito.", "tokens": [50414, 316, 10263, 14326, 30870, 39487, 19799, 47454, 78, 947, 33459, 948, 4481, 72, 294, 2002, 1026, 29237, 2370, 327, 2717, 891, 1312, 2224, 590, 15273, 19781, 6, 37811, 267, 2262, 947, 1511, 417, 2918, 3730, 6367, 13, 15491, 2208, 12928, 408, 2224, 590, 21758, 517, 6, 38865, 947, 257, 8233, 18765, 408, 2224, 590, 21758, 2002, 1796, 2394, 308, 16540, 1796, 2394, 2224, 590, 21758, 1026, 49348, 635, 19507, 308, 23048, 1511, 12782, 3498, 439, 6, 259, 5194, 3528, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1465773768723011, "compression_ratio": 1.6685714285714286, "no_speech_prob": 0.373291015625, "words": null}, {"id": 44, "seek": 61200, "start": 591.0, "end": 599.0, "text": " Ovviamente il PageRank non soffre nella realt\u00e0 di questo problema e quindi noi ora proveremo a capire il perch\u00e9.", "tokens": [50414, 50005, 23347, 1930, 21217, 49, 657, 2107, 370, 602, 265, 23878, 47512, 1026, 10263, 12395, 308, 15727, 22447, 33714, 1439, 323, 3280, 257, 1410, 621, 1930, 14303, 13, 50814], "temperature": 0.0, "avg_logprob": -0.17225151105099415, "compression_ratio": 1.4720812182741116, "no_speech_prob": 0.91064453125, "words": null}, {"id": 45, "seek": 61200, "start": 600.0, "end": 612.0, "text": " La soluzione che Breen e Page scogitarono per questo problema \u00e8 molto difficile da intuire e si basa sull'introduzione di un fattore di casualit\u00e0 all'interno dell'algoritmo.", "tokens": [50864, 2369, 1404, 3334, 5328, 947, 363, 1492, 308, 21217, 795, 664, 3981, 8957, 680, 10263, 12395, 4873, 16394, 26607, 1120, 560, 43612, 308, 1511, 987, 64, 459, 285, 6, 38132, 19706, 1026, 517, 283, 1591, 418, 1026, 13052, 12445, 439, 6, 5106, 1771, 19781, 6, 20422, 50017, 3280, 13, 51464], "temperature": 0.0, "avg_logprob": -0.17225151105099415, "compression_ratio": 1.4720812182741116, "no_speech_prob": 0.91064453125, "words": null}, {"id": 46, "seek": 63800, "start": 612.0, "end": 618.0, "text": " In pratica i due inventori strutturarono il processo di assegnazione dell'autorevolezza nel seguente modo.", "tokens": [50364, 682, 28844, 2262, 741, 3462, 7962, 7386, 1056, 13478, 374, 6372, 78, 1930, 27939, 1026, 5907, 70, 629, 19706, 19781, 6, 1375, 418, 3080, 20336, 2394, 15373, 8878, 1576, 16664, 13, 50664], "temperature": 0.0, "avg_logprob": -0.13935810810810811, "compression_ratio": 1.6533333333333333, "no_speech_prob": 0.5986328125, "words": null}, {"id": 47, "seek": 63800, "start": 619.0, "end": 629.0, "text": " L'algoritmo parte da una pagina a caso tra quelle disponibili e segue casualmente uno dei link che questa possiede verso le altre pagine.", "tokens": [50714, 441, 6, 20422, 50017, 3280, 6975, 1120, 2002, 11812, 1426, 257, 9666, 944, 29237, 23311, 897, 2312, 308, 33850, 13052, 4082, 8526, 13874, 2113, 947, 16540, 1402, 1091, 68, 49786, 476, 34983, 280, 10260, 13, 51214], "temperature": 0.0, "avg_logprob": -0.13935810810810811, "compression_ratio": 1.6533333333333333, "no_speech_prob": 0.5986328125, "words": null}, {"id": 48, "seek": 63800, "start": 630.0, "end": 638.0, "text": " Arrivato alla seconda pagina ne incrementa il valore di autorevolezza e sceglie un nuovo link a caso e procede alla successiva.", "tokens": [51264, 1587, 29994, 2513, 11591, 1150, 64, 11812, 1426, 408, 26200, 64, 1930, 1323, 418, 1026, 1476, 418, 3080, 20336, 2394, 308, 262, 384, 70, 6302, 517, 49348, 2113, 257, 9666, 308, 6682, 68, 11591, 2245, 5931, 13, 51664], "temperature": 0.0, "avg_logprob": -0.13935810810810811, "compression_ratio": 1.6533333333333333, "no_speech_prob": 0.5986328125, "words": null}, {"id": 49, "seek": 65900, "start": 639.0, "end": 649.0, "text": " Inoltre ad ogni passaggio di pagina in pagina esiste una probabilit\u00e0 del 15% che l'algoritmo si fermi e riparta da un'altra pagina a caso.", "tokens": [50414, 682, 401, 3599, 614, 33189, 1320, 30763, 1026, 11812, 1426, 294, 11812, 1426, 785, 8375, 2002, 31959, 12445, 1103, 2119, 4, 947, 287, 6, 20422, 50017, 3280, 1511, 26558, 72, 308, 12782, 19061, 1120, 517, 6, 38865, 11812, 1426, 257, 9666, 13, 50914], "temperature": 0.0, "avg_logprob": -0.12438552835014428, "compression_ratio": 1.5340314136125655, "no_speech_prob": 0.0330810546875, "words": null}, {"id": 50, "seek": 65900, "start": 650.0, "end": 659.0, "text": " Ora capite bene che con un comportamento del genere non si rischia pi\u00f9 di entrare in un loop perch\u00e9 prima o poi l'algoritmo si ferma e riparte altrove.", "tokens": [50964, 43672, 1410, 642, 2537, 947, 416, 517, 25883, 8824, 1103, 41553, 2107, 1511, 2253, 339, 654, 10589, 1026, 22284, 265, 294, 517, 6367, 14303, 19507, 277, 19260, 287, 6, 20422, 50017, 3280, 1511, 26558, 64, 308, 12782, 11026, 4955, 32467, 13, 51414], "temperature": 0.0, "avg_logprob": -0.12438552835014428, "compression_ratio": 1.5340314136125655, "no_speech_prob": 0.0330810546875, "words": null}, {"id": 51, "seek": 68000, "start": 660.0, "end": 669.0, "text": " Ma quello che resta da capire \u00e8 se il risultato di un processo del genere possa essere considerato equivalente a quello che abbiamo descritto nel blocco precedente.", "tokens": [50414, 4042, 22813, 947, 1472, 64, 1120, 1410, 621, 4873, 369, 1930, 2253, 723, 2513, 1026, 517, 27939, 1103, 41553, 41564, 19799, 1949, 2513, 9052, 1576, 257, 22813, 947, 22815, 7471, 18579, 78, 15373, 1749, 49552, 16969, 1576, 13, 50864], "temperature": 0.0, "avg_logprob": -0.17177973269689373, "compression_ratio": 1.5820895522388059, "no_speech_prob": 0.333984375, "words": null}, {"id": 52, "seek": 68000, "start": 670.0, "end": 680.0, "text": " Dal momento per\u00f2 che siamo in un podcast io non posso mostrarvi una dimostrazione scritta e per questo motivo proviamo ad affidarci a un po' di logica.", "tokens": [50914, 17357, 9333, 12673, 947, 33459, 294, 517, 7367, 19785, 2107, 22501, 21487, 4917, 2002, 5013, 555, 424, 19706, 5918, 21870, 308, 680, 10263, 35804, 1439, 7415, 614, 2096, 48133, 537, 257, 517, 714, 6, 1026, 3565, 2262, 13, 51414], "temperature": 0.0, "avg_logprob": -0.17177973269689373, "compression_ratio": 1.5820895522388059, "no_speech_prob": 0.333984375, "words": null}, {"id": 53, "seek": 69900, "start": 680.0, "end": 689.0, "text": " Fingiamo quindi che il nostro web sia formato da 100 pagine e tutte queste pagine siano interconnesse fra loro da 2 o 3 collegamenti.", "tokens": [50364, 479, 278, 7415, 15727, 947, 1930, 35779, 3670, 25176, 1254, 2513, 1120, 2319, 280, 10260, 308, 38632, 35455, 280, 10260, 262, 6254, 728, 1671, 4081, 405, 6600, 28810, 1120, 568, 277, 805, 13300, 2466, 72, 13, 50814], "temperature": 0.0, "avg_logprob": -0.15280033009392874, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.387939453125, "words": null}, {"id": 54, "seek": 69900, "start": 690.0, "end": 699.0, "text": " Supponiamo poi che esista una sola pagina di queste 100 che chiameremo A alla quale fanno riferimento 50 delle nostre pagine.", "tokens": [50864, 9391, 266, 7415, 19260, 947, 785, 5236, 2002, 34162, 11812, 1426, 1026, 35455, 2319, 947, 417, 2918, 323, 3280, 316, 11591, 421, 1220, 283, 13484, 367, 9361, 10030, 2625, 16485, 10397, 265, 280, 10260, 13, 51314], "temperature": 0.0, "avg_logprob": -0.15280033009392874, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.387939453125, "words": null}, {"id": 55, "seek": 72400, "start": 700.0, "end": 724.0, "text": " In una situazione del genere \u00e8 abbastanza facile intuire che se partissimo da una pagina a caso e ci muovessimo di collegamento in collegamento a caso le possibilit\u00e0 di capitare sulla pagina A sarebbero molto pi\u00f9 alte che su qualsiasi altra pagina perch\u00e9 avremo almeno 50 strade che portano ad essa contro le 2 o 3 che portano a qualsiasi altra.", "tokens": [50414, 682, 2002, 2054, 12928, 1103, 41553, 4873, 16903, 525, 20030, 23670, 560, 43612, 947, 369, 644, 34966, 1120, 2002, 11812, 1426, 257, 9666, 308, 6983, 2992, 5179, 442, 6934, 1026, 13300, 8824, 294, 13300, 8824, 257, 9666, 476, 24145, 12445, 1026, 33807, 543, 33625, 11812, 1426, 316, 38706, 65, 46659, 16394, 10589, 38973, 947, 459, 421, 1124, 4609, 72, 4955, 424, 11812, 1426, 14303, 1305, 44172, 419, 43232, 2625, 1056, 762, 947, 2436, 3730, 614, 7208, 1583, 476, 568, 277, 805, 947, 2436, 3730, 257, 421, 1124, 4609, 72, 4955, 424, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1426595007069409, "compression_ratio": 1.6540284360189574, "no_speech_prob": 0.55712890625, "words": null}, {"id": 56, "seek": 74400, "start": 725.0, "end": 744.0, "text": " Se ripetessimo quindi il processo un numero sufficientemente alto di volte mediamente le pagine con pi\u00f9 link in ingresso tenderebbero ad essere attraversate pi\u00f9 volte perch\u00e9 ci sarebbero tante strade che portano ad esse e sarebbe quindi pi\u00f9 facile raggiungerle per l'algoritmo che si muove casualmente.", "tokens": [50414, 1100, 12782, 302, 442, 6934, 15727, 1930, 27939, 517, 46839, 11563, 16288, 21275, 1026, 37801, 3021, 4082, 476, 280, 10260, 416, 10589, 2113, 294, 3957, 29652, 3928, 323, 65, 46659, 614, 19799, 951, 424, 840, 473, 10589, 37801, 14303, 6983, 38706, 65, 46659, 256, 2879, 1056, 762, 947, 2436, 3730, 614, 6755, 308, 38706, 39042, 15727, 10589, 23670, 17539, 7834, 1063, 260, 306, 680, 287, 6, 20422, 50017, 3280, 947, 1511, 2992, 1682, 13052, 4082, 13, 51364], "temperature": 0.0, "avg_logprob": -0.13808594420552253, "compression_ratio": 1.5854922279792747, "no_speech_prob": 0.7294921875, "words": null}, {"id": 57, "seek": 76900, "start": 745.0, "end": 754.0, "text": " In questo modo avremmo rispettato la condizione secondo cui pagine con pi\u00f9 collegamenti in ingresso devono avere un valore pi\u00f9 alto di autorevolezza.", "tokens": [50414, 682, 10263, 16664, 1305, 265, 2174, 78, 2253, 79, 3093, 2513, 635, 2224, 35740, 41601, 22929, 280, 10260, 416, 10589, 13300, 2466, 72, 294, 3957, 29652, 1905, 8957, 37914, 517, 1323, 418, 10589, 21275, 1026, 1476, 418, 3080, 20336, 2394, 13, 50864], "temperature": 0.0, "avg_logprob": -0.15594952223965755, "compression_ratio": 1.7252252252252251, "no_speech_prob": 0.84814453125, "words": null}, {"id": 58, "seek": 76900, "start": 755.0, "end": 769.0, "text": " Sempre ragionando da un punto di vista statistico le pagine con pi\u00f9 link in ingresso tenderanno anche maggiormente a fare da ponte verso le pagine a cui puntano aumentando il numero di volte in cui queste ultime vengono raggiunte.", "tokens": [50914, 49724, 17539, 313, 1806, 1120, 517, 14326, 1026, 22553, 16012, 2789, 476, 280, 10260, 416, 10589, 2113, 294, 3957, 29652, 15036, 13484, 11585, 44639, 1973, 4082, 257, 11994, 1120, 280, 10219, 49786, 476, 280, 10260, 257, 22929, 18212, 3730, 17128, 1806, 1930, 46839, 1026, 37801, 294, 22929, 35455, 3725, 1312, 371, 1501, 8957, 17539, 7834, 7070, 13, 51614], "temperature": 0.0, "avg_logprob": -0.15594952223965755, "compression_ratio": 1.7252252252252251, "no_speech_prob": 0.84814453125, "words": null}, {"id": 59, "seek": 79400, "start": 770.0, "end": 778.0, "text": " Basandoci quindi sull'esempio precedente immaginiamo che la pagina A abbia due collegamenti uno verso B e un altro verso C.", "tokens": [50414, 5859, 1806, 537, 15727, 459, 285, 6, 279, 15970, 1004, 16969, 1576, 3397, 559, 259, 7415, 947, 635, 11812, 1426, 316, 16903, 654, 3462, 13300, 2466, 72, 8526, 49786, 363, 308, 517, 40924, 49786, 383, 13, 50814], "temperature": 0.0, "avg_logprob": -0.16030091888926648, "compression_ratio": 1.5940170940170941, "no_speech_prob": 0.63232421875, "words": null}, {"id": 60, "seek": 79400, "start": 779.0, "end": 794.0, "text": " Siccome abbiamo detto poco fa c'\u00e8 un'alta probabilit\u00e0 che procedendo a caso ci si trovi a passare per A allora \u00e8 anche molto probabile che da A si arrivi a B o a C innalzando in questo modo la possibilit\u00e0 che queste due pagine vengano raggiunte.", "tokens": [50864, 39155, 1102, 22815, 41031, 10639, 2050, 269, 6, 1462, 517, 6, 37896, 31959, 12445, 947, 6682, 3999, 257, 9666, 6983, 1511, 4495, 4917, 257, 1320, 543, 680, 316, 44141, 4873, 11585, 16394, 1239, 33288, 947, 1120, 316, 1511, 3399, 4917, 257, 363, 277, 257, 383, 294, 4660, 89, 1806, 294, 10263, 16664, 635, 24145, 12445, 947, 35455, 3462, 280, 10260, 6138, 35255, 17539, 7834, 7070, 13, 51614], "temperature": 0.0, "avg_logprob": -0.16030091888926648, "compression_ratio": 1.5940170940170941, "no_speech_prob": 0.63232421875, "words": null}, {"id": 61, "seek": 81700, "start": 795.0, "end": 804.0, "text": " Anche in questo caso quindi viene rispettato il vincolo secondo cui le pagine con un valore pi\u00f9 alto conferiscono autorevolezza maggiore a quelle a cui puntano.", "tokens": [50414, 1107, 1876, 294, 10263, 9666, 15727, 19561, 2253, 79, 3093, 2513, 1930, 371, 4647, 7902, 41601, 22929, 476, 280, 10260, 416, 517, 1323, 418, 10589, 21275, 13765, 271, 45846, 1476, 418, 3080, 20336, 2394, 463, 22771, 418, 257, 29237, 257, 22929, 18212, 3730, 13, 50864], "temperature": 0.0, "avg_logprob": -0.15028994845360824, "compression_ratio": 1.5318181818181817, "no_speech_prob": 0.157958984375, "words": null}, {"id": 62, "seek": 81700, "start": 806.0, "end": 811.0, "text": " Bene, io spero di essere riuscito a spiegare al meglio questo importante algoritmo.", "tokens": [50964, 27702, 11, 19785, 24152, 78, 1026, 19799, 367, 4872, 32030, 257, 637, 20408, 543, 419, 48911, 10263, 9416, 3501, 50017, 3280, 13, 51214], "temperature": 0.0, "avg_logprob": -0.15028994845360824, "compression_ratio": 1.5318181818181817, "no_speech_prob": 0.157958984375, "words": null}, {"id": 63, "seek": 81700, "start": 812.0, "end": 817.0, "text": " In caso contrario fatemi sapere cosa non \u00e8 chiaro nei commenti oppure nel gruppo Telegram.", "tokens": [51264, 682, 9666, 47642, 4046, 13372, 18985, 323, 10163, 2107, 4873, 47454, 78, 34517, 2871, 72, 1458, 540, 15373, 47477, 78, 14889, 1342, 13, 51514], "temperature": 0.0, "avg_logprob": -0.15028994845360824, "compression_ratio": 1.5318181818181817, "no_speech_prob": 0.157958984375, "words": null}, {"id": 64, "seek": 84700, "start": 818.0, "end": 821.0, "text": " Io per ora vi ringrazio per essere arrivati fin qui.", "tokens": [50414, 19239, 680, 33714, 1932, 4875, 30695, 1004, 680, 19799, 30697, 6908, 962, 1956, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1815952014091403, "compression_ratio": 1.5023474178403755, "no_speech_prob": 0.3984375, "words": null}, {"id": 65, "seek": 84700, "start": 822.0, "end": 834.0, "text": " Ringrazio Walter Vannini del podcast Data Nightmare per le informazioni sulla frase che avevo iniziato ad utilizzare a chiusura degli episodi e quindi vi saluto con le parole di Giovanni degli Antoni.", "tokens": [50614, 19844, 30695, 1004, 21572, 691, 969, 3812, 1103, 7367, 11888, 10190, 15455, 680, 476, 1356, 27569, 33625, 38406, 947, 3472, 3080, 294, 24300, 2513, 614, 40355, 543, 257, 417, 4872, 2991, 32079, 2927, 30727, 308, 15727, 1932, 1845, 8262, 416, 476, 26783, 1026, 47089, 35832, 32079, 15291, 72, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1815952014091403, "compression_ratio": 1.5023474178403755, "no_speech_prob": 0.3984375, "words": null}, {"id": 66, "seek": 84700, "start": 835.0, "end": 838.0, "text": " Un informatico risolve problemi, a volte anche usando il computer.", "tokens": [51264, 1156, 1356, 2399, 78, 2253, 37361, 1154, 72, 11, 257, 37801, 11585, 29798, 1930, 3820, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1815952014091403, "compression_ratio": 1.5023474178403755, "no_speech_prob": 0.3984375, "words": null}, {"id": 67, "seek": 84926, "start": 847.0, "end": 848.0, "text": " Grazie.", "tokens": [50364, 8985, 3283, 13, 50414], "temperature": 0.0, "avg_logprob": -0.6868489583333334, "compression_ratio": 0.4666666666666667, "no_speech_prob": 0.998046875, "words": null}], "language": "Italian"}