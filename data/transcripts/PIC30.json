{"text": " Salve a tutti e bentrovati per un nuovo episodio di Pensieri in Codice. Prima di iniziare vi ricordo rapidamente che in descrizione trovate tutti i link inerenti al progetto, sia per sostenerlo sia per partecipare unendovi al canale e al gruppo telegram che ormai conta pi\u00f9 di una sessantina di iscritti. Vi ricordo inoltre che per tutto il mese di aprile potete, se vi va, prenotare delle lezioni private gratuite sulla piattaforma Docety, quindi se avete bisogno di ripassare qualcosa di informatica o di programmazione mi trovate l\u00ec, come al solito link in descrizione. Tutti sappiamo cosa sia un motore di ricerca, tutti nella vita ne abbiamo utilizzato almeno uno che si chiama Google e molti magari ne hanno utilizzati anche altri. Alcuni funzionano meglio, altri hanno funzioni speciali, altri prediligono particolari aspetti come il rispetto della privacy o della protezione dell'ambiente, tutti per\u00f2 sono in grado di restituire in pochi centesimi di secondo la lista di pagine web relative alle parole che abbiamo digitato scavando in archivi di miliardi di documenti. E come possono fare una cosa del genere? Di certo non possiamo pensare che basti solo avere centinaia di server potentissimi sparsi per il mondo per essere in grado di verificare in un batter d'occhio se una parola \u00e8 presente o meno in un'immensa lista di pagine web. E per immensa intendo proprio immensa. Vi lascio in descrizione un link per avere un'idea delle attuali dimensioni del web, escludendo ovviamente il deep e il dark web. Al momento in cui sto registrando Google indicizza qualcosa come 65 miliardi di pagine. Com'\u00e8 possibile dunque anche avendo una potenza di calcolo sconfinata cercare una parola in tutti questi documenti in cos\u00ec poco tempo? E' ovvio che qualsiasi sia il motore di ricerca di cui stiamo parlando \u00e8 necessario che esso possa contare su un algoritmo che riduca enormemente il carico di lavoro necessario. Questo algoritmo \u00e8 appunto quello che viene comunemente chiamato algoritmo di indicizzazione. In effetti per\u00f2 qui la parola indicizzazione viene utilizzata per semplicit\u00e0 ma in realt\u00e0 essa nasconde due concetti ben distinti che sono l'indicizzazione appunto e la classificazione. La prima ci permette di individuare la lista di documenti che contengono una o pi\u00f9 parole e la seconda ci permette di ordinare questa lista posizionando per primi i risultati pi\u00f9 attinenti alla nostra ricerca. Cerchiamo per\u00f2 di non correre troppo e proviamo ad affrontare un po' di questioni partendo dalla pi\u00f9 semplice per proseguire poi via via verso quelle pi\u00f9 complesse. Alla base del funzionamento di un qualsiasi motore di ricerca ci sono quindi due concetti chiave e noi li analizzeremo separatamente in modo da provare a capire al meglio come funziona l'algoritmo che li racchiude entrambi. Iniziamo quindi con il chiederci come funziona l'indicizzazione e in effetti dalla parola possiamo gi\u00e0 intuire che il segreto \u00e8 tutto nell'utilizzo di un indice. Esattamente come l'indice analitico di un libro infatti ogni motore di ricerca costruisce e mantiene aggiornato un enorme elenco nel quale tiene traccia delle parole presenti nelle pagine web. Semplificando all'osso possiamo immaginare che questo indice proprio come quello che troviamo in fondo ad un libro sia composto da un elenco ordinato alfabeticamente di parole ciascuna delle quali \u00e8 seguita dal numero di ciascuna pagina in cui la parola \u00e8 presente. Ovviamente rispetto ad un libro per un motore di ricerca la lista sar\u00e0 enormemente lunga e i numeri di pagina saranno in realt\u00e0 degli identificativi con i quali \u00e8 possibile riconoscere la pagina web ma per noi come al solito \u00e8 il concetto quello che conta. Con una soluzione del genere quando noi inseriamo una parola nel campo di ricerca il motore non deve cercarla in tutti i documenti dell'archivio ma solo nell'indice che ha preparato precedentemente e questo rappresenta un'operazione particolarmente semplice perch\u00e9 trovare un elemento in un elenco ordinato alfabeticamente \u00e8 una di quelle cose che i calcolatori sanno fare benissimo. Sfruttando quindi un'idea piuttosto comune si risolve brillantemente il problema di cercare una parola in una sconfinata mole di documenti e per estensione potremmo anche pensare di usare la stessa tecnica per cercarne due di parole o anche tre o quattro eccetera. Con il nostro indice se proviamo a cercare due parole ad esempio un motore di ricerca pu\u00f2 rapidamente trovare la lista delle pagine che contengono la prima parola e altrettanto rapidamente la lista di quelle che contengono la seconda parola e restituirci solo le pagine che si trovano in entrambe le liste e lo stesso potrebbe valere se cercassimo tre parole o quattro e cos\u00ec via. In tutto questo processo per\u00f2 c'\u00e8 solo un piccolo problema. Il risultato che otteniamo in questo modo non ha un gran valore per chi sta effettuando la ricerca. Se ci riflettiamo un attimo infatti ci accorgiamo che il solo fatto che due parole si trovino nello stesso testo non \u00e8 automaticamente sufficiente ad affermare che quel testo soddisfi la ricerca di quelle due parole. Cosa voglio dire? Pensiamo ad esempio a come siamo soliti usare un motore di ricerca. Se scriviamo due parole ci aspettiamo che i risultati presentino quelle due parole vicine o almeno nella stessa frase. In generale \u00e8 pi\u00f9 probabile che un testo che contiene le due parole vicine sia pi\u00f9 interessante per noi rispetto ad uno che contiene quelle stesse due parole ma in due paragrafi differenti. In pratica quando noi mettiamo due o pi\u00f9 parole in un motore di ricerca stiamo implicitamente richiedendo non semplicemente di ottenere le pagine che contengono quelle due parole quanto piuttosto vogliamo le pagine che hanno quelle due parole il pi\u00f9 vicine possibile. Nel momento in cui ci rendiamo conto che non tutte le pagine che contengono le parole che cerchiamo hanno lo stesso valore ai fini di un buon risultato di ricerca fa il suo ingresso il secondo concetto a cui abbiamo accennato prima e cio\u00e8 la classificazione. All'interno della lista dei documenti che un motore di ricerca \u00e8 in grado di restituire gli elementi vengono inseriti in un All'interno della lista dei documenti che un motore di ricerca \u00e8 in grado di restituire gli elementi vengono fondamentalmente ordinati posizionando in testa quello che sembra il pi\u00f9 pertinente come secondo quello un po' meno pertinente e cos\u00ec via. Ora capiamoci nella realt\u00e0 la classificazione dei risultati non si basa unicamente sulla distanza tra due parole ma su moltissime variabili che per forza di cose non possiamo analizzare in un podcast di un quarto d'ora. Oltre a ci\u00f2 gli algoritmi di classificazione sono spesso complessi e differiscono da motore a motore. Il famoso algoritmo PageRank ad esempio ha moltissime regole che contribuiscono al posizionamento di ogni singolo risultato e ci\u00f2 ha permesso a google di sovrastare letteralmente tutti i suoi concorrenti nel corso degli anni. Noi per\u00f2 come al solito siamo interessati a capire come funzionano le cose e quindi prendiamo in considerazione gli aspetti base della classificazione dei risultati e cio\u00e8 la distanza tra le parole e il loro peso all'interno del testo. Come abbiamo gi\u00e0 accennato qualche minuto fa minore \u00e8 la distanza fra le parole cercate maggiore \u00e8 da considerare il valore della pagina che esse identificano. Quindi ci serve un meccanismo per valutare questa distanza che sia al tempo stesso preciso e permetta di effettuare i calcoli in pochi istanti. La soluzione a questo problema in realt\u00e0 \u00e8 pi\u00f9 semplice di quanto possa sembrare. Ci basta potenziare il nostro indice, quello che utilizziamo per trovare le pagine che contengono le parole cercate, aggiungendovi un'ulteriore informazione e cio\u00e8 la posizione della parola nel testo. Con questa modifica il nostro indice \u00e8 diventato una lista di parole in ordine alfabetico per ciascuna delle quali \u00e8 indicato in quali pagine si trovano e per ciascuna pagina in quali posizioni la parola compare. Mi rendo conto che pu\u00f2 sembrare un concetto un po' complicato ma in realt\u00e0 non lo \u00e8. In pratica volendo fare un esempio prendete un qualsiasi libro con indice analitico, leggete la prima parola dell'indice, trovatela nelle pagine indicate e contate dopo quante parole dall'inizio della pagina essa compare. Ora aggiungete questo numero all'indice dopo il numero di pagina. Se lo fate per tutte le parole vi troverete con un indice che contiene informazioni di questo tipo. La parola codice compare nella pagina 10 come ventitresima parola, nella pagina 60 come diciottesima parola, nella pagina 200 come quarantesima. La parola pensieri invece compare nella pagina 10 come venticinquesima parola e nella pagina 50 come ottava e trentesima e cos\u00ec via fino ad ottenere l'indice di tutte le parole del libro con la pagina e la posizione in cui compaiono. Il nostro motore di ricerca con un indice del genere diventa in grado di individuare le pagine che contengono tutte le parole cercate e anche di classificarle calcolando le differenze tra i numeri di posizione. Minore sar\u00e0 il risultato di questa operazione di sottrazione e maggiore sar\u00e0 la vicinanza tra le due parole e quindi maggiore sar\u00e0 il valore della pagina ai fini della nostra ricerca. Abbiamo dunque capito come creare un meccanismo veloce per cercare tra l'immensa quantit\u00e0 di documenti presenti nel web e abbiamo anche scogitato un modo per dare una risposta pi\u00f9 efficace alle ricerche di pi\u00f9 parole contemporaneamente. Ora per\u00f2 come ultimo sforzo ci resta da chiederci se pensiamo che tutte le parole di un testo abbiano lo stesso valore. La risposta a questa domanda \u00e8 ovviamente no. Se ad esempio cerchiamo la frase pensieri in codice e abbiamo una pagina web in cui le parole pensieri e codice compaiono nel titolo beh questa sar\u00e0 probabilmente pi\u00f9 attinente alla nostra ricerca rispetto ad una pagina in cui queste stesse parole appaiono ad esempio in un elenco puntato. Se vogliamo quindi che il nostro motore di ricerca produca dei risultati migliori ci tocca trovare un modo di valutare questo diverso peso fra le varie parti del testo. Per ottenere ci\u00f2 come prima cosa serve un meccanismo per individuare le varie parti di una pagina web titolo, paragrafi, sezioni, liste, parole evidenziate eccetera. Ma guarda caso questo lavoro di valorizzazione dei testi \u00e8 proprio l'obiettivo primario del linguaggio html, cio\u00e8 quel linguaggio che compone praticamente ogni pagina web. L'html \u00e8 infatti un linguaggio di markup, ne abbiamo gi\u00e0 parlato in altri episodi, e ci permette di dare uno specifico valore alle varie parti del testo utilizzando delle parole chiave che prendono il nome di tag. Il titolo di una pagina web ad esempio sar\u00e0 racchiusa tra due parole speciali che aprono e chiudono il tag title e la stessa cosa varr\u00e0 per i sottotitoli, i paragrafi, le didascalie e tutti gli altri elementi del testo. Questo vuol dire che ogni pagina contiene gi\u00e0 le informazioni di cui abbiamo bisogno per effettuare la nostra classificazione. Ci occorre solo un meccanismo che sia efficace e veloce nel consultarle e che non ci costringa a ricontrollare ogni pagina per capire se la parola individuata si trova nel titolo o in un paragrafo o in una nota. Ancora una volta la soluzione \u00e8 nel nostro fedele indice e non ci richiede nemmeno di modificarlo, ci basta semplicemente indicizzare anche le parole speciali che derimitano i tag html. In questo modo possiamo usare l'indice per sapere anche la posizione dei tag all'interno della pagina e molto facilmente quando valutiamo il peso di una parola possiamo capire se si trova in mezzo tra la parola chiave che apre un tag e quella che lo chiude. Fatto questo quando effettuiamo una ricerca non ci resta altro che assegnare un valore alle pagine risultanti in base alla vicinanza delle parole trovate e alla loro posizione nel testo e il gioco \u00e8 fatto. La pagina col punteggio maggiore sar\u00e0 la prima, quella con il secondo punteggio sar\u00e0 la seconda e cos\u00ec via. Mi rendo conto che parlare in modo astratto di questi concetti possa risultare un po' complicato e nel caso vogliate approfondire vi metto in descrizione il link affiliato a amazon del libro 9 algoritmi che hanno cambiato il futuro dal quale ho preso l'idea per questo e per altri episodi del podcast. Detto questo vi ringrazio per aver ascoltato, vi saluto e vi ricordo che il programmatore risolve problemi, a volte anche usando il computer.", "segments": [{"id": 1, "seek": 2980, "start": 0.0, "end": 24.54, "text": " Salve a tutti e bentrovati per un nuovo episodio di Pensieri in Codice.", "tokens": [50364, 5996, 303, 257, 19822, 308, 14075, 24088, 6908, 680, 517, 49348, 39200, 1004, 1026, 45035, 45980, 294, 383, 378, 573, 13, 51591], "temperature": 0.0, "avg_logprob": -0.3327792616600686, "compression_ratio": 1.345132743362832, "no_speech_prob": 0.16357421875, "words": null}, {"id": 2, "seek": 2980, "start": 24.54, "end": 29.8, "text": " Prima di iniziare vi ricordo rapidamente che in descrizione trovate tutti i link", "tokens": [51591, 2114, 4775, 1026, 294, 24300, 543, 1932, 21040, 23872, 7558, 3439, 947, 294, 2189, 19706, 4495, 19083, 19822, 741, 2113, 51854], "temperature": 0.0, "avg_logprob": -0.3327792616600686, "compression_ratio": 1.345132743362832, "no_speech_prob": 0.16357421875, "words": null}, {"id": 3, "seek": 5664, "start": 29.8, "end": 36.56, "text": " inerenti al progetto, sia per sostenerlo sia per partecipare unendovi al canale e", "tokens": [50364, 294, 260, 23012, 419, 447, 847, 1353, 11, 25176, 680, 262, 18946, 260, 752, 25176, 680, 6975, 11371, 543, 517, 3999, 4917, 419, 393, 1220, 308, 50702], "temperature": 0.0, "avg_logprob": -0.25768230309089024, "compression_ratio": 1.5897435897435896, "no_speech_prob": 0.09246826171875, "words": null}, {"id": 4, "seek": 5664, "start": 36.56, "end": 41.72, "text": " al gruppo telegram che ormai conta pi\u00f9 di una sessantina di iscritti.", "tokens": [50702, 419, 47477, 78, 4304, 1342, 947, 420, 76, 1301, 24001, 10589, 1026, 2002, 262, 442, 394, 1426, 1026, 307, 10757, 21558, 13, 50960], "temperature": 0.0, "avg_logprob": -0.25768230309089024, "compression_ratio": 1.5897435897435896, "no_speech_prob": 0.09246826171875, "words": null}, {"id": 5, "seek": 5664, "start": 41.72, "end": 47.44, "text": " Vi ricordo inoltre che per tutto il mese di aprile potete, se vi va, prenotare delle", "tokens": [50960, 6626, 21040, 23872, 294, 401, 3599, 947, 680, 23048, 1930, 275, 1130, 1026, 1882, 470, 306, 1847, 3498, 11, 369, 1932, 2773, 11, 659, 2247, 543, 16485, 51246], "temperature": 0.0, "avg_logprob": -0.25768230309089024, "compression_ratio": 1.5897435897435896, "no_speech_prob": 0.09246826171875, "words": null}, {"id": 6, "seek": 5664, "start": 47.44, "end": 52.8, "text": " lezioni private gratuite sulla piattaforma Docety, quindi se avete", "tokens": [51246, 476, 89, 15273, 4551, 10158, 21681, 33625, 3895, 18405, 837, 64, 16024, 2210, 11, 15727, 369, 48201, 51514], "temperature": 0.0, "avg_logprob": -0.25768230309089024, "compression_ratio": 1.5897435897435896, "no_speech_prob": 0.09246826171875, "words": null}, {"id": 7, "seek": 5664, "start": 52.8, "end": 56.64, "text": " bisogno di ripassare qualcosa di informatica o di programmazione mi", "tokens": [51514, 40505, 1771, 1026, 12782, 640, 543, 42400, 1026, 1356, 267, 2262, 277, 1026, 37648, 12928, 2752, 51706], "temperature": 0.0, "avg_logprob": -0.25768230309089024, "compression_ratio": 1.5897435897435896, "no_speech_prob": 0.09246826171875, "words": null}, {"id": 8, "seek": 8460, "start": 56.64, "end": 61.0, "text": " trovate l\u00ec, come al solito link in descrizione.", "tokens": [50364, 4495, 19083, 287, 4749, 11, 808, 419, 1404, 3528, 2113, 294, 2189, 19706, 13, 50582], "temperature": 0.0, "avg_logprob": -0.2665929076945887, "compression_ratio": 1.6219512195121952, "no_speech_prob": 0.186767578125, "words": null}, {"id": 9, "seek": 8460, "start": 61.44, "end": 66.24, "text": " Tutti sappiamo cosa sia un motore di ricerca, tutti nella vita ne abbiamo", "tokens": [50604, 18392, 7317, 46938, 7415, 10163, 25176, 517, 2184, 418, 1026, 21040, 36127, 11, 19822, 23878, 32712, 408, 22815, 50844], "temperature": 0.0, "avg_logprob": -0.2665929076945887, "compression_ratio": 1.6219512195121952, "no_speech_prob": 0.186767578125, "words": null}, {"id": 10, "seek": 8460, "start": 66.24, "end": 71.16, "text": " utilizzato almeno uno che si chiama Google e molti magari ne hanno utilizzati", "tokens": [50844, 40355, 2513, 419, 43232, 8526, 947, 1511, 13228, 2404, 3329, 308, 10739, 72, 49932, 408, 26595, 40355, 6908, 51090], "temperature": 0.0, "avg_logprob": -0.2665929076945887, "compression_ratio": 1.6219512195121952, "no_speech_prob": 0.186767578125, "words": null}, {"id": 11, "seek": 8460, "start": 71.16, "end": 74.84, "text": " anche altri. Alcuni funzionano meglio, altri hanno", "tokens": [51090, 11585, 33707, 13, 967, 66, 24307, 49345, 313, 3730, 48911, 11, 33707, 26595, 51274], "temperature": 0.0, "avg_logprob": -0.2665929076945887, "compression_ratio": 1.6219512195121952, "no_speech_prob": 0.186767578125, "words": null}, {"id": 12, "seek": 8460, "start": 74.84, "end": 79.48, "text": " funzioni speciali, altri prediligono particolari aspetti come il rispetto", "tokens": [51274, 49345, 15273, 2121, 72, 11, 33707, 3852, 388, 328, 8957, 1276, 401, 3504, 16817, 12495, 808, 1930, 2253, 42801, 51506], "temperature": 0.0, "avg_logprob": -0.2665929076945887, "compression_ratio": 1.6219512195121952, "no_speech_prob": 0.186767578125, "words": null}, {"id": 13, "seek": 8460, "start": 79.48, "end": 84.6, "text": " della privacy o della protezione dell'ambiente, tutti per\u00f2 sono in grado", "tokens": [51506, 11618, 11427, 277, 11618, 5631, 19706, 19781, 6, 2173, 8413, 11, 19822, 12673, 9259, 294, 677, 1573, 51762], "temperature": 0.0, "avg_logprob": -0.2665929076945887, "compression_ratio": 1.6219512195121952, "no_speech_prob": 0.186767578125, "words": null}, {"id": 14, "seek": 11448, "start": 84.60000000000001, "end": 89.4, "text": " di restituire in pochi centesimi di secondo la lista di pagine web relative", "tokens": [50364, 1026, 1472, 6380, 621, 294, 714, 8036, 1489, 279, 10121, 1026, 41601, 635, 27764, 1026, 280, 10260, 3670, 4972, 50604], "temperature": 0.0, "avg_logprob": -0.22598140003267397, "compression_ratio": 1.7195121951219512, "no_speech_prob": 0.5986328125, "words": null}, {"id": 15, "seek": 11448, "start": 89.4, "end": 94.44000000000001, "text": " alle parole che abbiamo digitato scavando in archivi di miliardi di", "tokens": [50604, 5430, 26783, 947, 22815, 14293, 2513, 4216, 85, 1806, 294, 3912, 33448, 1026, 1962, 72, 38126, 1026, 50856], "temperature": 0.0, "avg_logprob": -0.22598140003267397, "compression_ratio": 1.7195121951219512, "no_speech_prob": 0.5986328125, "words": null}, {"id": 16, "seek": 11448, "start": 94.44000000000001, "end": 100.48, "text": " documenti. E come possono fare una cosa del genere?", "tokens": [50856, 4166, 72, 13, 462, 808, 43857, 11994, 2002, 10163, 1103, 41553, 30, 51158], "temperature": 0.0, "avg_logprob": -0.22598140003267397, "compression_ratio": 1.7195121951219512, "no_speech_prob": 0.5986328125, "words": null}, {"id": 17, "seek": 11448, "start": 100.48, "end": 105.08000000000001, "text": " Di certo non possiamo pensare che basti solo avere centinaia di server", "tokens": [51158, 8789, 22261, 2107, 44758, 6099, 543, 947, 8414, 72, 6944, 37914, 1489, 1426, 654, 1026, 7154, 51388], "temperature": 0.0, "avg_logprob": -0.22598140003267397, "compression_ratio": 1.7195121951219512, "no_speech_prob": 0.5986328125, "words": null}, {"id": 18, "seek": 11448, "start": 105.08000000000001, "end": 109.16000000000001, "text": " potentissimi sparsi per il mondo per essere in grado di verificare in un", "tokens": [51388, 27073, 891, 10121, 637, 32742, 680, 1930, 40499, 680, 19799, 294, 677, 1573, 1026, 1306, 1089, 543, 294, 517, 51592], "temperature": 0.0, "avg_logprob": -0.22598140003267397, "compression_ratio": 1.7195121951219512, "no_speech_prob": 0.5986328125, "words": null}, {"id": 19, "seek": 11448, "start": 109.16000000000001, "end": 114.48, "text": " batter d'occhio se una parola \u00e8 presente o meno in un'immensa lista di pagine web.", "tokens": [51592, 4220, 274, 6, 905, 31033, 369, 2002, 971, 4711, 4873, 28709, 277, 40236, 294, 517, 6, 6753, 23364, 27764, 1026, 280, 10260, 3670, 13, 51858], "temperature": 0.0, "avg_logprob": -0.22598140003267397, "compression_ratio": 1.7195121951219512, "no_speech_prob": 0.5986328125, "words": null}, {"id": 20, "seek": 14260, "start": 115.0, "end": 119.64, "text": " E per immensa intendo proprio immensa. Vi lascio in descrizione un link per", "tokens": [50390, 462, 680, 3397, 23364, 560, 3999, 28203, 3397, 23364, 13, 6626, 2439, 8529, 294, 2189, 19706, 517, 2113, 680, 50622], "temperature": 0.0, "avg_logprob": -0.24211448013225448, "compression_ratio": 1.5495867768595042, "no_speech_prob": 0.0012254714965820312, "words": null}, {"id": 21, "seek": 14260, "start": 119.64, "end": 126.56, "text": " avere un'idea delle attuali dimensioni del web, escludendo ovviamente il deep e", "tokens": [50622, 37914, 517, 6, 482, 64, 16485, 951, 901, 72, 10139, 72, 1103, 3670, 11, 4721, 1471, 3999, 14187, 23347, 1930, 2452, 308, 50968], "temperature": 0.0, "avg_logprob": -0.24211448013225448, "compression_ratio": 1.5495867768595042, "no_speech_prob": 0.0012254714965820312, "words": null}, {"id": 22, "seek": 14260, "start": 126.56, "end": 131.56, "text": " il dark web. Al momento in cui sto registrando Google indicizza qualcosa", "tokens": [50968, 1930, 2877, 3670, 13, 967, 9333, 294, 22929, 22784, 11376, 19845, 3329, 4694, 7176, 42400, 51218], "temperature": 0.0, "avg_logprob": -0.24211448013225448, "compression_ratio": 1.5495867768595042, "no_speech_prob": 0.0012254714965820312, "words": null}, {"id": 23, "seek": 14260, "start": 131.56, "end": 137.96, "text": " come 65 miliardi di pagine. Com'\u00e8 possibile dunque anche avendo una", "tokens": [51218, 808, 11624, 1962, 72, 38126, 1026, 280, 10260, 13, 2432, 6, 1462, 50184, 10234, 1077, 11585, 1305, 3999, 2002, 51538], "temperature": 0.0, "avg_logprob": -0.24211448013225448, "compression_ratio": 1.5495867768595042, "no_speech_prob": 0.0012254714965820312, "words": null}, {"id": 24, "seek": 14260, "start": 137.96, "end": 142.6, "text": " potenza di calcolo sconfinata cercare una parola in tutti questi documenti in", "tokens": [51538, 1847, 23691, 1026, 2104, 46086, 795, 266, 5194, 3274, 10146, 5685, 2002, 971, 4711, 294, 19822, 29729, 4166, 72, 294, 51770], "temperature": 0.0, "avg_logprob": -0.24211448013225448, "compression_ratio": 1.5495867768595042, "no_speech_prob": 0.0012254714965820312, "words": null}, {"id": 25, "seek": 17232, "start": 142.64, "end": 147.72, "text": " cos\u00ec poco tempo? E' ovvio che qualsiasi sia il motore di ricerca di cui stiamo", "tokens": [50366, 23278, 10639, 8972, 30, 462, 6, 14187, 28226, 947, 421, 1124, 4609, 72, 25176, 1930, 2184, 418, 1026, 21040, 36127, 1026, 22929, 342, 7415, 50620], "temperature": 0.0, "avg_logprob": -0.23386270357448546, "compression_ratio": 1.6653696498054475, "no_speech_prob": 0.1158447265625, "words": null}, {"id": 26, "seek": 17232, "start": 147.72, "end": 152.95999999999998, "text": " parlando \u00e8 necessario che esso possa contare su un algoritmo che riduca", "tokens": [50620, 971, 16201, 4873, 2688, 4912, 947, 2097, 78, 41564, 660, 543, 459, 517, 3501, 50017, 3280, 947, 3973, 32072, 50882], "temperature": 0.0, "avg_logprob": -0.23386270357448546, "compression_ratio": 1.6653696498054475, "no_speech_prob": 0.1158447265625, "words": null}, {"id": 27, "seek": 17232, "start": 152.95999999999998, "end": 155.6, "text": " enormemente il carico di lavoro necessario.", "tokens": [50882, 8473, 16288, 1930, 1032, 2789, 1026, 42060, 2688, 4912, 13, 51014], "temperature": 0.0, "avg_logprob": -0.23386270357448546, "compression_ratio": 1.6653696498054475, "no_speech_prob": 0.1158447265625, "words": null}, {"id": 28, "seek": 17232, "start": 155.6, "end": 161.16, "text": " Questo algoritmo \u00e8 appunto quello che viene comunemente chiamato algoritmo di", "tokens": [51014, 38167, 3501, 50017, 3280, 4873, 724, 24052, 22813, 947, 19561, 11040, 16288, 417, 2918, 2513, 3501, 50017, 3280, 1026, 51292], "temperature": 0.0, "avg_logprob": -0.23386270357448546, "compression_ratio": 1.6653696498054475, "no_speech_prob": 0.1158447265625, "words": null}, {"id": 29, "seek": 17232, "start": 161.16, "end": 167.4, "text": " indicizzazione. In effetti per\u00f2 qui la parola indicizzazione viene utilizzata", "tokens": [51292, 4694, 8072, 12928, 13, 682, 1244, 12495, 12673, 1956, 635, 971, 4711, 4694, 8072, 12928, 19561, 40355, 3274, 51604], "temperature": 0.0, "avg_logprob": -0.23386270357448546, "compression_ratio": 1.6653696498054475, "no_speech_prob": 0.1158447265625, "words": null}, {"id": 30, "seek": 17232, "start": 167.4, "end": 172.32, "text": " per semplicit\u00e0 ma in realt\u00e0 essa nasconde due concetti ben distinti che", "tokens": [51604, 680, 4361, 4770, 12445, 463, 294, 47512, 7208, 297, 4806, 7259, 3462, 1588, 12495, 3271, 31489, 72, 947, 51850], "temperature": 0.0, "avg_logprob": -0.23386270357448546, "compression_ratio": 1.6653696498054475, "no_speech_prob": 0.1158447265625, "words": null}, {"id": 31, "seek": 19800, "start": 172.32, "end": 178.72, "text": " sono l'indicizzazione appunto e la classificazione. La prima ci permette di", "tokens": [50364, 9259, 287, 6, 471, 299, 8072, 12928, 724, 24052, 308, 635, 1508, 1089, 12928, 13, 2369, 19507, 6983, 4784, 3007, 1026, 50684], "temperature": 0.0, "avg_logprob": -0.18833704838263138, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.00701141357421875, "words": null}, {"id": 32, "seek": 19800, "start": 178.72, "end": 183.6, "text": " individuare la lista di documenti che contengono una o pi\u00f9 parole e la seconda", "tokens": [50684, 2461, 84, 543, 635, 27764, 1026, 4166, 72, 947, 660, 1501, 8957, 2002, 277, 10589, 26783, 308, 635, 1150, 64, 50928], "temperature": 0.0, "avg_logprob": -0.18833704838263138, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.00701141357421875, "words": null}, {"id": 33, "seek": 19800, "start": 183.6, "end": 188.6, "text": " ci permette di ordinare questa lista posizionando per primi i risultati pi\u00f9", "tokens": [50928, 6983, 4784, 3007, 1026, 25376, 543, 16540, 27764, 1366, 590, 313, 1806, 680, 2886, 72, 741, 2253, 723, 6908, 10589, 51178], "temperature": 0.0, "avg_logprob": -0.18833704838263138, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.00701141357421875, "words": null}, {"id": 34, "seek": 19800, "start": 188.6, "end": 193.35999999999999, "text": " attinenti alla nostra ricerca. Cerchiamo per\u00f2 di non correre troppo e", "tokens": [51178, 951, 11058, 72, 11591, 34311, 21040, 36127, 13, 26402, 339, 7415, 12673, 1026, 2107, 38576, 323, 4495, 27000, 308, 51416], "temperature": 0.0, "avg_logprob": -0.18833704838263138, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.00701141357421875, "words": null}, {"id": 35, "seek": 19800, "start": 193.35999999999999, "end": 198.0, "text": " proviamo ad affrontare un po' di questioni partendo dalla pi\u00f9 semplice per", "tokens": [51416, 1439, 7415, 614, 2096, 10001, 543, 517, 714, 6, 1026, 1168, 72, 644, 3999, 35566, 10589, 4361, 564, 573, 680, 51648], "temperature": 0.0, "avg_logprob": -0.18833704838263138, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.00701141357421875, "words": null}, {"id": 36, "seek": 22596, "start": 198.0, "end": 202.64, "text": " proseguire poi via via verso quelle pi\u00f9 complesse.", "tokens": [50364, 12505, 2794, 621, 19260, 5766, 5766, 49786, 29237, 10589, 1209, 7357, 13, 50596], "temperature": 0.0, "avg_logprob": -0.22119141183793545, "compression_ratio": 1.541871921182266, "no_speech_prob": 0.023681640625, "words": null}, {"id": 37, "seek": 22596, "start": 209.2, "end": 213.72, "text": " Alla base del funzionamento di un qualsiasi motore di ricerca ci sono", "tokens": [50924, 1057, 64, 3096, 1103, 49345, 313, 8824, 1026, 517, 421, 1124, 4609, 72, 2184, 418, 1026, 21040, 36127, 6983, 9259, 51150], "temperature": 0.0, "avg_logprob": -0.22119141183793545, "compression_ratio": 1.541871921182266, "no_speech_prob": 0.023681640625, "words": null}, {"id": 38, "seek": 22596, "start": 213.72, "end": 218.52, "text": " quindi due concetti chiave e noi li analizzeremo separatamente in modo da", "tokens": [51150, 15727, 3462, 1588, 12495, 45793, 303, 308, 22447, 375, 2624, 8072, 323, 3280, 3128, 25354, 294, 16664, 1120, 51390], "temperature": 0.0, "avg_logprob": -0.22119141183793545, "compression_ratio": 1.541871921182266, "no_speech_prob": 0.023681640625, "words": null}, {"id": 39, "seek": 22596, "start": 218.52, "end": 222.16, "text": " provare a capire al meglio come funziona l'algoritmo che li racchiude", "tokens": [51390, 1439, 543, 257, 1410, 621, 419, 48911, 808, 49345, 21758, 287, 6, 20422, 50017, 3280, 947, 375, 4129, 8036, 2303, 51572], "temperature": 0.0, "avg_logprob": -0.22119141183793545, "compression_ratio": 1.541871921182266, "no_speech_prob": 0.023681640625, "words": null}, {"id": 40, "seek": 22596, "start": 222.16, "end": 225.96, "text": " entrambi. Iniziamo quindi con il chiederci come", "tokens": [51572, 8041, 2173, 72, 13, 682, 590, 7415, 15727, 416, 1930, 417, 5653, 537, 808, 51762], "temperature": 0.0, "avg_logprob": -0.22119141183793545, "compression_ratio": 1.541871921182266, "no_speech_prob": 0.023681640625, "words": null}, {"id": 41, "seek": 25236, "start": 225.96, "end": 231.24, "text": " funziona l'indicizzazione e in effetti dalla parola possiamo gi\u00e0 intuire che il", "tokens": [50364, 49345, 21758, 287, 6, 471, 299, 8072, 12928, 308, 294, 1244, 12495, 35566, 971, 4711, 44758, 30469, 560, 43612, 947, 1930, 50628], "temperature": 0.0, "avg_logprob": -0.18453663086582875, "compression_ratio": 1.6059322033898304, "no_speech_prob": 0.30712890625, "words": null}, {"id": 42, "seek": 25236, "start": 231.24, "end": 236.96, "text": " segreto \u00e8 tutto nell'utilizzo di un indice. Esattamente come l'indice", "tokens": [50628, 3896, 47330, 4873, 23048, 44666, 6, 20835, 590, 4765, 1026, 517, 1016, 573, 13, 2313, 1591, 3439, 808, 287, 6, 471, 573, 50914], "temperature": 0.0, "avg_logprob": -0.18453663086582875, "compression_ratio": 1.6059322033898304, "no_speech_prob": 0.30712890625, "words": null}, {"id": 43, "seek": 25236, "start": 236.96, "end": 241.68, "text": " analitico di un libro infatti ogni motore di ricerca costruisce e mantiene", "tokens": [50914, 2624, 270, 2789, 1026, 517, 29354, 1536, 21515, 33189, 2184, 418, 1026, 21040, 36127, 2063, 894, 49596, 308, 10845, 10174, 51150], "temperature": 0.0, "avg_logprob": -0.18453663086582875, "compression_ratio": 1.6059322033898304, "no_speech_prob": 0.30712890625, "words": null}, {"id": 44, "seek": 25236, "start": 241.68, "end": 246.64000000000001, "text": " aggiornato un enorme elenco nel quale tiene traccia delle parole presenti", "tokens": [51150, 42254, 1865, 2513, 517, 33648, 806, 268, 1291, 15373, 421, 1220, 7066, 504, 326, 2755, 16485, 26783, 1974, 72, 51398], "temperature": 0.0, "avg_logprob": -0.18453663086582875, "compression_ratio": 1.6059322033898304, "no_speech_prob": 0.30712890625, "words": null}, {"id": 45, "seek": 25236, "start": 246.64000000000001, "end": 252.36, "text": " nelle pagine web. Semplificando all'osso possiamo immaginare che questo indice", "tokens": [51398, 46350, 280, 10260, 3670, 13, 14421, 564, 1089, 1806, 439, 6, 329, 539, 44758, 3397, 559, 259, 543, 947, 10263, 1016, 573, 51684], "temperature": 0.0, "avg_logprob": -0.18453663086582875, "compression_ratio": 1.6059322033898304, "no_speech_prob": 0.30712890625, "words": null}, {"id": 46, "seek": 27716, "start": 252.36, "end": 256.8, "text": " proprio come quello che troviamo in fondo ad un libro sia composto da un", "tokens": [50364, 28203, 808, 22813, 947, 35449, 7415, 294, 38101, 614, 517, 29354, 25176, 20203, 78, 1120, 517, 50586], "temperature": 0.0, "avg_logprob": -0.20631067469282058, "compression_ratio": 1.6527777777777777, "no_speech_prob": 0.15380859375, "words": null}, {"id": 47, "seek": 27716, "start": 256.8, "end": 262.32, "text": " elenco ordinato alfabeticamente di parole ciascuna delle quali \u00e8 seguita dal", "tokens": [50586, 806, 268, 1291, 25376, 2513, 419, 69, 9058, 23653, 1026, 26783, 269, 4609, 66, 5051, 16485, 4101, 72, 4873, 3896, 1983, 64, 11702, 50862], "temperature": 0.0, "avg_logprob": -0.20631067469282058, "compression_ratio": 1.6527777777777777, "no_speech_prob": 0.15380859375, "words": null}, {"id": 48, "seek": 27716, "start": 262.32, "end": 267.36, "text": " numero di ciascuna pagina in cui la parola \u00e8 presente.", "tokens": [50862, 46839, 1026, 269, 4609, 66, 5051, 11812, 1426, 294, 22929, 635, 971, 4711, 4873, 28709, 13, 51114], "temperature": 0.0, "avg_logprob": -0.20631067469282058, "compression_ratio": 1.6527777777777777, "no_speech_prob": 0.15380859375, "words": null}, {"id": 49, "seek": 27716, "start": 267.36, "end": 271.44, "text": " Ovviamente rispetto ad un libro per un motore di ricerca la lista sar\u00e0", "tokens": [51114, 50005, 23347, 2253, 42801, 614, 517, 29354, 680, 517, 2184, 418, 1026, 21040, 36127, 635, 27764, 41338, 51318], "temperature": 0.0, "avg_logprob": -0.20631067469282058, "compression_ratio": 1.6527777777777777, "no_speech_prob": 0.15380859375, "words": null}, {"id": 50, "seek": 27716, "start": 271.44, "end": 277.16, "text": " enormemente lunga e i numeri di pagina saranno in realt\u00e0 degli identificativi", "tokens": [51318, 8473, 16288, 16730, 64, 308, 741, 7866, 72, 1026, 11812, 1426, 13782, 13484, 294, 47512, 32079, 49456, 10662, 72, 51604], "temperature": 0.0, "avg_logprob": -0.20631067469282058, "compression_ratio": 1.6527777777777777, "no_speech_prob": 0.15380859375, "words": null}, {"id": 51, "seek": 30384, "start": 277.16, "end": 282.88000000000005, "text": " con i quali \u00e8 possibile riconoscere la pagina web ma per noi come al solito \u00e8", "tokens": [50364, 416, 741, 4101, 72, 4873, 50184, 367, 11911, 10466, 323, 635, 11812, 1426, 3670, 463, 680, 22447, 808, 419, 1404, 3528, 4873, 50650], "temperature": 0.0, "avg_logprob": -0.20413773865611465, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.157958984375, "words": null}, {"id": 52, "seek": 30384, "start": 282.88000000000005, "end": 288.16, "text": " il concetto quello che conta. Con una soluzione del genere quando noi", "tokens": [50650, 1930, 1588, 23778, 22813, 947, 24001, 13, 2656, 2002, 1404, 3334, 5328, 1103, 41553, 7770, 22447, 50914], "temperature": 0.0, "avg_logprob": -0.20413773865611465, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.157958984375, "words": null}, {"id": 53, "seek": 30384, "start": 288.16, "end": 293.6, "text": " inseriamo una parola nel campo di ricerca il motore non deve cercarla in tutti i", "tokens": [50914, 1028, 260, 7415, 2002, 971, 4711, 15373, 29691, 1026, 21040, 36127, 1930, 2184, 418, 2107, 17761, 36099, 34148, 294, 19822, 741, 51186], "temperature": 0.0, "avg_logprob": -0.20413773865611465, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.157958984375, "words": null}, {"id": 54, "seek": 30384, "start": 293.6, "end": 298.40000000000003, "text": " documenti dell'archivio ma solo nell'indice che ha preparato precedentemente", "tokens": [51186, 4166, 72, 19781, 6, 1178, 592, 1004, 463, 6944, 44666, 6, 471, 573, 947, 324, 8231, 2513, 37388, 16288, 51426], "temperature": 0.0, "avg_logprob": -0.20413773865611465, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.157958984375, "words": null}, {"id": 55, "seek": 30384, "start": 298.40000000000003, "end": 303.84000000000003, "text": " e questo rappresenta un'operazione particolarmente semplice perch\u00e9 trovare", "tokens": [51426, 308, 10263, 8125, 495, 8938, 517, 6, 7192, 12928, 1276, 15276, 4082, 4361, 564, 573, 14303, 35449, 543, 51698], "temperature": 0.0, "avg_logprob": -0.20413773865611465, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.157958984375, "words": null}, {"id": 56, "seek": 33020, "start": 303.84000000000003, "end": 308.52000000000004, "text": " un elemento in un elenco ordinato alfabeticamente \u00e8 una di quelle cose", "tokens": [50364, 517, 47961, 294, 517, 806, 268, 1291, 25376, 2513, 419, 69, 9058, 23653, 4873, 2002, 1026, 29237, 30261, 50598], "temperature": 0.0, "avg_logprob": -0.18332435331981758, "compression_ratio": 1.6563876651982379, "no_speech_prob": 0.11907958984375, "words": null}, {"id": 57, "seek": 33020, "start": 308.52000000000004, "end": 314.08000000000004, "text": " che i calcolatori sanno fare benissimo. Sfruttando quindi un'idea piuttosto", "tokens": [50598, 947, 741, 2104, 8768, 39842, 262, 13484, 11994, 3271, 34966, 13, 318, 5779, 13478, 1806, 15727, 517, 6, 482, 64, 3895, 13478, 22756, 50876], "temperature": 0.0, "avg_logprob": -0.18332435331981758, "compression_ratio": 1.6563876651982379, "no_speech_prob": 0.11907958984375, "words": null}, {"id": 58, "seek": 33020, "start": 314.08000000000004, "end": 319.76000000000005, "text": " comune si risolve brillantemente il problema di cercare una parola in una", "tokens": [50876, 395, 2613, 1511, 2253, 37361, 8695, 394, 16288, 1930, 12395, 1026, 10146, 5685, 2002, 971, 4711, 294, 2002, 51160], "temperature": 0.0, "avg_logprob": -0.18332435331981758, "compression_ratio": 1.6563876651982379, "no_speech_prob": 0.11907958984375, "words": null}, {"id": 59, "seek": 33020, "start": 319.76000000000005, "end": 324.44000000000005, "text": " sconfinata mole di documenti e per estensione potremmo anche pensare di", "tokens": [51160, 795, 266, 5194, 3274, 6353, 1026, 4166, 72, 308, 680, 871, 3378, 68, 1847, 265, 2174, 78, 11585, 6099, 543, 1026, 51394], "temperature": 0.0, "avg_logprob": -0.18332435331981758, "compression_ratio": 1.6563876651982379, "no_speech_prob": 0.11907958984375, "words": null}, {"id": 60, "seek": 33020, "start": 324.44000000000005, "end": 330.20000000000005, "text": " usare la stessa tecnica per cercarne due di parole o anche tre o quattro eccetera.", "tokens": [51394, 505, 543, 635, 342, 8391, 20105, 2262, 680, 36099, 289, 716, 3462, 1026, 26783, 277, 11585, 2192, 277, 421, 1591, 340, 29613, 20269, 13, 51682], "temperature": 0.0, "avg_logprob": -0.18332435331981758, "compression_ratio": 1.6563876651982379, "no_speech_prob": 0.11907958984375, "words": null}, {"id": 61, "seek": 35504, "start": 331.03999999999996, "end": 335.96, "text": " Con il nostro indice se proviamo a cercare due parole ad esempio un motore di", "tokens": [50406, 2656, 1930, 35779, 1016, 573, 369, 1439, 7415, 257, 10146, 5685, 3462, 26783, 614, 33627, 517, 2184, 418, 1026, 50652], "temperature": 0.0, "avg_logprob": -0.22353602959229066, "compression_ratio": 1.7934272300469483, "no_speech_prob": 0.00359344482421875, "words": null}, {"id": 62, "seek": 35504, "start": 335.96, "end": 340.44, "text": " ricerca pu\u00f2 rapidamente trovare la lista delle pagine che contengono la prima", "tokens": [50652, 21040, 36127, 26526, 7558, 3439, 35449, 543, 635, 27764, 16485, 280, 10260, 947, 660, 1501, 8957, 635, 19507, 50876], "temperature": 0.0, "avg_logprob": -0.22353602959229066, "compression_ratio": 1.7934272300469483, "no_speech_prob": 0.00359344482421875, "words": null}, {"id": 63, "seek": 35504, "start": 340.44, "end": 344.68, "text": " parola e altrettanto rapidamente la lista di quelle che contengono la", "tokens": [50876, 971, 4711, 308, 4955, 14313, 5857, 7558, 3439, 635, 27764, 1026, 29237, 947, 660, 1501, 8957, 635, 51088], "temperature": 0.0, "avg_logprob": -0.22353602959229066, "compression_ratio": 1.7934272300469483, "no_speech_prob": 0.00359344482421875, "words": null}, {"id": 64, "seek": 35504, "start": 344.68, "end": 349.76, "text": " seconda parola e restituirci solo le pagine che si trovano in entrambe le", "tokens": [51088, 1150, 64, 971, 4711, 308, 1472, 6380, 347, 537, 6944, 476, 280, 10260, 947, 1511, 35449, 3730, 294, 948, 2356, 650, 476, 51342], "temperature": 0.0, "avg_logprob": -0.22353602959229066, "compression_ratio": 1.7934272300469483, "no_speech_prob": 0.00359344482421875, "words": null}, {"id": 65, "seek": 35504, "start": 349.76, "end": 355.03999999999996, "text": " liste e lo stesso potrebbe valere se cercassimo tre parole o quattro e cos\u00ec via.", "tokens": [51342, 1329, 68, 308, 450, 44413, 1847, 39487, 1323, 323, 369, 36099, 640, 6934, 2192, 26783, 277, 421, 1591, 340, 308, 23278, 5766, 13, 51606], "temperature": 0.0, "avg_logprob": -0.22353602959229066, "compression_ratio": 1.7934272300469483, "no_speech_prob": 0.00359344482421875, "words": null}, {"id": 66, "seek": 38112, "start": 355.20000000000005, "end": 360.8, "text": " In tutto questo processo per\u00f2 c'\u00e8 solo un piccolo problema. Il risultato che", "tokens": [50372, 682, 23048, 10263, 27939, 12673, 269, 6, 1462, 6944, 517, 13363, 46086, 12395, 13, 4416, 2253, 723, 2513, 947, 50652], "temperature": 0.0, "avg_logprob": -0.22164351299956994, "compression_ratio": 1.6995515695067265, "no_speech_prob": 0.015655517578125, "words": null}, {"id": 67, "seek": 38112, "start": 360.8, "end": 365.72, "text": " otteniamo in questo modo non ha un gran valore per chi sta effettuando la ricerca.", "tokens": [50652, 4337, 1147, 7415, 294, 10263, 16664, 2107, 324, 517, 9370, 1323, 418, 680, 13228, 11135, 1244, 42747, 1806, 635, 21040, 36127, 13, 50898], "temperature": 0.0, "avg_logprob": -0.22164351299956994, "compression_ratio": 1.6995515695067265, "no_speech_prob": 0.015655517578125, "words": null}, {"id": 68, "seek": 38112, "start": 365.72, "end": 371.76, "text": " Se ci riflettiamo un attimo infatti ci accorgiamo che il solo fatto che due", "tokens": [50898, 1100, 6983, 13203, 32547, 7415, 517, 951, 6934, 1536, 21515, 6983, 1317, 4646, 7415, 947, 1930, 6944, 23228, 947, 3462, 51200], "temperature": 0.0, "avg_logprob": -0.22164351299956994, "compression_ratio": 1.6995515695067265, "no_speech_prob": 0.015655517578125, "words": null}, {"id": 69, "seek": 38112, "start": 371.76, "end": 376.76, "text": " parole si trovino nello stesso testo non \u00e8 automaticamente sufficiente ad", "tokens": [51200, 26783, 1511, 35449, 2982, 408, 1913, 44413, 1500, 78, 2107, 4873, 12509, 3439, 11563, 68, 614, 51450], "temperature": 0.0, "avg_logprob": -0.22164351299956994, "compression_ratio": 1.6995515695067265, "no_speech_prob": 0.015655517578125, "words": null}, {"id": 70, "seek": 38112, "start": 376.76, "end": 381.12, "text": " affermare che quel testo soddisfi la ricerca di quelle due parole.", "tokens": [51450, 2096, 966, 543, 947, 7178, 1500, 78, 15047, 67, 4937, 72, 635, 21040, 36127, 1026, 29237, 3462, 26783, 13, 51668], "temperature": 0.0, "avg_logprob": -0.22164351299956994, "compression_ratio": 1.6995515695067265, "no_speech_prob": 0.015655517578125, "words": null}, {"id": 71, "seek": 40792, "start": 382.08, "end": 386.4, "text": " Cosa voglio dire? Pensiamo ad esempio a come siamo soliti usare un motore di", "tokens": [50412, 383, 6447, 31273, 19987, 1264, 30, 45035, 7415, 614, 33627, 257, 808, 33459, 1404, 8707, 505, 543, 517, 2184, 418, 1026, 50628], "temperature": 0.0, "avg_logprob": -0.22164351299956994, "compression_ratio": 1.7342342342342343, "no_speech_prob": 0.04669189453125, "words": null}, {"id": 72, "seek": 40792, "start": 386.4, "end": 391.28000000000003, "text": " ricerca. Se scriviamo due parole ci aspettiamo che i risultati presentino", "tokens": [50628, 21040, 36127, 13, 1100, 5545, 85, 7415, 3462, 26783, 6983, 16817, 3093, 7415, 947, 741, 2253, 723, 6908, 1974, 2982, 50872], "temperature": 0.0, "avg_logprob": -0.22164351299956994, "compression_ratio": 1.7342342342342343, "no_speech_prob": 0.04669189453125, "words": null}, {"id": 73, "seek": 40792, "start": 391.28000000000003, "end": 398.4, "text": " quelle due parole vicine o almeno nella stessa frase. In generale \u00e8 pi\u00f9 probabile", "tokens": [50872, 29237, 3462, 26783, 26031, 533, 277, 419, 43232, 23878, 342, 8391, 38406, 13, 682, 1337, 1220, 4873, 10589, 1239, 33288, 51228], "temperature": 0.0, "avg_logprob": -0.22164351299956994, "compression_ratio": 1.7342342342342343, "no_speech_prob": 0.04669189453125, "words": null}, {"id": 74, "seek": 40792, "start": 398.4, "end": 403.0, "text": " che un testo che contiene le due parole vicine sia pi\u00f9 interessante per noi", "tokens": [51228, 947, 517, 1500, 78, 947, 660, 10174, 476, 3462, 26783, 26031, 533, 25176, 10589, 24372, 680, 22447, 51458], "temperature": 0.0, "avg_logprob": -0.22164351299956994, "compression_ratio": 1.7342342342342343, "no_speech_prob": 0.04669189453125, "words": null}, {"id": 75, "seek": 40792, "start": 403.0, "end": 407.92, "text": " rispetto ad uno che contiene quelle stesse due parole ma in due paragrafi", "tokens": [51458, 2253, 42801, 614, 8526, 947, 660, 10174, 29237, 342, 7357, 3462, 26783, 463, 294, 3462, 17372, 10437, 72, 51704], "temperature": 0.0, "avg_logprob": -0.22164351299956994, "compression_ratio": 1.7342342342342343, "no_speech_prob": 0.04669189453125, "words": null}, {"id": 76, "seek": 42756, "start": 408.2, "end": 413.68, "text": " differenti. In pratica quando noi mettiamo due o pi\u00f9 parole in un motore", "tokens": [50378, 27372, 13, 682, 28844, 2262, 7770, 22447, 27812, 7415, 3462, 277, 10589, 26783, 294, 517, 2184, 418, 50652], "temperature": 0.0, "avg_logprob": -0.29194077574893046, "compression_ratio": 1.6726190476190477, "no_speech_prob": 0.1868896484375, "words": null}, {"id": 77, "seek": 42756, "start": 413.68, "end": 418.48, "text": " di ricerca stiamo implicitamente richiedendo non semplicemente di ottenere", "tokens": [50652, 1026, 21040, 36127, 342, 7415, 26947, 3439, 4593, 1091, 3999, 2107, 4361, 4770, 16288, 1026, 4337, 1147, 323, 50892], "temperature": 0.0, "avg_logprob": -0.29194077574893046, "compression_ratio": 1.6726190476190477, "no_speech_prob": 0.1868896484375, "words": null}, {"id": 78, "seek": 42756, "start": 418.48, "end": 423.40000000000003, "text": " le pagine che contengono quelle due parole quanto piuttosto vogliamo le", "tokens": [50892, 476, 280, 10260, 947, 660, 1501, 8957, 421, 4434, 3462, 26783, 17820, 3895, 13478, 22756, 31273, 49926, 476, 51138], "temperature": 0.0, "avg_logprob": -0.29194077574893046, "compression_ratio": 1.6726190476190477, "no_speech_prob": 0.1868896484375, "words": null}, {"id": 79, "seek": 42756, "start": 423.40000000000003, "end": 427.56, "text": " pagine che hanno quelle due parole il pi\u00f9 vicine possibile.", "tokens": [51138, 280, 10260, 947, 26595, 29237, 3462, 26783, 1930, 10589, 26031, 533, 50184, 13, 51346], "temperature": 0.0, "avg_logprob": -0.29194077574893046, "compression_ratio": 1.6726190476190477, "no_speech_prob": 0.1868896484375, "words": null}, {"id": 80, "seek": 45164, "start": 428.56, "end": 432.84, "text": " Nel momento in cui ci rendiamo conto che non tutte le pagine che contengono le", "tokens": [50414, 426, 338, 9333, 294, 22929, 6983, 6125, 7415, 660, 78, 947, 2107, 38632, 476, 280, 10260, 947, 660, 1501, 8957, 476, 50628], "temperature": 0.0, "avg_logprob": -0.36117256215188354, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.0240478515625, "words": null}, {"id": 81, "seek": 45164, "start": 432.84, "end": 436.96, "text": " parole che cerchiamo hanno lo stesso valore ai fini di un buon risultato di", "tokens": [50628, 26783, 947, 10146, 339, 7415, 26595, 450, 44413, 1323, 418, 9783, 40634, 1026, 517, 758, 266, 2253, 723, 2513, 1026, 50834], "temperature": 0.0, "avg_logprob": -0.36117256215188354, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.0240478515625, "words": null}, {"id": 82, "seek": 45164, "start": 436.96, "end": 441.8, "text": " ricerca fa il suo ingresso il secondo concetto a cui abbiamo accennato prima e", "tokens": [50834, 21040, 36127, 2050, 1930, 34197, 3957, 29652, 1930, 41601, 1588, 23778, 257, 22929, 22815, 1317, 1857, 2513, 19507, 308, 51076], "temperature": 0.0, "avg_logprob": -0.36117256215188354, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.0240478515625, "words": null}, {"id": 83, "seek": 45164, "start": 441.8, "end": 446.6, "text": " cio\u00e8 la classificazione. All'interno della lista dei documenti che un motore", "tokens": [51076, 41827, 635, 1508, 1089, 12928, 13, 1057, 6, 5106, 1771, 11618, 27764, 13874, 4166, 72, 947, 517, 2184, 418, 51316], "temperature": 0.0, "avg_logprob": -0.36117256215188354, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.0240478515625, "words": null}, {"id": 84, "seek": 45164, "start": 446.6, "end": 451.64, "text": " di ricerca \u00e8 in grado di restituire gli elementi vengono inseriti in un", "tokens": [51316, 1026, 21040, 36127, 4873, 294, 677, 1573, 1026, 1472, 6380, 621, 17161, 4478, 72, 371, 1501, 8957, 1028, 260, 8707, 294, 517, 51568], "temperature": 0.0, "avg_logprob": -0.36117256215188354, "compression_ratio": 1.6551724137931034, "no_speech_prob": 0.0240478515625, "words": null}, {"id": 85, "seek": 47980, "start": 452.36, "end": 455.8, "text": " All'interno della lista dei documenti che un motore di ricerca \u00e8 in grado di", "tokens": [50400, 1057, 6, 5106, 1771, 11618, 27764, 13874, 4166, 72, 947, 517, 2184, 418, 1026, 21040, 36127, 4873, 294, 677, 1573, 1026, 50572], "temperature": 0.0, "avg_logprob": -0.2198660716650978, "compression_ratio": 1.6167883211678833, "no_speech_prob": 0.1309814453125, "words": null}, {"id": 86, "seek": 47980, "start": 455.8, "end": 460.91999999999996, "text": " restituire gli elementi vengono fondamentalmente ordinati posizionando", "tokens": [50572, 1472, 6380, 621, 17161, 4478, 72, 371, 1501, 8957, 9557, 44538, 4082, 25376, 6908, 1366, 590, 313, 1806, 50828], "temperature": 0.0, "avg_logprob": -0.2198660716650978, "compression_ratio": 1.6167883211678833, "no_speech_prob": 0.1309814453125, "words": null}, {"id": 87, "seek": 47980, "start": 460.91999999999996, "end": 465.59999999999997, "text": " in testa quello che sembra il pi\u00f9 pertinente come secondo quello un po'", "tokens": [50828, 294, 1500, 64, 22813, 947, 20775, 424, 1930, 10589, 13269, 259, 1576, 808, 41601, 22813, 517, 714, 6, 51062], "temperature": 0.0, "avg_logprob": -0.2198660716650978, "compression_ratio": 1.6167883211678833, "no_speech_prob": 0.1309814453125, "words": null}, {"id": 88, "seek": 47980, "start": 465.59999999999997, "end": 470.59999999999997, "text": " meno pertinente e cos\u00ec via. Ora capiamoci nella realt\u00e0 la classificazione", "tokens": [51062, 40236, 13269, 259, 1576, 308, 23278, 5766, 13, 43672, 1410, 7415, 537, 23878, 47512, 635, 1508, 1089, 12928, 51312], "temperature": 0.0, "avg_logprob": -0.2198660716650978, "compression_ratio": 1.6167883211678833, "no_speech_prob": 0.1309814453125, "words": null}, {"id": 89, "seek": 47980, "start": 470.59999999999997, "end": 475.56, "text": " dei risultati non si basa unicamente sulla distanza tra due parole ma su", "tokens": [51312, 13874, 2253, 723, 6908, 2107, 1511, 987, 64, 517, 23653, 33625, 1483, 20030, 944, 3462, 26783, 463, 459, 51560], "temperature": 0.0, "avg_logprob": -0.2198660716650978, "compression_ratio": 1.6167883211678833, "no_speech_prob": 0.1309814453125, "words": null}, {"id": 90, "seek": 47980, "start": 475.56, "end": 479.8, "text": " moltissime variabili che per forza di cose non possiamo analizzare in un", "tokens": [51560, 10739, 891, 1312, 3034, 455, 2312, 947, 680, 337, 2394, 1026, 30261, 2107, 44758, 2624, 8072, 543, 294, 517, 51772], "temperature": 0.0, "avg_logprob": -0.2198660716650978, "compression_ratio": 1.6167883211678833, "no_speech_prob": 0.1309814453125, "words": null}, {"id": 91, "seek": 50780, "start": 479.8, "end": 483.6, "text": " podcast di un quarto d'ora. Oltre a ci\u00f2 gli algoritmi di", "tokens": [50364, 7367, 1026, 517, 50109, 274, 6, 3252, 13, 422, 2282, 265, 257, 6983, 4293, 17161, 3501, 50017, 3057, 1026, 50554], "temperature": 0.0, "avg_logprob": -0.18432801289665968, "compression_ratio": 1.633587786259542, "no_speech_prob": 0.444580078125, "words": null}, {"id": 92, "seek": 50780, "start": 483.6, "end": 489.84000000000003, "text": " classificazione sono spesso complessi e differiscono da motore a motore. Il famoso", "tokens": [50554, 1508, 1089, 12928, 9259, 637, 5557, 1209, 442, 72, 308, 743, 271, 45846, 1120, 2184, 418, 257, 2184, 418, 13, 4416, 49526, 50866], "temperature": 0.0, "avg_logprob": -0.18432801289665968, "compression_ratio": 1.633587786259542, "no_speech_prob": 0.444580078125, "words": null}, {"id": 93, "seek": 50780, "start": 489.84000000000003, "end": 494.44, "text": " algoritmo PageRank ad esempio ha moltissime regole che contribuiscono al", "tokens": [50866, 3501, 50017, 3280, 21217, 49, 657, 614, 33627, 324, 10739, 891, 1312, 1121, 4812, 947, 4226, 8479, 45846, 419, 51096], "temperature": 0.0, "avg_logprob": -0.18432801289665968, "compression_ratio": 1.633587786259542, "no_speech_prob": 0.444580078125, "words": null}, {"id": 94, "seek": 50780, "start": 494.44, "end": 499.12, "text": " posizionamento di ogni singolo risultato e ci\u00f2 ha permesso a google di", "tokens": [51096, 1366, 590, 313, 8824, 1026, 33189, 1522, 7902, 2253, 723, 2513, 308, 6983, 4293, 324, 4784, 5557, 257, 20742, 1026, 51330], "temperature": 0.0, "avg_logprob": -0.18432801289665968, "compression_ratio": 1.633587786259542, "no_speech_prob": 0.444580078125, "words": null}, {"id": 95, "seek": 50780, "start": 499.12, "end": 503.40000000000003, "text": " sovrastare letteralmente tutti i suoi concorrenti nel corso degli anni.", "tokens": [51330, 370, 85, 4148, 543, 5063, 304, 4082, 19822, 741, 459, 4869, 1588, 284, 1753, 72, 15373, 1181, 539, 32079, 31164, 13, 51544], "temperature": 0.0, "avg_logprob": -0.18432801289665968, "compression_ratio": 1.633587786259542, "no_speech_prob": 0.444580078125, "words": null}, {"id": 96, "seek": 50780, "start": 503.40000000000003, "end": 507.8, "text": " Noi per\u00f2 come al solito siamo interessati a capire come funzionano le", "tokens": [51544, 883, 72, 12673, 808, 419, 1404, 3528, 33459, 12478, 6908, 257, 1410, 621, 808, 49345, 313, 3730, 476, 51764], "temperature": 0.0, "avg_logprob": -0.18432801289665968, "compression_ratio": 1.633587786259542, "no_speech_prob": 0.444580078125, "words": null}, {"id": 97, "seek": 53672, "start": 507.84000000000003, "end": 511.88, "text": " cose e quindi prendiamo in considerazione gli aspetti base della", "tokens": [50366, 30261, 308, 15727, 9866, 7415, 294, 1949, 12928, 17161, 16817, 12495, 3096, 11618, 50568], "temperature": 0.0, "avg_logprob": -0.19680059677551662, "compression_ratio": 1.7026022304832713, "no_speech_prob": 0.047393798828125, "words": null}, {"id": 98, "seek": 53672, "start": 511.88, "end": 516.92, "text": " classificazione dei risultati e cio\u00e8 la distanza tra le parole e il loro peso", "tokens": [50568, 1508, 1089, 12928, 13874, 2253, 723, 6908, 308, 41827, 635, 1483, 20030, 944, 476, 26783, 308, 1930, 28810, 28149, 50820], "temperature": 0.0, "avg_logprob": -0.19680059677551662, "compression_ratio": 1.7026022304832713, "no_speech_prob": 0.047393798828125, "words": null}, {"id": 99, "seek": 53672, "start": 516.92, "end": 522.5600000000001, "text": " all'interno del testo. Come abbiamo gi\u00e0 accennato qualche minuto fa minore \u00e8 la", "tokens": [50820, 439, 6, 5106, 1771, 1103, 1500, 78, 13, 2492, 22815, 30469, 1317, 1857, 2513, 38737, 923, 8262, 2050, 923, 418, 4873, 635, 51102], "temperature": 0.0, "avg_logprob": -0.19680059677551662, "compression_ratio": 1.7026022304832713, "no_speech_prob": 0.047393798828125, "words": null}, {"id": 100, "seek": 53672, "start": 522.5600000000001, "end": 527.48, "text": " distanza fra le parole cercate maggiore \u00e8 da considerare il valore della pagina", "tokens": [51102, 1483, 20030, 6600, 476, 26783, 36099, 473, 463, 22771, 418, 4873, 1120, 1949, 543, 1930, 1323, 418, 11618, 11812, 1426, 51348], "temperature": 0.0, "avg_logprob": -0.19680059677551662, "compression_ratio": 1.7026022304832713, "no_speech_prob": 0.047393798828125, "words": null}, {"id": 101, "seek": 53672, "start": 527.48, "end": 532.2, "text": " che esse identificano. Quindi ci serve un meccanismo per valutare questa distanza", "tokens": [51348, 947, 6755, 49456, 3730, 13, 32534, 6983, 4596, 517, 385, 1914, 282, 6882, 680, 1323, 325, 543, 16540, 1483, 20030, 51584], "temperature": 0.0, "avg_logprob": -0.19680059677551662, "compression_ratio": 1.7026022304832713, "no_speech_prob": 0.047393798828125, "words": null}, {"id": 102, "seek": 53672, "start": 532.2, "end": 536.72, "text": " che sia al tempo stesso preciso e permetta di effettuare i calcoli in", "tokens": [51584, 947, 25176, 419, 8972, 44413, 30109, 308, 4784, 16593, 1026, 1244, 42747, 543, 741, 2104, 8768, 72, 294, 51810], "temperature": 0.0, "avg_logprob": -0.19680059677551662, "compression_ratio": 1.7026022304832713, "no_speech_prob": 0.047393798828125, "words": null}, {"id": 103, "seek": 56400, "start": 536.8000000000001, "end": 542.24, "text": " pochi istanti. La soluzione a questo problema in realt\u00e0 \u00e8 pi\u00f9 semplice di", "tokens": [50368, 714, 8036, 1418, 11520, 13, 2369, 1404, 3334, 5328, 257, 10263, 12395, 294, 47512, 4873, 10589, 4361, 564, 573, 1026, 50640], "temperature": 0.0, "avg_logprob": -0.19921875216307178, "compression_ratio": 1.6470588235294117, "no_speech_prob": 0.0233306884765625, "words": null}, {"id": 104, "seek": 56400, "start": 542.24, "end": 545.76, "text": " quanto possa sembrare. Ci basta potenziare il nostro indice,", "tokens": [50640, 17820, 41564, 20775, 35559, 13, 20188, 45282, 1847, 268, 3992, 543, 1930, 35779, 1016, 573, 11, 50816], "temperature": 0.0, "avg_logprob": -0.19921875216307178, "compression_ratio": 1.6470588235294117, "no_speech_prob": 0.0233306884765625, "words": null}, {"id": 105, "seek": 56400, "start": 545.76, "end": 550.24, "text": " quello che utilizziamo per trovare le pagine che contengono le parole cercate,", "tokens": [50816, 22813, 947, 40355, 7415, 680, 35449, 543, 476, 280, 10260, 947, 660, 1501, 8957, 476, 26783, 36099, 473, 11, 51040], "temperature": 0.0, "avg_logprob": -0.19921875216307178, "compression_ratio": 1.6470588235294117, "no_speech_prob": 0.0233306884765625, "words": null}, {"id": 106, "seek": 56400, "start": 550.24, "end": 555.6, "text": " aggiungendovi un'ulteriore informazione e cio\u00e8 la posizione della parola nel", "tokens": [51040, 42254, 1063, 3999, 4917, 517, 6, 425, 34345, 418, 1356, 12928, 308, 41827, 635, 1366, 35740, 11618, 971, 4711, 15373, 51308], "temperature": 0.0, "avg_logprob": -0.19921875216307178, "compression_ratio": 1.6470588235294117, "no_speech_prob": 0.0233306884765625, "words": null}, {"id": 107, "seek": 56400, "start": 555.6, "end": 558.88, "text": " testo. Con questa modifica il nostro indice \u00e8", "tokens": [51308, 1500, 78, 13, 2656, 16540, 1072, 43377, 1930, 35779, 1016, 573, 4873, 51472], "temperature": 0.0, "avg_logprob": -0.19921875216307178, "compression_ratio": 1.6470588235294117, "no_speech_prob": 0.0233306884765625, "words": null}, {"id": 108, "seek": 56400, "start": 558.88, "end": 564.0, "text": " diventato una lista di parole in ordine alfabetico per ciascuna delle quali \u00e8", "tokens": [51472, 3414, 317, 2513, 2002, 27764, 1026, 26783, 294, 4792, 533, 419, 69, 9058, 2789, 680, 269, 4609, 66, 5051, 16485, 4101, 72, 4873, 51728], "temperature": 0.0, "avg_logprob": -0.19921875216307178, "compression_ratio": 1.6470588235294117, "no_speech_prob": 0.0233306884765625, "words": null}, {"id": 109, "seek": 59024, "start": 564.0, "end": 570.08, "text": " indicato in quali pagine si trovano e per ciascuna pagina in quali posizioni la", "tokens": [50364, 4694, 2513, 294, 4101, 72, 280, 10260, 1511, 35449, 3730, 308, 680, 269, 4609, 66, 5051, 11812, 1426, 294, 4101, 72, 1366, 590, 15273, 635, 50668], "temperature": 0.0, "avg_logprob": -0.1876280748697578, "compression_ratio": 1.706896551724138, "no_speech_prob": 0.164306640625, "words": null}, {"id": 110, "seek": 59024, "start": 570.08, "end": 575.08, "text": " parola compare. Mi rendo conto che pu\u00f2 sembrare un concetto un po' complicato", "tokens": [50668, 971, 4711, 6794, 13, 10204, 6125, 78, 660, 78, 947, 26526, 20775, 35559, 517, 1588, 23778, 517, 714, 6, 16060, 2513, 50918], "temperature": 0.0, "avg_logprob": -0.1876280748697578, "compression_ratio": 1.706896551724138, "no_speech_prob": 0.164306640625, "words": null}, {"id": 111, "seek": 59024, "start": 575.08, "end": 579.8, "text": " ma in realt\u00e0 non lo \u00e8. In pratica volendo fare un esempio prendete un qualsiasi", "tokens": [50918, 463, 294, 47512, 2107, 450, 4873, 13, 682, 28844, 2262, 1996, 3999, 11994, 517, 33627, 9866, 3498, 517, 421, 1124, 4609, 72, 51154], "temperature": 0.0, "avg_logprob": -0.1876280748697578, "compression_ratio": 1.706896551724138, "no_speech_prob": 0.164306640625, "words": null}, {"id": 112, "seek": 59024, "start": 579.8, "end": 584.88, "text": " libro con indice analitico, leggete la prima parola dell'indice, trovatela nelle", "tokens": [51154, 29354, 416, 1016, 573, 2624, 270, 2789, 11, 1676, 847, 68, 635, 19507, 971, 4711, 19781, 6, 471, 573, 11, 4495, 23352, 4053, 46350, 51408], "temperature": 0.0, "avg_logprob": -0.1876280748697578, "compression_ratio": 1.706896551724138, "no_speech_prob": 0.164306640625, "words": null}, {"id": 113, "seek": 59024, "start": 584.88, "end": 590.24, "text": " pagine indicate e contate dopo quante parole dall'inizio della pagina essa", "tokens": [51408, 280, 10260, 13330, 308, 660, 473, 35196, 421, 2879, 26783, 43351, 6, 9328, 1004, 11618, 11812, 1426, 7208, 51676], "temperature": 0.0, "avg_logprob": -0.1876280748697578, "compression_ratio": 1.706896551724138, "no_speech_prob": 0.164306640625, "words": null}, {"id": 114, "seek": 61568, "start": 590.32, "end": 596.84, "text": " compare. Ora aggiungete questo numero all'indice dopo il numero di pagina. Se", "tokens": [50368, 6794, 13, 43672, 42254, 409, 847, 68, 10263, 46839, 439, 6, 471, 573, 35196, 1930, 46839, 1026, 11812, 1426, 13, 1100, 50694], "temperature": 0.0, "avg_logprob": -0.19980053302455456, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.230712890625, "words": null}, {"id": 115, "seek": 61568, "start": 596.84, "end": 601.36, "text": " lo fate per tutte le parole vi troverete con un indice che contiene informazioni", "tokens": [50694, 450, 12738, 680, 38632, 476, 26783, 1932, 4495, 331, 3498, 416, 517, 1016, 573, 947, 660, 10174, 1356, 27569, 50920], "temperature": 0.0, "avg_logprob": -0.19980053302455456, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.230712890625, "words": null}, {"id": 116, "seek": 61568, "start": 601.36, "end": 607.5600000000001, "text": " di questo tipo. La parola codice compare nella pagina 10 come ventitresima parola,", "tokens": [50920, 1026, 10263, 9746, 13, 2369, 971, 4711, 17656, 573, 6794, 23878, 11812, 1426, 1266, 808, 6931, 270, 495, 4775, 971, 4711, 11, 51230], "temperature": 0.0, "avg_logprob": -0.19980053302455456, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.230712890625, "words": null}, {"id": 117, "seek": 61568, "start": 607.5600000000001, "end": 615.6800000000001, "text": " nella pagina 60 come diciottesima parola, nella pagina 200 come quarantesima. La", "tokens": [51230, 23878, 11812, 1426, 4060, 808, 14285, 6471, 7269, 4775, 971, 4711, 11, 23878, 11812, 1426, 2331, 808, 41240, 279, 4775, 13, 2369, 51636], "temperature": 0.0, "avg_logprob": -0.19980053302455456, "compression_ratio": 1.7692307692307692, "no_speech_prob": 0.230712890625, "words": null}, {"id": 118, "seek": 64452, "start": 615.6800000000001, "end": 621.0400000000001, "text": " parola pensieri invece compare nella pagina 10 come venticinquesima parola e", "tokens": [50364, 971, 4711, 6099, 45980, 36344, 6794, 23878, 11812, 1426, 1266, 808, 6931, 299, 37384, 279, 4775, 971, 4711, 308, 50632], "temperature": 0.0, "avg_logprob": -0.16942935145419577, "compression_ratio": 1.7727272727272727, "no_speech_prob": 0.189208984375, "words": null}, {"id": 119, "seek": 64452, "start": 621.0400000000001, "end": 627.5200000000001, "text": " nella pagina 50 come ottava e trentesima e cos\u00ec via fino ad ottenere l'indice di", "tokens": [50632, 23878, 11812, 1426, 2625, 808, 42772, 4061, 308, 256, 1753, 279, 4775, 308, 23278, 5766, 42560, 614, 4337, 1147, 323, 287, 6, 471, 573, 1026, 50956], "temperature": 0.0, "avg_logprob": -0.16942935145419577, "compression_ratio": 1.7727272727272727, "no_speech_prob": 0.189208984375, "words": null}, {"id": 120, "seek": 64452, "start": 627.5200000000001, "end": 634.0000000000001, "text": " tutte le parole del libro con la pagina e la posizione in cui compaiono. Il nostro", "tokens": [50956, 38632, 476, 26783, 1103, 29354, 416, 635, 11812, 1426, 308, 635, 1366, 35740, 294, 22929, 715, 64, 49020, 13, 4416, 35779, 51280], "temperature": 0.0, "avg_logprob": -0.16942935145419577, "compression_ratio": 1.7727272727272727, "no_speech_prob": 0.189208984375, "words": null}, {"id": 121, "seek": 64452, "start": 634.0000000000001, "end": 639.08, "text": " motore di ricerca con un indice del genere diventa in grado di individuare", "tokens": [51280, 2184, 418, 1026, 21040, 36127, 416, 517, 1016, 573, 1103, 41553, 3414, 8938, 294, 677, 1573, 1026, 2461, 84, 543, 51534], "temperature": 0.0, "avg_logprob": -0.16942935145419577, "compression_ratio": 1.7727272727272727, "no_speech_prob": 0.189208984375, "words": null}, {"id": 122, "seek": 64452, "start": 639.08, "end": 644.5200000000001, "text": " le pagine che contengono tutte le parole cercate e anche di classificarle", "tokens": [51534, 476, 280, 10260, 947, 660, 1501, 8957, 38632, 476, 26783, 36099, 473, 308, 11585, 1026, 1508, 25625, 306, 51806], "temperature": 0.0, "avg_logprob": -0.16942935145419577, "compression_ratio": 1.7727272727272727, "no_speech_prob": 0.189208984375, "words": null}, {"id": 123, "seek": 66376, "start": 644.52, "end": 650.52, "text": " calcolando le differenze tra i numeri di posizione. Minore sar\u00e0 il risultato di", "tokens": [50364, 2104, 8768, 1806, 476, 743, 268, 1381, 944, 741, 7866, 72, 1026, 1366, 35740, 13, 2829, 418, 41338, 1930, 2253, 723, 2513, 1026, 50664], "temperature": 0.0, "avg_logprob": -0.2487157599566734, "compression_ratio": 1.5657894736842106, "no_speech_prob": 0.02032470703125, "words": null}, {"id": 124, "seek": 66376, "start": 650.52, "end": 655.96, "text": " questa operazione di sottrazione e maggiore sar\u00e0 la vicinanza tra le due", "tokens": [50664, 16540, 2208, 12928, 1026, 262, 1521, 424, 19706, 308, 463, 22771, 418, 41338, 635, 26031, 259, 20030, 944, 476, 3462, 50936], "temperature": 0.0, "avg_logprob": -0.2487157599566734, "compression_ratio": 1.5657894736842106, "no_speech_prob": 0.02032470703125, "words": null}, {"id": 125, "seek": 66376, "start": 655.96, "end": 661.0, "text": " parole e quindi maggiore sar\u00e0 il valore della pagina ai fini della nostra", "tokens": [50936, 26783, 308, 15727, 463, 22771, 418, 41338, 1930, 1323, 418, 11618, 11812, 1426, 9783, 40634, 11618, 34311, 51188], "temperature": 0.0, "avg_logprob": -0.2487157599566734, "compression_ratio": 1.5657894736842106, "no_speech_prob": 0.02032470703125, "words": null}, {"id": 126, "seek": 66376, "start": 661.0, "end": 663.76, "text": " ricerca.", "tokens": [51188, 21040, 36127, 13, 51326], "temperature": 0.0, "avg_logprob": -0.2487157599566734, "compression_ratio": 1.5657894736842106, "no_speech_prob": 0.02032470703125, "words": null}, {"id": 127, "seek": 68956, "start": 663.76, "end": 674.96, "text": " Abbiamo dunque capito come creare un meccanismo veloce per cercare tra", "tokens": [50364, 32673, 7415, 10234, 1077, 1410, 3528, 808, 1197, 543, 517, 385, 1914, 282, 6882, 1241, 752, 384, 680, 10146, 5685, 944, 50924], "temperature": 0.0, "avg_logprob": -0.2066176540711347, "compression_ratio": 1.4583333333333333, "no_speech_prob": 0.0089874267578125, "words": null}, {"id": 128, "seek": 68956, "start": 674.96, "end": 680.04, "text": " l'immensa quantit\u00e0 di documenti presenti nel web e abbiamo anche scogitato un", "tokens": [50924, 287, 6, 32076, 5790, 4426, 12445, 1026, 4166, 72, 1974, 72, 15373, 3670, 308, 22815, 11585, 795, 664, 270, 2513, 517, 51178], "temperature": 0.0, "avg_logprob": -0.2066176540711347, "compression_ratio": 1.4583333333333333, "no_speech_prob": 0.0089874267578125, "words": null}, {"id": 129, "seek": 68956, "start": 680.04, "end": 685.2, "text": " modo per dare una risposta pi\u00f9 efficace alle ricerche di pi\u00f9 parole", "tokens": [51178, 16664, 680, 8955, 2002, 2253, 79, 8638, 10589, 4703, 617, 5430, 21040, 260, 1876, 1026, 10589, 26783, 51436], "temperature": 0.0, "avg_logprob": -0.2066176540711347, "compression_ratio": 1.4583333333333333, "no_speech_prob": 0.0089874267578125, "words": null}, {"id": 130, "seek": 68956, "start": 685.2, "end": 689.56, "text": " contemporaneamente. Ora per\u00f2 come ultimo sforzo ci resta da", "tokens": [51436, 13046, 1929, 3439, 13, 43672, 12673, 808, 3725, 6934, 262, 2994, 4765, 6983, 1472, 64, 1120, 51654], "temperature": 0.0, "avg_logprob": -0.2066176540711347, "compression_ratio": 1.4583333333333333, "no_speech_prob": 0.0089874267578125, "words": null}, {"id": 131, "seek": 71928, "start": 689.5600000000001, "end": 694.0000000000001, "text": " chiederci se pensiamo che tutte le parole di un testo abbiano lo stesso", "tokens": [50364, 417, 5653, 537, 369, 6099, 7415, 947, 38632, 476, 26783, 1026, 517, 1500, 78, 16903, 6254, 450, 44413, 50586], "temperature": 0.0, "avg_logprob": -0.20240383916176283, "compression_ratio": 1.7868217054263567, "no_speech_prob": 0.362060546875, "words": null}, {"id": 132, "seek": 71928, "start": 694.0000000000001, "end": 699.2800000000001, "text": " valore. La risposta a questa domanda \u00e8 ovviamente no. Se ad esempio cerchiamo la", "tokens": [50586, 1323, 418, 13, 2369, 2253, 79, 8638, 257, 16540, 3285, 5575, 4873, 14187, 23347, 572, 13, 1100, 614, 33627, 10146, 339, 7415, 635, 50850], "temperature": 0.0, "avg_logprob": -0.20240383916176283, "compression_ratio": 1.7868217054263567, "no_speech_prob": 0.362060546875, "words": null}, {"id": 133, "seek": 71928, "start": 699.2800000000001, "end": 703.96, "text": " frase pensieri in codice e abbiamo una pagina web in cui le parole pensieri e", "tokens": [50850, 38406, 6099, 45980, 294, 17656, 573, 308, 22815, 2002, 11812, 1426, 3670, 294, 22929, 476, 26783, 6099, 45980, 308, 51084], "temperature": 0.0, "avg_logprob": -0.20240383916176283, "compression_ratio": 1.7868217054263567, "no_speech_prob": 0.362060546875, "words": null}, {"id": 134, "seek": 71928, "start": 703.96, "end": 709.6800000000001, "text": " codice compaiono nel titolo beh questa sar\u00e0 probabilmente pi\u00f9 attinente alla", "tokens": [51084, 17656, 573, 715, 64, 49020, 15373, 3459, 7902, 1540, 16540, 41338, 31959, 4082, 10589, 951, 259, 1576, 11591, 51370], "temperature": 0.0, "avg_logprob": -0.20240383916176283, "compression_ratio": 1.7868217054263567, "no_speech_prob": 0.362060546875, "words": null}, {"id": 135, "seek": 71928, "start": 709.6800000000001, "end": 714.8800000000001, "text": " nostra ricerca rispetto ad una pagina in cui queste stesse parole appaiono ad", "tokens": [51370, 34311, 21040, 36127, 2253, 42801, 614, 2002, 11812, 1426, 294, 22929, 35455, 342, 7357, 26783, 724, 64, 49020, 614, 51630], "temperature": 0.0, "avg_logprob": -0.20240383916176283, "compression_ratio": 1.7868217054263567, "no_speech_prob": 0.362060546875, "words": null}, {"id": 136, "seek": 71928, "start": 714.8800000000001, "end": 719.2800000000001, "text": " esempio in un elenco puntato. Se vogliamo quindi che il nostro motore di", "tokens": [51630, 33627, 294, 517, 806, 268, 1291, 18212, 2513, 13, 1100, 31273, 49926, 15727, 947, 1930, 35779, 2184, 418, 1026, 51850], "temperature": 0.0, "avg_logprob": -0.20240383916176283, "compression_ratio": 1.7868217054263567, "no_speech_prob": 0.362060546875, "words": null}, {"id": 137, "seek": 74704, "start": 719.28, "end": 724.24, "text": " ricerca produca dei risultati migliori ci tocca trovare un modo di valutare", "tokens": [50364, 21040, 36127, 1082, 496, 13874, 2253, 723, 6908, 6186, 75, 1973, 72, 6983, 281, 22394, 35449, 543, 517, 16664, 1026, 1323, 325, 543, 50612], "temperature": 0.0, "avg_logprob": -0.19757231404958678, "compression_ratio": 1.6244725738396624, "no_speech_prob": 0.0053863525390625, "words": null}, {"id": 138, "seek": 74704, "start": 724.24, "end": 730.0799999999999, "text": " questo diverso peso fra le varie parti del testo. Per ottenere ci\u00f2 come prima", "tokens": [50612, 10263, 18558, 539, 28149, 6600, 476, 1374, 414, 24408, 1103, 1500, 78, 13, 3026, 4337, 1147, 323, 6983, 4293, 808, 19507, 50904], "temperature": 0.0, "avg_logprob": -0.19757231404958678, "compression_ratio": 1.6244725738396624, "no_speech_prob": 0.0053863525390625, "words": null}, {"id": 139, "seek": 74704, "start": 730.0799999999999, "end": 734.88, "text": " cosa serve un meccanismo per individuare le varie parti di una pagina web", "tokens": [50904, 10163, 4596, 517, 385, 1914, 282, 6882, 680, 2461, 84, 543, 476, 1374, 414, 24408, 1026, 2002, 11812, 1426, 3670, 51144], "temperature": 0.0, "avg_logprob": -0.19757231404958678, "compression_ratio": 1.6244725738396624, "no_speech_prob": 0.0053863525390625, "words": null}, {"id": 140, "seek": 74704, "start": 734.88, "end": 741.76, "text": " titolo, paragrafi, sezioni, liste, parole evidenziate eccetera. Ma guarda caso", "tokens": [51144, 3459, 7902, 11, 17372, 10437, 72, 11, 369, 89, 15273, 11, 1329, 68, 11, 26783, 43699, 3992, 473, 29613, 20269, 13, 4042, 6290, 64, 9666, 51488], "temperature": 0.0, "avg_logprob": -0.19757231404958678, "compression_ratio": 1.6244725738396624, "no_speech_prob": 0.0053863525390625, "words": null}, {"id": 141, "seek": 74704, "start": 741.76, "end": 747.04, "text": " questo lavoro di valorizzazione dei testi \u00e8 proprio l'obiettivo primario del", "tokens": [51488, 10263, 42060, 1026, 15367, 8072, 12928, 13874, 1500, 72, 4873, 28203, 287, 6, 996, 1684, 83, 6340, 2886, 4912, 1103, 51752], "temperature": 0.0, "avg_logprob": -0.19757231404958678, "compression_ratio": 1.6244725738396624, "no_speech_prob": 0.0053863525390625, "words": null}, {"id": 142, "seek": 77276, "start": 747.04, "end": 752.92, "text": " linguaggio html, cio\u00e8 quel linguaggio che compone praticamente ogni pagina", "tokens": [50364, 21766, 30763, 276, 83, 15480, 11, 41827, 7178, 21766, 30763, 947, 715, 546, 45734, 33189, 11812, 1426, 50658], "temperature": 0.0, "avg_logprob": -0.20974099770322577, "compression_ratio": 1.6234309623430963, "no_speech_prob": 0.358642578125, "words": null}, {"id": 143, "seek": 77276, "start": 752.92, "end": 758.16, "text": " web. L'html \u00e8 infatti un linguaggio di markup, ne abbiamo gi\u00e0 parlato in altri", "tokens": [50658, 3670, 13, 441, 6, 357, 15480, 4873, 1536, 21515, 517, 21766, 30763, 1026, 1491, 1010, 11, 408, 22815, 30469, 13734, 2513, 294, 33707, 50920], "temperature": 0.0, "avg_logprob": -0.20974099770322577, "compression_ratio": 1.6234309623430963, "no_speech_prob": 0.358642578125, "words": null}, {"id": 144, "seek": 77276, "start": 758.16, "end": 762.26, "text": " episodi, e ci permette di dare uno specifico valore alle varie parti del", "tokens": [50920, 2927, 30727, 11, 308, 6983, 4784, 3007, 1026, 8955, 8526, 2685, 78, 1323, 418, 5430, 1374, 414, 24408, 1103, 51125], "temperature": 0.0, "avg_logprob": -0.20974099770322577, "compression_ratio": 1.6234309623430963, "no_speech_prob": 0.358642578125, "words": null}, {"id": 145, "seek": 77276, "start": 762.26, "end": 768.36, "text": " testo utilizzando delle parole chiave che prendono il nome di tag. Il titolo di una", "tokens": [51125, 1500, 78, 40355, 1806, 16485, 26783, 45793, 303, 947, 9866, 8957, 1930, 19003, 1026, 6162, 13, 4416, 3459, 7902, 1026, 2002, 51430], "temperature": 0.0, "avg_logprob": -0.20974099770322577, "compression_ratio": 1.6234309623430963, "no_speech_prob": 0.358642578125, "words": null}, {"id": 146, "seek": 77276, "start": 768.36, "end": 772.76, "text": " pagina web ad esempio sar\u00e0 racchiusa tra due parole speciali che aprono e", "tokens": [51430, 11812, 1426, 3670, 614, 33627, 41338, 4129, 339, 4872, 64, 944, 3462, 26783, 2121, 72, 947, 10992, 8957, 308, 51650], "temperature": 0.0, "avg_logprob": -0.20974099770322577, "compression_ratio": 1.6234309623430963, "no_speech_prob": 0.358642578125, "words": null}, {"id": 147, "seek": 80108, "start": 772.88, "end": 778.72, "text": " chiudono il tag title e la stessa cosa varr\u00e0 per i sottotitoli, i paragrafi, le", "tokens": [50370, 13228, 532, 8957, 1930, 6162, 4876, 308, 635, 342, 8391, 10163, 1374, 39212, 680, 741, 262, 1521, 310, 270, 9384, 11, 741, 17372, 10437, 72, 11, 476, 50662], "temperature": 0.0, "avg_logprob": -0.1878472235467699, "compression_ratio": 1.6515151515151516, "no_speech_prob": 0.31005859375, "words": null}, {"id": 148, "seek": 80108, "start": 778.72, "end": 782.2, "text": " didascalie e tutti gli altri elementi del testo.", "tokens": [50662, 630, 27303, 414, 308, 19822, 17161, 33707, 4478, 72, 1103, 1500, 78, 13, 50836], "temperature": 0.0, "avg_logprob": -0.1878472235467699, "compression_ratio": 1.6515151515151516, "no_speech_prob": 0.31005859375, "words": null}, {"id": 149, "seek": 80108, "start": 782.2, "end": 787.04, "text": " Questo vuol dire che ogni pagina contiene gi\u00e0 le informazioni di cui abbiamo", "tokens": [50836, 38167, 9732, 401, 1264, 947, 33189, 11812, 1426, 660, 10174, 30469, 476, 1356, 27569, 1026, 22929, 22815, 51078], "temperature": 0.0, "avg_logprob": -0.1878472235467699, "compression_ratio": 1.6515151515151516, "no_speech_prob": 0.31005859375, "words": null}, {"id": 150, "seek": 80108, "start": 787.04, "end": 791.08, "text": " bisogno per effettuare la nostra classificazione. Ci occorre solo un", "tokens": [51078, 40505, 1771, 680, 1244, 42747, 543, 635, 34311, 1508, 1089, 12928, 13, 20188, 2678, 284, 265, 6944, 517, 51280], "temperature": 0.0, "avg_logprob": -0.1878472235467699, "compression_ratio": 1.6515151515151516, "no_speech_prob": 0.31005859375, "words": null}, {"id": 151, "seek": 80108, "start": 791.08, "end": 795.76, "text": " meccanismo che sia efficace e veloce nel consultarle e che non ci costringa a", "tokens": [51280, 385, 1914, 282, 6882, 947, 25176, 4703, 617, 308, 1241, 752, 384, 15373, 7189, 36153, 308, 947, 2107, 6983, 2063, 2937, 64, 257, 51514], "temperature": 0.0, "avg_logprob": -0.1878472235467699, "compression_ratio": 1.6515151515151516, "no_speech_prob": 0.31005859375, "words": null}, {"id": 152, "seek": 80108, "start": 795.76, "end": 801.08, "text": " ricontrollare ogni pagina per capire se la parola individuata si trova nel titolo", "tokens": [51514, 21040, 896, 3970, 543, 33189, 11812, 1426, 680, 1410, 621, 369, 635, 971, 4711, 2461, 84, 3274, 1511, 4495, 2757, 15373, 3459, 7902, 51780], "temperature": 0.0, "avg_logprob": -0.1878472235467699, "compression_ratio": 1.6515151515151516, "no_speech_prob": 0.31005859375, "words": null}, {"id": 153, "seek": 82704, "start": 801.08, "end": 806.24, "text": " o in un paragrafo o in una nota. Ancora una volta la soluzione \u00e8 nel nostro", "tokens": [50364, 277, 294, 517, 17372, 10437, 78, 277, 294, 2002, 36192, 13, 1107, 66, 3252, 2002, 18765, 635, 1404, 3334, 5328, 4873, 15373, 35779, 50622], "temperature": 0.0, "avg_logprob": -0.23569915696220883, "compression_ratio": 1.6440677966101696, "no_speech_prob": 0.08624267578125, "words": null}, {"id": 154, "seek": 82704, "start": 806.24, "end": 810.96, "text": " fedele indice e non ci richiede nemmeno di modificarlo, ci basta semplicemente", "tokens": [50622, 4636, 16884, 1016, 573, 308, 2107, 6983, 4593, 1091, 68, 408, 2174, 5808, 1026, 1072, 1089, 19457, 11, 6983, 45282, 4361, 4770, 16288, 50858], "temperature": 0.0, "avg_logprob": -0.23569915696220883, "compression_ratio": 1.6440677966101696, "no_speech_prob": 0.08624267578125, "words": null}, {"id": 155, "seek": 82704, "start": 810.96, "end": 817.36, "text": " indicizzare anche le parole speciali che derimitano i tag html. In questo modo", "tokens": [50858, 4694, 8072, 543, 11585, 476, 26783, 2121, 72, 947, 1163, 332, 270, 3730, 741, 6162, 276, 83, 15480, 13, 682, 10263, 16664, 51178], "temperature": 0.0, "avg_logprob": -0.23569915696220883, "compression_ratio": 1.6440677966101696, "no_speech_prob": 0.08624267578125, "words": null}, {"id": 156, "seek": 82704, "start": 817.36, "end": 822.12, "text": " possiamo usare l'indice per sapere anche la posizione dei tag all'interno della", "tokens": [51178, 44758, 505, 543, 287, 6, 471, 573, 680, 18985, 323, 11585, 635, 1366, 35740, 13874, 6162, 439, 6, 5106, 1771, 11618, 51416], "temperature": 0.0, "avg_logprob": -0.23569915696220883, "compression_ratio": 1.6440677966101696, "no_speech_prob": 0.08624267578125, "words": null}, {"id": 157, "seek": 82704, "start": 822.12, "end": 827.0400000000001, "text": " pagina e molto facilmente quando valutiamo il peso di una parola possiamo", "tokens": [51416, 11812, 1426, 308, 16394, 10217, 4082, 7770, 1323, 325, 7415, 1930, 28149, 1026, 2002, 971, 4711, 44758, 51662], "temperature": 0.0, "avg_logprob": -0.23569915696220883, "compression_ratio": 1.6440677966101696, "no_speech_prob": 0.08624267578125, "words": null}, {"id": 158, "seek": 85104, "start": 827.04, "end": 831.12, "text": " capire se si trova in mezzo tra la parola chiave che apre un tag e quella", "tokens": [50364, 1410, 621, 369, 1511, 4495, 2757, 294, 385, 35130, 944, 635, 971, 4711, 45793, 303, 947, 1882, 265, 517, 6162, 308, 32234, 50568], "temperature": 0.0, "avg_logprob": -0.23396738508473272, "compression_ratio": 1.6563876651982379, "no_speech_prob": 0.290283203125, "words": null}, {"id": 159, "seek": 85104, "start": 831.12, "end": 835.88, "text": " che lo chiude. Fatto questo quando effettuiamo una ricerca non ci resta", "tokens": [50568, 947, 450, 13228, 2303, 13, 16948, 1353, 10263, 7770, 1244, 42747, 7415, 2002, 21040, 36127, 2107, 6983, 1472, 64, 50806], "temperature": 0.0, "avg_logprob": -0.23396738508473272, "compression_ratio": 1.6563876651982379, "no_speech_prob": 0.290283203125, "words": null}, {"id": 160, "seek": 85104, "start": 835.88, "end": 841.0799999999999, "text": " altro che assegnare un valore alle pagine risultanti in base alla vicinanza", "tokens": [50806, 40924, 947, 5907, 4568, 543, 517, 1323, 418, 5430, 280, 10260, 2253, 723, 11520, 294, 3096, 11591, 26031, 259, 20030, 51066], "temperature": 0.0, "avg_logprob": -0.23396738508473272, "compression_ratio": 1.6563876651982379, "no_speech_prob": 0.290283203125, "words": null}, {"id": 161, "seek": 85104, "start": 841.0799999999999, "end": 846.12, "text": " delle parole trovate e alla loro posizione nel testo e il gioco \u00e8 fatto.", "tokens": [51066, 16485, 26783, 4495, 19083, 308, 11591, 28810, 1366, 35740, 15373, 1500, 78, 308, 1930, 1735, 11198, 4873, 23228, 13, 51318], "temperature": 0.0, "avg_logprob": -0.23396738508473272, "compression_ratio": 1.6563876651982379, "no_speech_prob": 0.290283203125, "words": null}, {"id": 162, "seek": 85104, "start": 846.12, "end": 851.04, "text": " La pagina col punteggio maggiore sar\u00e0 la prima, quella con il secondo punteggio", "tokens": [51318, 2369, 11812, 1426, 1173, 4468, 975, 1615, 1004, 463, 22771, 418, 41338, 635, 19507, 11, 32234, 416, 1930, 41601, 4468, 975, 1615, 1004, 51564], "temperature": 0.0, "avg_logprob": -0.23396738508473272, "compression_ratio": 1.6563876651982379, "no_speech_prob": 0.290283203125, "words": null}, {"id": 163, "seek": 87904, "start": 851.36, "end": 855.0799999999999, "text": " sar\u00e0 la seconda e cos\u00ec via.", "tokens": [50380, 41338, 635, 1150, 64, 308, 23278, 5766, 13, 50566], "temperature": 0.0, "avg_logprob": -0.26656249165534973, "compression_ratio": 1.518348623853211, "no_speech_prob": 0.233154296875, "words": null}, {"id": 164, "seek": 87904, "start": 860.5999999999999, "end": 865.04, "text": " Mi rendo conto che parlare in modo astratto di questi concetti possa", "tokens": [50842, 10204, 6125, 78, 660, 78, 947, 13734, 543, 294, 16664, 5357, 4481, 1353, 1026, 29729, 1588, 12495, 41564, 51064], "temperature": 0.0, "avg_logprob": -0.26656249165534973, "compression_ratio": 1.518348623853211, "no_speech_prob": 0.233154296875, "words": null}, {"id": 165, "seek": 87904, "start": 865.04, "end": 869.24, "text": " risultare un po' complicato e nel caso vogliate approfondire vi metto in", "tokens": [51064, 2253, 723, 543, 517, 714, 6, 16060, 2513, 308, 15373, 9666, 31273, 2081, 473, 2075, 69, 684, 621, 1932, 1131, 1353, 294, 51274], "temperature": 0.0, "avg_logprob": -0.26656249165534973, "compression_ratio": 1.518348623853211, "no_speech_prob": 0.233154296875, "words": null}, {"id": 166, "seek": 87904, "start": 869.24, "end": 874.0799999999999, "text": " descrizione il link affiliato a amazon del libro 9 algoritmi che hanno cambiato", "tokens": [51274, 2189, 19706, 1930, 2113, 14863, 2513, 257, 47010, 1103, 29354, 1722, 3501, 50017, 3057, 947, 26595, 19569, 2513, 51516], "temperature": 0.0, "avg_logprob": -0.26656249165534973, "compression_ratio": 1.518348623853211, "no_speech_prob": 0.233154296875, "words": null}, {"id": 167, "seek": 87904, "start": 874.0799999999999, "end": 879.04, "text": " il futuro dal quale ho preso l'idea per questo e per altri episodi del podcast.", "tokens": [51516, 1930, 23953, 11702, 421, 1220, 1106, 1183, 78, 287, 6, 482, 64, 680, 10263, 308, 680, 33707, 2927, 30727, 1103, 7367, 13, 51764], "temperature": 0.0, "avg_logprob": -0.26656249165534973, "compression_ratio": 1.518348623853211, "no_speech_prob": 0.233154296875, "words": null}, {"id": 168, "seek": 89411, "start": 879.8, "end": 884.48, "text": " Detto questo vi ringrazio per aver ascoltato, vi saluto e vi ricordo che il", "tokens": [50402, 4237, 1353, 10263, 1932, 4875, 30695, 1004, 680, 18247, 15526, 4837, 2513, 11, 1932, 1845, 8262, 308, 1932, 21040, 23872, 947, 1930, 50636], "temperature": 0.0, "avg_logprob": -0.3238467155467896, "compression_ratio": 1.3055555555555556, "no_speech_prob": 0.01204681396484375, "words": null}, {"id": 169, "seek": 89411, "start": 884.48, "end": 888.56, "text": " programmatore risolve problemi, a volte anche usando il computer.", "tokens": [50636, 1461, 15677, 418, 2253, 37361, 1154, 72, 11, 257, 37801, 11585, 29798, 1930, 3820, 13, 50840], "temperature": 0.0, "avg_logprob": -0.3238467155467896, "compression_ratio": 1.3055555555555556, "no_speech_prob": 0.01204681396484375, "words": null}], "language": "Italian"}