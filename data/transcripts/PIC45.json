{"text": " Pensieri in codice. Idee dal mondo del software, a cura di Valerio Galano. Salve a tutti e ben ritrovati su Pensieri in codice. Quello che state ascoltando \u00e8 una sorta di episodio integrativo per la puntata della settimana scorsa, la numero 44 sul protocollo HTTPS. Si tratta di una seconda parte non prevista che mi \u00e8 sembrata necessaria a seguito di una discussione che si \u00e8 tenuta sul gruppo Telegram di Pensieri in codice. In questa breve discussione uno degli utenti chiedeva alcune delucidazioni su un paio di concetti sui quali forse non mi sono soffermato abbastanza. Prontamente un altro utente ha affugato questi dubbi con un paio di esempi che mi sono sembrati molto interessanti. Dunque, ho pensato di unirli a un altro paio di concetti e realizzare questo episodio. Quindi ringrazio Pacca, questo \u00e8 il nome dell'utente, per la pronta risposta e per gli esempi che sto per rubargli. Consiglio a voi, nel caso non l'abbiate gi\u00e0 fatto, di ascoltare prima l'episodio numero 44 che vi metto in descrizione, altrimenti \u00e8 difficile che possiate seguire il discorso di questo episodio. Ultima cosa prima di iniziare, grazie a tutti quegli utenti che si sono iscritti al canale YouTube di Pensieri in codice e iniziamo! Il primo concetto su cui dunque vorrei ritornare \u00e8 quello delle chiavi pubbliche e private. \u00c8 vero che vi ho parlato di come vengono utilizzate, perch\u00e9 sono necessarie ed \u00e8 vero anche che vi ho linkato un vecchio episodio nel quale parlavamo in modo approfondito di come vengono generate. Tuttavia, forse non mi sono soffermato abbastanza sul fascino e sulla potenza di questo tipo di algoritmo. Queste chiavi, infatti, possono avere un duplice utilizzo e, in effetti, entrambi questi utilizzi sono parte integrante del protocollo HTTPS. Il primo utilizzo, l'abbiamo detto anche nel scorso episodio, \u00e8 quello di crittografare le informazioni, ma crittografarle in un modo molto particolare. Nella crittografia asimmetrica, infatti, come faceva anche notare Pacca nel gruppo Telegram, la chiave pubblica pu\u00f2 essere considerata come un vero e proprio lucchetto. Metaforicamente parlando, questo lucchetto esiste in infinite copie e pu\u00f2 essere distribuito a tutta una serie di attori. Questi attori possono utilizzare questi lucchetti, che hanno ricevuto, sempre metaforicamente parlando, aperti, per chiudere informazioni all'interno di metaforiche scatole. Poich\u00e9 quelli che sono stati distribuiti sono solo lucchetti, una volta che le informazioni saranno chiuse all'interno di una scatola, nessuno potr\u00e0 pi\u00f9 aprire tale scatola e leggere o modificare tali informazioni. L'unico che avr\u00e0 questa possibilit\u00e0 sar\u00e0 colui che \u00e8 in possesso della chiave che apre tutti questi lucchetti. E, sempre nella nostra metafora, questa chiave \u00e8, appunto, la chiave privata. Quando il nostro browser comunica, dunque, con un sito web tramite il protocollo HTTPS, riceve da questo un lucchetto da utilizzare per proteggere le informazioni da inviargli. Siccome il lucchetto ricevuto potr\u00e0 essere aperto solamente dal sito in questione, noi possiamo essere sicuri che le informazioni spedite saranno protette. Come dicevo per\u00f2 poco fa, questo non \u00e8 l'unico utilizzo per le chiavi pubblica e privata. Difatti, anche nello scorso episodio abbiamo parlato di certificati e di catena di fiducia. In effetti, anche questo meccanismo funziona grazie alle chiavi ed, in particolare, utilizzandole al contrario. Se, infatti, si utilizza una chiave privata per crittografare un testo o un'informazione, questa potr\u00e0 essere decrittata grazie all'utilizzo delle chiavi pubbliche. In questo modo \u00e8 possibile, per gli attori che sono in possesso della chiave pubblica, essere sicuri che un determinato testo sia stato crittografato solo dal soggetto in possesso della chiave privata. Questa operazione di crittografare un testo con la chiave privata \u00e8 detta proprio firma e si tratta di quella stessa firma grazie alla quale ogni browser \u00e8 in grado di risalire la catena di verit\u00e0 e verificare di firma in firma che un certificato sia effettivamente autentico. Infine, questo ci porta all'ultimo concetto di cui forse non abbiamo parlato abbastanza o che in realt\u00e0 abbiamo solo accennato, e cio\u00e8 il concetto di certificato self-signed. Questo tipo di certificati viene utilizzato soprattutto per lo sviluppo. \u00c8, infatti, possibile per chiunque generare un certificato e, a livello tecnico, esso funziona esattamente allo stesso modo di un certificato rilasciato da un certification authority. Tuttavia \u00e8 gratis e quindi \u00e8 pi\u00f9 adatto allo sviluppo, ai test, eccetera. L'unica cosa che lo distingue da un certificato rilasciato da una certification authority \u00e8 proprio il fatto di essere stato generato in maniera manuale e non da una chiave privata root o da una sua discendente. Bene, io spero che questo piccolo episodio fuori programma vi abbia fatto piacere. In ogni caso, vi invito sempre a unirvi al gruppo Telegram dove, come potete vedere, si svolgono belle conversazioni e ci sono belle persone, a parte un paio che odiano il PHP. Ma li sopportiamo, che ci volete fare? Detto questo, vi ringrazio di aver ascoltato fin qui, vi do appuntamento al prossimo episodio e vi ricordo che un programmatore risolve i problemi, a volte anche usando il computer.", "segments": [{"id": 1, "seek": 2596, "start": 0.0, "end": 9.84, "text": " Pensieri in codice. Idee dal mondo del software, a cura di Valerio Galano.", "tokens": [50364, 45035, 45980, 294, 17656, 573, 13, 13090, 68, 11702, 40499, 1103, 4722, 11, 257, 1262, 64, 1026, 7188, 260, 1004, 7336, 3730, 13, 50856], "temperature": 0.0, "avg_logprob": -0.3278356619455196, "compression_ratio": 1.3278688524590163, "no_speech_prob": 0.07232666015625, "words": null}, {"id": 2, "seek": 2596, "start": 19.84, "end": 25.96, "text": " Salve a tutti e ben ritrovati su Pensieri in codice. Quello che state ascoltando \u00e8 una", "tokens": [51356, 5996, 303, 257, 19822, 308, 3271, 11289, 24088, 6908, 459, 45035, 45980, 294, 17656, 573, 13, 4493, 1913, 947, 1785, 15526, 4837, 1806, 4873, 2002, 51662], "temperature": 0.0, "avg_logprob": -0.3278356619455196, "compression_ratio": 1.3278688524590163, "no_speech_prob": 0.07232666015625, "words": null}, {"id": 3, "seek": 5176, "start": 25.96, "end": 32.52, "text": " sorta di episodio integrativo per la puntata della settimana scorsa, la numero 44 sul", "tokens": [50364, 33425, 1026, 39200, 1004, 3572, 18586, 680, 635, 18212, 3274, 11618, 5584, 36497, 795, 38822, 11, 635, 46839, 16408, 17603, 50692], "temperature": 0.0, "avg_logprob": -0.20607310645985152, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.2303466796875, "words": null}, {"id": 4, "seek": 5176, "start": 32.52, "end": 40.36, "text": " protocollo HTTPS. Si tratta di una seconda parte non prevista che mi \u00e8 sembrata necessaria a", "tokens": [50692, 1742, 905, 22388, 11751, 51, 6273, 13, 4909, 504, 18405, 1026, 2002, 1150, 64, 6975, 2107, 12642, 5236, 947, 2752, 4873, 4361, 1443, 3274, 2688, 9831, 257, 51084], "temperature": 0.0, "avg_logprob": -0.20607310645985152, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.2303466796875, "words": null}, {"id": 5, "seek": 5176, "start": 40.36, "end": 45.92, "text": " seguito di una discussione che si \u00e8 tenuta sul gruppo Telegram di Pensieri in codice. In questa", "tokens": [51084, 3896, 22703, 1026, 2002, 5017, 68, 947, 1511, 4873, 2064, 12093, 17603, 47477, 78, 14889, 1342, 1026, 45035, 45980, 294, 17656, 573, 13, 682, 16540, 51362], "temperature": 0.0, "avg_logprob": -0.20607310645985152, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.2303466796875, "words": null}, {"id": 6, "seek": 5176, "start": 45.92, "end": 51.760000000000005, "text": " breve discussione uno degli utenti chiedeva alcune delucidazioni su un paio di concetti", "tokens": [51362, 48517, 5017, 68, 8526, 32079, 2839, 23012, 417, 1091, 68, 2757, 20005, 2613, 1103, 1311, 327, 27569, 459, 517, 2502, 1004, 1026, 1588, 12495, 51654], "temperature": 0.0, "avg_logprob": -0.20607310645985152, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.2303466796875, "words": null}, {"id": 7, "seek": 7752, "start": 51.76, "end": 57.48, "text": " sui quali forse non mi sono soffermato abbastanza. Prontamente un altro utente ha", "tokens": [50364, 459, 72, 4101, 72, 337, 405, 2107, 2752, 9259, 370, 602, 966, 2513, 16903, 525, 20030, 13, 2114, 896, 3439, 517, 40924, 2839, 1576, 324, 50650], "temperature": 0.0, "avg_logprob": -0.19157607995945475, "compression_ratio": 1.592920353982301, "no_speech_prob": 0.277587890625, "words": null}, {"id": 8, "seek": 7752, "start": 57.48, "end": 64.08, "text": " affugato questi dubbi con un paio di esempi che mi sono sembrati molto interessanti. Dunque,", "tokens": [50650, 2096, 697, 2513, 29729, 18540, 5614, 416, 517, 2502, 1004, 1026, 32340, 72, 947, 2752, 9259, 4361, 1443, 6908, 16394, 12478, 11520, 13, 11959, 1077, 11, 50980], "temperature": 0.0, "avg_logprob": -0.19157607995945475, "compression_ratio": 1.592920353982301, "no_speech_prob": 0.277587890625, "words": null}, {"id": 9, "seek": 7752, "start": 64.08, "end": 71.52, "text": " ho pensato di unirli a un altro paio di concetti e realizzare questo episodio. Quindi ringrazio", "tokens": [50980, 1106, 6099, 2513, 1026, 517, 1648, 72, 257, 517, 40924, 2502, 1004, 1026, 1588, 12495, 308, 957, 8072, 543, 10263, 39200, 1004, 13, 32534, 4875, 30695, 1004, 51352], "temperature": 0.0, "avg_logprob": -0.19157607995945475, "compression_ratio": 1.592920353982301, "no_speech_prob": 0.277587890625, "words": null}, {"id": 10, "seek": 7752, "start": 71.52, "end": 77.52, "text": " Pacca, questo \u00e8 il nome dell'utente, per la pronta risposta e per gli esempi che sto per", "tokens": [51352, 10702, 496, 11, 10263, 4873, 1930, 19003, 19781, 6, 325, 1576, 11, 680, 635, 582, 45442, 2253, 79, 8638, 308, 680, 17161, 32340, 72, 947, 22784, 680, 51652], "temperature": 0.0, "avg_logprob": -0.19157607995945475, "compression_ratio": 1.592920353982301, "no_speech_prob": 0.277587890625, "words": null}, {"id": 11, "seek": 10752, "start": 77.64, "end": 84.96, "text": " rubargli. Consiglio a voi, nel caso non l'abbiate gi\u00e0 fatto, di ascoltare prima l'episodio numero", "tokens": [50370, 5915, 289, 41443, 13, 6923, 328, 19987, 257, 20931, 11, 15373, 9666, 2107, 287, 6, 455, 5614, 473, 30469, 23228, 11, 1026, 15526, 4837, 543, 19507, 287, 6, 595, 271, 378, 1004, 46839, 50736], "temperature": 0.0, "avg_logprob": -0.2333622654830968, "compression_ratio": 1.4912280701754386, "no_speech_prob": 0.1363525390625, "words": null}, {"id": 12, "seek": 10752, "start": 84.96, "end": 91.64, "text": " 44 che vi metto in descrizione, altrimenti \u00e8 difficile che possiate seguire il discorso di", "tokens": [50736, 16408, 947, 1932, 1131, 1353, 294, 2189, 19706, 11, 4955, 30591, 72, 4873, 26607, 947, 1402, 13024, 8878, 621, 1930, 2983, 284, 539, 1026, 51070], "temperature": 0.0, "avg_logprob": -0.2333622654830968, "compression_ratio": 1.4912280701754386, "no_speech_prob": 0.1363525390625, "words": null}, {"id": 13, "seek": 10752, "start": 91.64, "end": 97.32, "text": " questo episodio. Ultima cosa prima di iniziare, grazie a tutti quegli utenti che si sono iscritti", "tokens": [51070, 10263, 39200, 1004, 13, 9523, 4775, 10163, 19507, 1026, 294, 24300, 543, 11, 1295, 3283, 257, 19822, 631, 41443, 2839, 23012, 947, 1511, 9259, 307, 10757, 21558, 51354], "temperature": 0.0, "avg_logprob": -0.2333622654830968, "compression_ratio": 1.4912280701754386, "no_speech_prob": 0.1363525390625, "words": null}, {"id": 14, "seek": 10752, "start": 97.32, "end": 101.92, "text": " al canale YouTube di Pensieri in codice e iniziamo!", "tokens": [51354, 419, 393, 1220, 3088, 1026, 45035, 45980, 294, 17656, 573, 308, 294, 590, 7415, 0, 51584], "temperature": 0.0, "avg_logprob": -0.2333622654830968, "compression_ratio": 1.4912280701754386, "no_speech_prob": 0.1363525390625, "words": null}, {"id": 15, "seek": 13724, "start": 107.52, "end": 130.16, "text": " Il primo concetto su cui dunque vorrei ritornare \u00e8 quello delle chiavi pubbliche e private. \u00c8 vero", "tokens": [50364, 4416, 38671, 1588, 23778, 459, 22929, 10234, 1077, 4245, 10271, 11289, 1865, 543, 4873, 22813, 16485, 45793, 4917, 1535, 65, 10185, 308, 4551, 13, 34495, 1306, 78, 51496], "temperature": 0.0, "avg_logprob": -0.2163254258961513, "compression_ratio": 1.3472222222222223, "no_speech_prob": 0.0017004013061523438, "words": null}, {"id": 16, "seek": 13724, "start": 130.16, "end": 137.24, "text": " che vi ho parlato di come vengono utilizzate, perch\u00e9 sono necessarie ed \u00e8 vero anche che vi", "tokens": [51496, 947, 1932, 1106, 13734, 2513, 1026, 808, 371, 1501, 8957, 40355, 473, 11, 14303, 9259, 2688, 289, 414, 1257, 4873, 1306, 78, 11585, 947, 1932, 51850], "temperature": 0.0, "avg_logprob": -0.2163254258961513, "compression_ratio": 1.3472222222222223, "no_speech_prob": 0.0017004013061523438, "words": null}, {"id": 17, "seek": 16468, "start": 137.24, "end": 142.76000000000002, "text": " ho linkato un vecchio episodio nel quale parlavamo in modo approfondito di come vengono", "tokens": [50364, 1106, 2113, 2513, 517, 42021, 31033, 39200, 1004, 15373, 421, 1220, 13734, 706, 10502, 294, 16664, 2075, 69, 684, 3528, 1026, 808, 371, 1501, 8957, 50640], "temperature": 0.0, "avg_logprob": -0.19621127685614392, "compression_ratio": 1.5732758620689655, "no_speech_prob": 0.010650634765625, "words": null}, {"id": 18, "seek": 16468, "start": 142.76000000000002, "end": 150.28, "text": " generate. Tuttavia, forse non mi sono soffermato abbastanza sul fascino e sulla potenza di questo", "tokens": [50640, 8460, 13, 314, 13478, 23015, 11, 337, 405, 2107, 2752, 9259, 370, 602, 966, 2513, 16903, 525, 20030, 17603, 7184, 2982, 308, 33625, 1847, 23691, 1026, 10263, 51016], "temperature": 0.0, "avg_logprob": -0.19621127685614392, "compression_ratio": 1.5732758620689655, "no_speech_prob": 0.010650634765625, "words": null}, {"id": 19, "seek": 16468, "start": 150.28, "end": 158.04000000000002, "text": " tipo di algoritmo. Queste chiavi, infatti, possono avere un duplice utilizzo e, in effetti,", "tokens": [51016, 9746, 1026, 3501, 50017, 3280, 13, 8800, 68, 45793, 4917, 11, 1536, 21515, 11, 43857, 37914, 517, 1581, 564, 573, 19906, 4765, 308, 11, 294, 1244, 12495, 11, 51404], "temperature": 0.0, "avg_logprob": -0.19621127685614392, "compression_ratio": 1.5732758620689655, "no_speech_prob": 0.010650634765625, "words": null}, {"id": 20, "seek": 16468, "start": 158.04000000000002, "end": 164.68, "text": " entrambi questi utilizzi sono parte integrante del protocollo HTTPS. Il primo utilizzo,", "tokens": [51404, 8041, 2173, 72, 29729, 19906, 3992, 9259, 6975, 3572, 2879, 1103, 1742, 905, 22388, 11751, 51, 6273, 13, 4416, 38671, 19906, 4765, 11, 51736], "temperature": 0.0, "avg_logprob": -0.19621127685614392, "compression_ratio": 1.5732758620689655, "no_speech_prob": 0.010650634765625, "words": null}, {"id": 21, "seek": 18920, "start": 164.68, "end": 170.16, "text": " l'abbiamo detto anche nel scorso episodio, \u00e8 quello di crittografare le informazioni,", "tokens": [50364, 287, 6, 10797, 7415, 41031, 11585, 15373, 38629, 539, 39200, 1004, 11, 4873, 22813, 1026, 941, 593, 19815, 543, 476, 1356, 27569, 11, 50638], "temperature": 0.0, "avg_logprob": -0.2026909758095388, "compression_ratio": 1.5708154506437768, "no_speech_prob": 0.0259552001953125, "words": null}, {"id": 22, "seek": 18920, "start": 170.16, "end": 176.32, "text": " ma crittografarle in un modo molto particolare. Nella crittografia asimmetrica, infatti, come", "tokens": [50638, 463, 941, 593, 19815, 36153, 294, 517, 16664, 16394, 1276, 43141, 13, 426, 9885, 941, 593, 19815, 654, 382, 332, 5537, 15192, 11, 1536, 21515, 11, 808, 50946], "temperature": 0.0, "avg_logprob": -0.2026909758095388, "compression_ratio": 1.5708154506437768, "no_speech_prob": 0.0259552001953125, "words": null}, {"id": 23, "seek": 18920, "start": 176.32, "end": 182.32, "text": " faceva anche notare Pacca nel gruppo Telegram, la chiave pubblica pu\u00f2 essere considerata come", "tokens": [50946, 1851, 2757, 11585, 406, 543, 10702, 496, 15373, 47477, 78, 14889, 1342, 11, 635, 45793, 303, 1535, 11489, 64, 26526, 19799, 1949, 3274, 808, 51246], "temperature": 0.0, "avg_logprob": -0.2026909758095388, "compression_ratio": 1.5708154506437768, "no_speech_prob": 0.0259552001953125, "words": null}, {"id": 24, "seek": 18920, "start": 182.32, "end": 189.20000000000002, "text": " un vero e proprio lucchetto. Metaforicamente parlando, questo lucchetto esiste in infinite", "tokens": [51246, 517, 1306, 78, 308, 28203, 21296, 339, 23778, 13, 6377, 2792, 16345, 3439, 971, 16201, 11, 10263, 21296, 339, 23778, 785, 8375, 294, 13785, 51590], "temperature": 0.0, "avg_logprob": -0.2026909758095388, "compression_ratio": 1.5708154506437768, "no_speech_prob": 0.0259552001953125, "words": null}, {"id": 25, "seek": 21424, "start": 189.20000000000002, "end": 195.76000000000002, "text": " copie e pu\u00f2 essere distribuito a tutta una serie di attori. Questi attori possono utilizzare", "tokens": [50364, 2971, 414, 308, 26526, 19799, 4400, 22703, 257, 3672, 1328, 2002, 23030, 1026, 951, 7386, 13, 8800, 72, 951, 7386, 43857, 40355, 543, 50692], "temperature": 0.0, "avg_logprob": -0.164870691710505, "compression_ratio": 1.7264573991031391, "no_speech_prob": 0.4716796875, "words": null}, {"id": 26, "seek": 21424, "start": 195.76000000000002, "end": 201.64000000000001, "text": " questi lucchetti, che hanno ricevuto, sempre metaforicamente parlando, aperti, per chiudere", "tokens": [50692, 29729, 21296, 339, 12495, 11, 947, 26595, 5090, 85, 8262, 11, 9553, 1131, 2792, 16345, 3439, 971, 16201, 11, 43139, 7317, 11, 680, 13228, 532, 323, 50986], "temperature": 0.0, "avg_logprob": -0.164870691710505, "compression_ratio": 1.7264573991031391, "no_speech_prob": 0.4716796875, "words": null}, {"id": 27, "seek": 21424, "start": 201.64000000000001, "end": 208.20000000000002, "text": " informazioni all'interno di metaforiche scatole. Poich\u00e9 quelli che sono stati distribuiti sono solo", "tokens": [50986, 1356, 27569, 439, 6, 5106, 1771, 1026, 1131, 2792, 284, 9304, 795, 2513, 306, 13, 6165, 480, 526, 631, 16320, 947, 9259, 2219, 72, 4400, 1983, 72, 9259, 6944, 51314], "temperature": 0.0, "avg_logprob": -0.164870691710505, "compression_ratio": 1.7264573991031391, "no_speech_prob": 0.4716796875, "words": null}, {"id": 28, "seek": 21424, "start": 208.20000000000002, "end": 214.24, "text": " lucchetti, una volta che le informazioni saranno chiuse all'interno di una scatola, nessuno potr\u00e0", "tokens": [51314, 21296, 339, 12495, 11, 2002, 18765, 947, 476, 1356, 27569, 13782, 13484, 13228, 438, 439, 6, 5106, 1771, 1026, 2002, 795, 267, 4711, 11, 39787, 12638, 1847, 39212, 51616], "temperature": 0.0, "avg_logprob": -0.164870691710505, "compression_ratio": 1.7264573991031391, "no_speech_prob": 0.4716796875, "words": null}, {"id": 29, "seek": 24296, "start": 214.24, "end": 220.96, "text": " pi\u00f9 aprire tale scatola e leggere o modificare tali informazioni. L'unico che avr\u00e0 questa", "tokens": [50364, 10589, 1882, 38920, 17172, 795, 267, 4711, 308, 30991, 323, 277, 1072, 1089, 543, 4023, 72, 1356, 27569, 13, 441, 6, 409, 2789, 947, 1305, 39212, 16540, 50700], "temperature": 0.0, "avg_logprob": -0.1914402109125386, "compression_ratio": 1.5491803278688525, "no_speech_prob": 0.1065673828125, "words": null}, {"id": 30, "seek": 24296, "start": 220.96, "end": 227.48000000000002, "text": " possibilit\u00e0 sar\u00e0 colui che \u00e8 in possesso della chiave che apre tutti questi lucchetti. E,", "tokens": [50700, 24145, 12445, 41338, 1173, 3077, 947, 4873, 294, 1402, 5557, 11618, 45793, 303, 947, 1882, 265, 19822, 29729, 21296, 339, 12495, 13, 462, 11, 51026], "temperature": 0.0, "avg_logprob": -0.1914402109125386, "compression_ratio": 1.5491803278688525, "no_speech_prob": 0.1065673828125, "words": null}, {"id": 31, "seek": 24296, "start": 227.48000000000002, "end": 233.92000000000002, "text": " sempre nella nostra metafora, questa chiave \u00e8, appunto, la chiave privata. Quando il nostro", "tokens": [51026, 9553, 23878, 34311, 1131, 2792, 3252, 11, 16540, 45793, 303, 4873, 11, 724, 24052, 11, 635, 45793, 303, 2915, 3274, 13, 18725, 1930, 35779, 51348], "temperature": 0.0, "avg_logprob": -0.1914402109125386, "compression_ratio": 1.5491803278688525, "no_speech_prob": 0.1065673828125, "words": null}, {"id": 32, "seek": 24296, "start": 233.92000000000002, "end": 242.96, "text": " browser comunica, dunque, con un sito web tramite il protocollo HTTPS, riceve da questo un lucchetto", "tokens": [51348, 11185, 11040, 2262, 11, 10234, 1077, 11, 416, 517, 1394, 78, 3670, 25749, 642, 1930, 1742, 905, 22388, 11751, 51, 6273, 11, 5090, 303, 1120, 10263, 517, 21296, 339, 23778, 51800], "temperature": 0.0, "avg_logprob": -0.1914402109125386, "compression_ratio": 1.5491803278688525, "no_speech_prob": 0.1065673828125, "words": null}, {"id": 33, "seek": 27296, "start": 243.04000000000002, "end": 249.88, "text": " da utilizzare per proteggere le informazioni da inviargli. Siccome il lucchetto ricevuto potr\u00e0", "tokens": [50368, 1120, 40355, 543, 680, 49157, 34899, 476, 1356, 27569, 1120, 1048, 9448, 41443, 13, 39155, 1102, 1930, 21296, 339, 23778, 5090, 85, 8262, 1847, 39212, 50710], "temperature": 0.0, "avg_logprob": -0.2536458298563957, "compression_ratio": 1.4625850340136055, "no_speech_prob": 0.003376007080078125, "words": null}, {"id": 34, "seek": 27296, "start": 249.88, "end": 256.8, "text": " essere aperto solamente dal sito in questione, noi possiamo essere sicuri che le informazioni", "tokens": [50710, 19799, 43139, 1353, 27814, 11702, 1394, 78, 294, 1168, 68, 11, 22447, 44758, 19799, 33579, 9744, 947, 476, 1356, 27569, 51056], "temperature": 0.0, "avg_logprob": -0.2536458298563957, "compression_ratio": 1.4625850340136055, "no_speech_prob": 0.003376007080078125, "words": null}, {"id": 35, "seek": 27296, "start": 256.8, "end": 258.88, "text": " spedite saranno protette.", "tokens": [51056, 637, 292, 642, 13782, 13484, 1742, 3007, 13, 51160], "temperature": 0.0, "avg_logprob": -0.2536458298563957, "compression_ratio": 1.4625850340136055, "no_speech_prob": 0.003376007080078125, "words": null}, {"id": 36, "seek": 30036, "start": 272.96, "end": 287.56, "text": " Come dicevo per\u00f2 poco fa, questo non \u00e8 l'unico utilizzo per le chiavi pubblica e privata. Difatti,", "tokens": [50364, 2492, 10313, 3080, 12673, 10639, 2050, 11, 10263, 2107, 4873, 287, 6, 409, 2789, 19906, 4765, 680, 476, 45793, 4917, 1535, 11489, 64, 308, 2915, 3274, 13, 35940, 21515, 11, 51094], "temperature": 0.0, "avg_logprob": -0.1896551744691257, "compression_ratio": 1.4791666666666667, "no_speech_prob": 0.0033245086669921875, "words": null}, {"id": 37, "seek": 30036, "start": 287.56, "end": 294.08, "text": " anche nello scorso episodio abbiamo parlato di certificati e di catena di fiducia. In effetti,", "tokens": [51094, 11585, 408, 1913, 38629, 539, 39200, 1004, 22815, 13734, 2513, 1026, 12378, 6908, 308, 1026, 3857, 4118, 1026, 24553, 84, 2755, 13, 682, 1244, 12495, 11, 51420], "temperature": 0.0, "avg_logprob": -0.1896551744691257, "compression_ratio": 1.4791666666666667, "no_speech_prob": 0.0033245086669921875, "words": null}, {"id": 38, "seek": 30036, "start": 294.08, "end": 300.35999999999996, "text": " anche questo meccanismo funziona grazie alle chiavi ed, in particolare, utilizzandole al", "tokens": [51420, 11585, 10263, 385, 1914, 282, 6882, 49345, 21758, 1295, 3283, 5430, 45793, 4917, 1257, 11, 294, 1276, 43141, 11, 40355, 1806, 306, 419, 51734], "temperature": 0.0, "avg_logprob": -0.1896551744691257, "compression_ratio": 1.4791666666666667, "no_speech_prob": 0.0033245086669921875, "words": null}, {"id": 39, "seek": 32936, "start": 300.48, "end": 309.52000000000004, "text": " contrario. Se, infatti, si utilizza una chiave privata per crittografare un testo o un'informazione,", "tokens": [50370, 47642, 13, 1100, 11, 1536, 21515, 11, 1511, 4976, 7176, 2002, 45793, 303, 2915, 3274, 680, 941, 593, 19815, 543, 517, 1500, 78, 277, 517, 6, 37811, 12928, 11, 50822], "temperature": 0.0, "avg_logprob": -0.21440216847088026, "compression_ratio": 1.7412280701754386, "no_speech_prob": 0.00243377685546875, "words": null}, {"id": 40, "seek": 32936, "start": 309.52000000000004, "end": 317.24, "text": " questa potr\u00e0 essere decrittata grazie all'utilizzo delle chiavi pubbliche. In questo modo \u00e8 possibile,", "tokens": [50822, 16540, 1847, 39212, 19799, 979, 18579, 3274, 1295, 3283, 439, 6, 20835, 590, 4765, 16485, 45793, 4917, 1535, 65, 10185, 13, 682, 10263, 16664, 4873, 50184, 11, 51208], "temperature": 0.0, "avg_logprob": -0.21440216847088026, "compression_ratio": 1.7412280701754386, "no_speech_prob": 0.00243377685546875, "words": null}, {"id": 41, "seek": 32936, "start": 317.24, "end": 322.84000000000003, "text": " per gli attori che sono in possesso della chiave pubblica, essere sicuri che un determinato testo", "tokens": [51208, 680, 17161, 951, 7386, 947, 9259, 294, 1402, 5557, 11618, 45793, 303, 1535, 11489, 64, 11, 19799, 33579, 9744, 947, 517, 15957, 2513, 1500, 78, 51488], "temperature": 0.0, "avg_logprob": -0.21440216847088026, "compression_ratio": 1.7412280701754386, "no_speech_prob": 0.00243377685546875, "words": null}, {"id": 42, "seek": 32936, "start": 322.84000000000003, "end": 329.36, "text": " sia stato crittografato solo dal soggetto in possesso della chiave privata. Questa operazione", "tokens": [51488, 25176, 29657, 941, 593, 19815, 2513, 6944, 11702, 38440, 847, 1353, 294, 1402, 5557, 11618, 45793, 303, 2915, 3274, 13, 2326, 7841, 2208, 12928, 51814], "temperature": 0.0, "avg_logprob": -0.21440216847088026, "compression_ratio": 1.7412280701754386, "no_speech_prob": 0.00243377685546875, "words": null}, {"id": 43, "seek": 35400, "start": 329.68, "end": 337.36, "text": " di crittografare un testo con la chiave privata \u00e8 detta proprio firma e si tratta di quella stessa", "tokens": [50380, 1026, 941, 593, 19815, 543, 517, 1500, 78, 416, 635, 45793, 303, 2915, 3274, 4873, 48888, 40465, 78, 12159, 1696, 308, 1511, 504, 18405, 1026, 32234, 342, 8391, 50764], "temperature": 0.0, "avg_logprob": -0.19728708398211134, "compression_ratio": 1.5179487179487179, "no_speech_prob": 0.032562255859375, "words": null}, {"id": 44, "seek": 35400, "start": 337.36, "end": 345.72, "text": " firma grazie alla quale ogni browser \u00e8 in grado di risalire la catena di verit\u00e0 e verificare di", "tokens": [50764, 12159, 1696, 1295, 3283, 11591, 421, 1220, 33189, 11185, 4873, 294, 677, 1573, 1026, 2253, 304, 621, 635, 3857, 4118, 1026, 1306, 12445, 308, 1306, 1089, 543, 1026, 51182], "temperature": 0.0, "avg_logprob": -0.19728708398211134, "compression_ratio": 1.5179487179487179, "no_speech_prob": 0.032562255859375, "words": null}, {"id": 45, "seek": 35400, "start": 345.72, "end": 354.0, "text": " firma in firma che un certificato sia effettivamente autentico. Infine, questo ci porta all'ultimo", "tokens": [51182, 12159, 1696, 294, 12159, 1696, 947, 517, 12378, 2513, 25176, 1244, 3093, 23957, 1476, 317, 2789, 13, 11537, 533, 11, 10263, 6983, 28598, 439, 6, 723, 6934, 51596], "temperature": 0.0, "avg_logprob": -0.19728708398211134, "compression_ratio": 1.5179487179487179, "no_speech_prob": 0.032562255859375, "words": null}, {"id": 46, "seek": 38160, "start": 354.0, "end": 359.44, "text": " concetto di cui forse non abbiamo parlato abbastanza o che in realt\u00e0 abbiamo solo accennato,", "tokens": [50364, 1588, 23778, 1026, 22929, 337, 405, 2107, 22815, 13734, 2513, 16903, 525, 20030, 277, 947, 294, 47512, 22815, 6944, 1317, 1857, 2513, 11, 50636], "temperature": 0.0, "avg_logprob": -0.23148147968782318, "compression_ratio": 1.7244444444444444, "no_speech_prob": 0.42578125, "words": null}, {"id": 47, "seek": 38160, "start": 359.44, "end": 366.56, "text": " e cio\u00e8 il concetto di certificato self-signed. Questo tipo di certificati viene utilizzato", "tokens": [50636, 308, 41827, 1930, 1588, 23778, 1026, 12378, 2513, 2698, 12, 82, 16690, 13, 38167, 9746, 1026, 12378, 6908, 19561, 40355, 2513, 50992], "temperature": 0.0, "avg_logprob": -0.23148147968782318, "compression_ratio": 1.7244444444444444, "no_speech_prob": 0.42578125, "words": null}, {"id": 48, "seek": 38160, "start": 366.56, "end": 373.96, "text": " soprattutto per lo sviluppo. \u00c8, infatti, possibile per chiunque generare un certificato e, a livello", "tokens": [50992, 50002, 680, 450, 17342, 388, 10504, 78, 13, 34495, 11, 1536, 21515, 11, 50184, 680, 13228, 409, 1077, 1337, 543, 517, 12378, 2513, 308, 11, 257, 1621, 1913, 51362], "temperature": 0.0, "avg_logprob": -0.23148147968782318, "compression_ratio": 1.7244444444444444, "no_speech_prob": 0.42578125, "words": null}, {"id": 49, "seek": 38160, "start": 373.96, "end": 381.6, "text": " tecnico, esso funziona esattamente allo stesso modo di un certificato rilasciato da un certification", "tokens": [51362, 20105, 2789, 11, 2097, 78, 49345, 21758, 785, 1591, 3439, 439, 78, 44413, 16664, 1026, 517, 12378, 2513, 367, 388, 296, 537, 2513, 1120, 517, 21775, 51744], "temperature": 0.0, "avg_logprob": -0.23148147968782318, "compression_ratio": 1.7244444444444444, "no_speech_prob": 0.42578125, "words": null}, {"id": 50, "seek": 41160, "start": 381.6, "end": 389.40000000000003, "text": " authority. Tuttavia \u00e8 gratis e quindi \u00e8 pi\u00f9 adatto allo sviluppo, ai test, eccetera. L'unica", "tokens": [50364, 8281, 13, 314, 13478, 23015, 4873, 10158, 271, 308, 15727, 4873, 10589, 614, 37491, 439, 78, 17342, 388, 10504, 78, 11, 9783, 1500, 11, 29613, 20269, 13, 441, 6, 409, 2262, 50754], "temperature": 0.0, "avg_logprob": -0.2134232890199531, "compression_ratio": 1.5463917525773196, "no_speech_prob": 0.0004582405090332031, "words": null}, {"id": 51, "seek": 41160, "start": 389.40000000000003, "end": 396.04, "text": " cosa che lo distingue da un certificato rilasciato da una certification authority \u00e8 proprio il fatto", "tokens": [50754, 10163, 947, 450, 1483, 278, 622, 1120, 517, 12378, 2513, 367, 388, 296, 537, 2513, 1120, 2002, 21775, 8281, 4873, 28203, 1930, 23228, 51086], "temperature": 0.0, "avg_logprob": -0.2134232890199531, "compression_ratio": 1.5463917525773196, "no_speech_prob": 0.0004582405090332031, "words": null}, {"id": 52, "seek": 41160, "start": 396.04, "end": 405.16, "text": " di essere stato generato in maniera manuale e non da una chiave privata root o da una sua discendente.", "tokens": [51086, 1026, 19799, 29657, 1337, 2513, 294, 587, 10609, 9688, 68, 308, 2107, 1120, 2002, 45793, 303, 2915, 3274, 5593, 277, 1120, 2002, 8233, 2983, 521, 1576, 13, 51542], "temperature": 0.0, "avg_logprob": -0.2134232890199531, "compression_ratio": 1.5463917525773196, "no_speech_prob": 0.0004582405090332031, "words": null}, {"id": 53, "seek": 43736, "start": 411.6, "end": 431.76000000000005, "text": " Bene, io spero che questo piccolo episodio fuori programma vi abbia fatto piacere. In ogni caso,", "tokens": [50364, 27702, 11, 19785, 24152, 78, 947, 10263, 13363, 46086, 39200, 1004, 8536, 7386, 1461, 1696, 1932, 16903, 654, 23228, 3895, 326, 323, 13, 682, 33189, 9666, 11, 51372], "temperature": 0.0, "avg_logprob": -0.23953919592550246, "compression_ratio": 1.3703703703703705, "no_speech_prob": 0.035125732421875, "words": null}, {"id": 54, "seek": 43736, "start": 431.76000000000005, "end": 437.36, "text": " vi invito sempre a unirvi al gruppo Telegram dove, come potete vedere, si svolgono belle", "tokens": [51372, 1932, 1048, 3528, 9553, 257, 517, 347, 4917, 419, 47477, 78, 14889, 1342, 23287, 11, 808, 1847, 3498, 35373, 11, 1511, 262, 9646, 70, 8957, 28770, 51652], "temperature": 0.0, "avg_logprob": -0.23953919592550246, "compression_ratio": 1.3703703703703705, "no_speech_prob": 0.035125732421875, "words": null}, {"id": 55, "seek": 46736, "start": 437.36, "end": 445.0, "text": " conversazioni e ci sono belle persone, a parte un paio che odiano il PHP. Ma li sopportiamo,", "tokens": [50364, 2615, 27569, 308, 6983, 9259, 28770, 29944, 11, 257, 6975, 517, 2502, 1004, 947, 3611, 6254, 1930, 47298, 13, 4042, 375, 370, 427, 477, 7415, 11, 50746], "temperature": 0.0, "avg_logprob": -0.240660916457231, "compression_ratio": 1.5076923076923077, "no_speech_prob": 0.0826416015625, "words": null}, {"id": 56, "seek": 46736, "start": 445.0, "end": 451.24, "text": " che ci volete fare? Detto questo, vi ringrazio di aver ascoltato fin qui, vi do appuntamento al", "tokens": [50746, 947, 6983, 1996, 3498, 11994, 30, 4237, 1353, 10263, 11, 1932, 4875, 30695, 1004, 1026, 18247, 15526, 4837, 2513, 962, 1956, 11, 1932, 360, 724, 2760, 8824, 419, 51058], "temperature": 0.0, "avg_logprob": -0.240660916457231, "compression_ratio": 1.5076923076923077, "no_speech_prob": 0.0826416015625, "words": null}, {"id": 57, "seek": 46736, "start": 451.24, "end": 458.08000000000004, "text": " prossimo episodio e vi ricordo che un programmatore risolve i problemi, a volte anche usando il computer.", "tokens": [51058, 48794, 6934, 39200, 1004, 308, 1932, 21040, 23872, 947, 517, 1461, 15677, 418, 2253, 37361, 741, 1154, 72, 11, 257, 37801, 11585, 29798, 1930, 3820, 13, 51400], "temperature": 0.0, "avg_logprob": -0.240660916457231, "compression_ratio": 1.5076923076923077, "no_speech_prob": 0.0826416015625, "words": null}], "language": "Italian"}