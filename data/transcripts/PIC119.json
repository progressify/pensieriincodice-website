{"text": " Sono mesi ormai che il mondo intero \u00e8 rimasto a bocca aperta dopo aver visto le potenzialit\u00e0 di chat GPT e le migliaia di applicazioni che ne stanno fiorendo al ritmo di decine al giorno. Anche noi ne abbiamo parlato nello scorso episodio. Ma il machine learning non \u00e8 fatto solo di large language model che replicano il comportamento umano. Esistono altri tipi di intelligenze artificiali basate su approcci differenti e che possono generare risultati e ricadute anche pi\u00f9 importanti. Noi oggi, approfittando di una notizia che forse non ha avuto il giusto risalto, cogliamo l'occasione per parlare di una differente forma di machine learning chiamata Deep Reinforcement Learning. Ma prima ascoltiamo la sigla. Sono due mesi, lo so, ti \u00e8 mancata, anche a me. Benvenuti su Pensieri in Codice. Il podcast dove si ragiona da informatici con Valerio Galano. Cominciamo dalla notizia. Il 7 giugno di quest'anno, quindi circa un mese e mezzo fa, DeepMind, una sussidiaria di Google che fa ricerca nel campo dell'intelligenza artificiale, ha annunciato che uno dei suoi sistemi, in particolare quello chiamato Alphadev, ha sviluppato un nuovo algoritmo di ordinamento utilizzando il linguaggio Assembly. Detta cos\u00ec potrebbe sembrare qualcosa di banale, una notizia come tante, ma la realt\u00e0 \u00e8 che si tratta di un passo in avanti molto importante. Questo nuovo algoritmo, infatti, ha la caratteristica di essere pi\u00f9 efficiente di tutti i suoi predecessori implementati fino ad ora da intelligenze umane. I ricercatori informatici lavorano continuamente nel tentativo di migliorare le performance degli algoritmi di base e, nello specifico, per quelli di ordinamento, erano anni che non veniva realizzato qualcosa che risultasse pi\u00f9 veloce di quelli gi\u00e0 conosciuti. Con l'impiego di Alphadev, invece, questo limite \u00e8 stato superato ed \u00e8 una cosa emblematica che colpisce sotto tanti punti di vista. Innanzitutto perch\u00e9, parlando pragmaticamente, un migliore algoritmo di ordinamento ha ricadute positive enormi sul mondo reale, a breve ne parleremo in modo pi\u00f9 approfondito. Ma oltre a ci\u00f2, da un punto di vista pi\u00f9 generale, questo avvenimento ci d\u00e0 un'idea di quali siano le grandi potenzialit\u00e0 di un sistema di machine learning quando viene utilizzato effettivamente per superare quelli che sono i limiti dell'inventiva umana. Ma procediamo con ordine e facciamo un passo indietro perch\u00e9, per capire bene gli aspetti pi\u00f9 interessanti di questa vicenda, \u00e8 necessario conoscere un paio di concetti. Quindi, innanzitutto, ripassiamo brevemente cos'\u00e8 un algoritmo di ordinamento, che cos'\u00e8 il linguaggio Assembly e poi parliamo di come funziona Alphadev e di che cosa \u00e8 stato in grado di produrre. Senza entrare nel campo tecnico, un algoritmo di ordinamento, lo dice il nome stesso, \u00e8 un algoritmo che serve ad ordinare qualcosa. Nella sua forma pi\u00f9 semplice, solitamente questo qualcosa sono numeri, perch\u00e9 i computer lavorano essenzialmente con i numeri. Quindi, banalmente, se avessi una lista come 7, 1 e 499, potrei utilizzare uno dei tanti algoritmi di ordinamento gi\u00e0 esistenti per trasformarla in 1, 7 e 499. Ovviamente, la mia lista potrebbe essere di tre numeri, ma anche di due, di uno o di un miliardo, poco importa, alla fine dell'esecuzione l'algoritmo me la dovrebbe restituire ordinata. Ok, bene, ma a cosa serve ordinare dei numeri? Beh, diciamo che in campo informatico serve praticamente per qualsiasi cosa. Se ti stai immaginando una colonna di numeri in Excel che si pu\u00f2 ordinare con un clic, sappi che la storia \u00e8 molto pi\u00f9 complicata di cos\u00ec. Nel software in generale, operare su dati ordinati \u00e8 pi\u00f9 conveniente che farlo su dati organizzati in modo casuale. Pertanto, qualsiasi programma, procedura, sistema, esegue ordinamenti ogni volta che ci\u00f2 \u00e8 conveniente dal punto di vista computazionale. Ovviamente non lo fa di sua spontanea volont\u00e0, ma sono i programmatori che, ogni qualvolta devono implementare un algoritmo, possono decidere se ordinarne i dati sia un atto migliorativo o meno per lo scopo che si sono prefissi. E questo tipo di operazioni \u00e8 presente a tutti i livelli. Pu\u00f2 ordinare l'utente quando, ad esempio, filtra una lista o, come dicevamo poco fa, ordina una colonna Excel. Pu\u00f2 ordinare un software prima di lavorare su dei dati. Pu\u00f2 ordinare un componente hardware prima di eseguire certe operazioni. E il discorso pu\u00f2 essere complicato o poi a piacere, se pensi che in informatica tutto \u00e8 espresso per mezzo di numeri. I caratteri, i simboli, i dati, gli oggetti. Alla fine sono tutti numeri e quindi tutti possono essere ordinati in qualche modo. Ed \u00e8 grazie a questo fatto che il nostro computer pu\u00f2 ricercare all'interno dei nostri harddisk, file, archivi cloud, eccetera. Ed \u00e8 sempre grazie all'ordinamento delle informazioni se pu\u00f2 restituirci risultati in tempi brevi. Immagina il tuo harddisk come un elenco telefonico o un dizionario, se non fosse ordinato in qualche modo, quanto ci vorrebbe per trovare un numero o una parola. E poi, oltre che per l'efficienza, l'ordinamento \u00e8 importante anche a livello funzionale, per l'esperienza utente. Immagina di ricevere i risultati di un motore di ricerca non ordinati per attinenza. Sarebbero praticamente inutili, dovresti spulciare decine e decine di pagine ogni volta. Insomma, l'ordinamento \u00e8 fondamentale praticamente in ogni aspetto della gestione delle informazioni, sia digitali che analogiche. E oggi come oggi significa praticamente qualsiasi cosa. E quindi, a questo punto, riesci a immaginare quante volte al giorno NEL MONDO viene invocato un algoritmo di ordinamento? Il conteggio va fatto in trilioni. Oggi come oggi \u00e8 difficile che qualcuno scriva il proprio algoritmo di ordinamento. Avviene, ma solo in casi particolari. E per questo motivo le migliori implementazioni di tali algoritmi sono gi\u00e0 presenti sotto forma di funzioni invocabili all'interno degli strumenti software che i programmatori solitamente utilizzano. Quindi l'idea di fondo della ricerca \u00e8 che se si riescono a migliorare le performance di tali funzioni, sostituendole poi all'interno dei linguaggi, dei compilatori e dei chip, il beneficio che ne deriva \u00e8 enorme e viene propagato in maniera relativamente facile e trasparente al software realizzato tramite tali strumenti. I ricercatori lavorano sempre a nuovi algoritmi di base. Migliorare infatti le performance di questi porta chiaramente ricadute positive a tutti i livelli. Ora ci sarebbe tanto da dire su questo argomento, sul concetto di efficienza, sulle caratteristiche dei algoritmi eccetera, ma per quello che ci interessa oggi accontentiamoci di tenere a mente questo fatto. Un algoritmo pi\u00f9 performante consuma meno risorse, quindi pu\u00f2 essere eseguito su processori meno potenti, spreca meno energia e fa il suo lavoro in meno tempo. Da tutto questo derivano tutta una serie di vantaggi tecnici. In pratica, migliorare gli algoritmi di base incrementa di molto la qualit\u00e0 del software sovrastante rendendolo pi\u00f9 leggero e veloce. Adesso la seconda nozione da tenere a mente riguarda invece il linguaggio Assembly. Anche qui, senza essere tecnici che tanto non ci serve, Assembly \u00e8 un linguaggio molto simile alle istruzioni che si utilizzano normalmente per istruire i processori. Diciamo che \u00e8 quasi la lingua nella quale si pu\u00f2 dialogare direttamente con una CPU. Naturalmente, nella frase che ho appena detto, quel quasi \u00e8 molto importante. Infatti, questo linguaggio, come tutti i linguaggi, \u00e8 una strazione, cio\u00e8 ha lo scopo di permettere ai programmatori di ignorare le peculiarit\u00e0 dei singoli processori che possono differire a seconda di tipo, modello, marca. Ma siccome si tratta di un set di istruzioni molto complesse da combinare insieme direttamente per ottenere ci\u00f2 che si desidera, la programmazione, in pratica, si svolge utilizzando altri linguaggi definiti comunemente ad alto livello, che sono a loro volta astrazioni di Assembly e sono pi\u00f9 semplici da utilizzare per noi umani. Tali linguaggi vengono poi tradotti in codice Assembly e questo codice viene a sua volta tradotto nelle istruzioni proprie dello specifico processore prima di dargliele in pasto. Ok, so che sembra complicato, ma non lo \u00e8. Prova a seguirmi sul ragionamento. Hai mai visto un esempio di codice sorgente di un qualsiasi software? Avrai notato che, a prescindere dal linguaggio in cui era scritto, la sintassi, pur non essendo una lingua corrente, ha qualcosa di simile all'inglese? Magari una funzione inizia con la parola function o una variabile definita con var o una condizione con if? Ecco, questo \u00e8 un linguaggio ad alto livello. Quando un programma scritto in questo modo deve essere eseguito, lo si fa elaborare ad un altro programma chiamato compilatore, che prende tutte le istruzioni scritte in questa specie di inglese e le trasforma in istruzioni assembly, che risultano molto pi\u00f9 complesse. Tramite poi un secondo programma, chiamato assembler, il codice assembly viene trasformato nelle vere e proprie istruzioni per il processore, ancora pi\u00f9 complesse, e finalmente quest'ultimo pu\u00f2 eseguire i comandi che gli sono stati impartiti. Se questi passaggi che ti ho descritto ti sono chiari, direi che per quello che dobbiamo affrontare oggi non ci serve altro. Torniamo quindi all'argomento principale dell'episodio. Abbiamo detto che un certo motore di machine learning ha inventato un nuovo algoritmo, ma com'\u00e8 possibile che un software inventi un altro software? Beh, in questo particolare caso tutto \u00e8 iniziato dal concetto di gioco. Alphadev non \u00e8 il primo sistema messo a punto dal team di DeepMind, prima di esso infatti sono stati realizzati altri software di machine learning e alcuni di questi anche hanno fatto notizia. C'\u00e8 stato ad esempio AlphaGo, che ha battuto il campione mondiale del gioco Go e che poi si \u00e8 evoluto in AlphaZero, che \u00e8 in grado di giocare a Go, a scacchi e persino a Shoji, quel gioco che a volte viene chiamato scacchi giapponesi. Poi c'\u00e8 stato Alphastar, che ha sconfitto i migliori giocatori mondiali del famoso videogame Starcraft 2 della Blizzard. Insomma, Alphadev ha a tutti gli effetti degli antenati illustri, ma questi sembrano essere specializzati nell'ambito del gioco e in realt\u00e0 ci\u00f2 non \u00e8 un caso. I giochi che presentano tante possibili scelte per ogni mossa infatti, come ad esempio gli scacchi o i videogame di strategia in tempo reale, si prestano molto bene all'impiego di una particolare tecnica di machine learning chiamata reinforcement learning. Il reinforcement learning funziona pi\u00f9 o meno in questo modo, si istruisce un'intelligenza artificiale per farle tentare di conseguire un dato obiettivo e la si premia se riesce nell'intento oppure la si penalizza se fallisce. Nel nostro caso specifico, rapportando il tutto alla dimensione del gioco, si fa giocare la I al gioco designato e ad ogni mossa la si premia se la mossa scelta la avvicina alla vittoria o la si penalizza in caso contrario. Ad ogni operazione, in questo modo, l'algoritmo memorizza se la sua scelta \u00e8 stata buona o meno e, giocando miliardi di partite, impara come comportarsi nelle pi\u00f9 varie situazioni del gioco. Anche se all'apparenza questo potrebbe sembrare un compito semplice per una intelligenza artificiale, si tratta in realt\u00e0 di qualcosa di molto complesso perch\u00e9 una stessa mossa pu\u00f2 avere un valore diverso a seconda di tantissime altre condizioni. Se pensiamo ad esempio agli scacchi, muovere il re pu\u00f2 avere senso se ad esempio \u00e8 sotto scacco, ma ne ha molto meno se nel muoverlo lo esponiamo all'essere mangiato da un pezzo avversario. Si tratta di sviluppare una notevole capacit\u00e0 decisionale che fino ad un certo livello di complessit\u00e0 per noi umani \u00e8 abbastanza naturale, ma non lo \u00e8 affatto per una macchina. Immagina che il tuo obiettivo ad esempio sia andare a Roma, puoi prendere l'auto o comprare un biglietto aereo, tanto per dirne una, ma la scelta giusta cambia in base a dove ti trovi, a quanto traffico c'\u00e8, a quanto puoi spendere e a mille altri fattori, senza contare poi gli imprevisti, uno sciopero, un incidente e cos\u00ec via. Da umano te la caveresti facilmente in una situazione del genere, ma insegnare ad un software come comportarsi efficientemente di fronte ad una molteplicit\u00e0 di casi diventa estremamente complesso. I giochi sono quindi un ambiente perfetto per questo tipo di machine learning, perch\u00e9 seppur presentino un alto grado di incertezza hanno comunque un set di regole limitato. \u00c8 relativamente facile capire chi vince e chi perde e di norma non si verificano eventi imprevisti. Ovviamente in quest'ottica l'obiettivo principale della IA \u00e8 vincere la partita e per far s\u00ec che essa possa elaborare le informazioni, sia le ricompense che le penalit\u00e0 che le probabilit\u00e0 di vittoria vengono espresse tramite tutta una serie di complesse funzioni matematiche. Come abbiamo detto prima per\u00f2, Alphadev non ha avuto a che fare con un classico gioco umano n\u00e9 con un videogame, esso ha dovuto lavorare su altri algoritmi che in linea di principio sono qualcosa di abbastanza diverso da un gioco. Per questo motivo, per raggiungere il loro obiettivo, i programmatori di DeepMind hanno trasformato la ricerca di un algoritmo di ordinamento pi\u00f9 veloce in una sorta di gioco progettato apposta per Alphadev. La vittoria in questo gioco consisteva appunto nello sviluppare un algoritmo che prima di tutto funzionasse correttamente e poi che fosse anche pi\u00f9 veloce dei suoi predecessori. Ad ogni mossa Alphadev selezionava e utilizzava una nuova istruzione dal set assembly che aveva a disposizione e veniva premiato se si avvicinava maggiormente all'obiettivo. Stabilite queste regole, l'IA ha giocato un numero enorme di partite, gareggiando contro se stessa e cercando ogni volta di stabilire il record di punteggio, attuando cos\u00ec una modalit\u00e0 di apprendimento che prende il nome di Deep Reinforcement Learning. Secondo gli sviluppatori di DeepMind, cito, il numero di possibili combinazioni di istruzioni \u00e8 simile al numero di particelle dell'universo e al numero di possibili combinazioni dimosse nei giochi degli scacchi e del go messi insieme, e una singola partita sbagliata invalida l'intero algoritmo. Ad ogni iterazione, quindi, dopo aver aggiunto l'istruzione scelta, Alphadev valutava la correttezza dell'algoritmo, confrontando il risultato ottenuto con quello atteso. La ricompensa scattava sia per la correttezza sia per la maggiore velocit\u00e0. Cos\u00ec facendo, alla fine, Alphadev ha scoperto un nuovo algoritmo di ordinamento che ha portato miglioramenti fino al 70% per le sequenze pi\u00f9 brevi e circa dell'1,7% per le sequenze che superano i 250.000 elementi. Un dettaglio molto interessante, poi, \u00e8 che, differentemente da come avviene nel caso dei large language model, non \u00e8 stato necessario basarsi su esempi precedentemente creati da umani, ma il sistema ha scoperto da solo la propria strada verso la risoluzione del problema. \u00c8 una differenza che va ben colta perch\u00e9 l'approccio del Deep Reinforcement Learning \u00e8 molto pi\u00f9 utile rispetto all'LLM quando si cerca di produrre qualcosa di nuovo e migliore rispetto a quanto gi\u00e0 fatto da menti umane. Qui non parliamo pi\u00f9, infatti, di una collezione enorme di esempi a cui attingere per creare una sequenza di parole sensate. Qui il concetto \u00e8 risolvere un problema esplorando nuovi approcci e nuove combinazioni mai provate prima. Ora, al di l\u00e0 dei dettagli tecnici per i quali ti lascio il paper originale in descrizione, la cosa secondo me pi\u00f9 interessante di questa storia \u00e8 che l'algoritmo di ordinamento \u00e8 stato sviluppato utilizzando un approccio totalmente diverso dai precedenti sotto vari aspetti. Innanzitutto, per anni i ricercatori hanno progettato e realizzato algoritmi di base utilizzando il ragionamento e l'intuito, mentre questo nuovo risultato \u00e8 stato ottenuto letteralmente effettuando milioni di tentativi fino a scoprire la giusta combinazione di elementi. So che a prima vista \u00e8 qualcosa che potrebbe ricordare il concetto di forza bruta, che di solito non \u00e8 mai la migliore delle soluzioni auspicabili, ma la realt\u00e0 \u00e8 che il reinforcement learning \u00e8 molto di pi\u00f9 di un algoritmo di forza bruta e, risultati alla mano, la scelta di utilizzarlo ha portato a superare un limite che sembrava ormai definitivo. Poi, un'altra peculiarit\u00e0 \u00e8 che l'intera lavorazione \u00e8 stata eseguita utilizzando Assembly e non un linguaggio ad alto livello e questo ha rappresentato un'ulteriore differenza nell'approccio perch\u00e9 gli umani in generale non lavorano sugli algoritmi Assembly. Questa scelta aveva un duplice scopo, innanzitutto restringeva il ventaglio di possibili combinazioni di istruzioni perch\u00e9 Assembly \u00e8 meno articolato di un qualsiasi linguaggio a livello superiore e poi eliminava un livello di complessit\u00e0 che poteva nascondere delle inefficienze. Se infatti pensiamo che un'istruzione di un linguaggio ad alto livello viene trasformata solitamente in una serie di istruzioni Assembly, possiamo anche supporre che una lunga sequenza di operazioni ad alto livello possa generare una combinazione in Assembly non ottimale. In teoria i compilatori dovrebbero evitare queste condizioni, ma non sempre \u00e8 possibile farlo, prevedere tutte le possibili combinazioni che un programmatore potrebbe decidere di utilizzare \u00e8 praticamente impossibile. Quindi, in pratica, Assembly rappresenta un ambiente pi\u00f9 flessibile in cui operare e utilizzandolo direttamente Alphadev ha potuto eliminare completamente tutto lo strato di incertezza dovuto all'astrazione causata da un qualsiasi linguaggio, lasciando poi ai programmatori umani il compito di ricostruire il nuovo algoritmo a livello superiore. E nello specifico, in DeepMind, hanno riportato tutto il lavoro fatto da Alphadev in linguaggio C++ e poi l'hanno reso open e, altra nota positiva, l'hanno inserito in una delle librerie pi\u00f9 utilizzate al mondo. Ci\u00f2 significa che questo codice migliorato verr\u00e0 ora utilizzato da centinaia di migliaia di programmatori e software e tutto ci\u00f2 non pu\u00f2 che essere un'ottima notizia per noi e per la societ\u00e0. Per via del suo approccio totalmente diverso da quello abitualmente utilizzato fino ad ora, Alphadev, nello svolgere il suo compito, ha anche prodotto alcuni risultati molto singolari e interessanti. Un esempio di ci\u00f2 \u00e8 rappresentato da una serie di strane sequenze di istruzioni che i ricercatori di DeepMind hanno chiamato Alphadev Swap & Copy Moves. A livello concettuale, infatti, si tratta di qualcosa di molto simile alla mossa 37 di AlphaGo che la EA mise in campo contro il campione mondiale di Go. Durante quella leggendaria partita, l'intelligenza artificiale aveva eseguito una mossa talmente controintuitiva che aveva stupito tutti gli esperti, campione compreso, ma che alla fine l'aveva portata a vincere il match. Con le sue Swap & Copy Moves, Alphadev a suo modo ha fatto qualcosa di simile, implementando alcune operazioni abbastanza banali in modo del tutto singolare e fuori da ci\u00f2 che i ricercatori sono abituati a vedere. In pratica, nel proprio algoritmo, in alcuni casi, la EA ha deciso di saltare a piepari alcune istruzioni nel flusso del codice, istruzioni che fino ad ora erano considerate indispensabili per il corretto funzionamento del processo. Nello specifico, il fenomeno si \u00e8 manifestato nel caso in cui venga calcolato l'ordinamento per otto numeri, dove alcune istruzioni di confronto semplicemente mancano nell'algoritmo. A prima vista, questo comportamento \u00e8 apparso come un errore, ma poi, verificando meglio nel codice, si \u00e8 scoperto che, per via di come era strutturato il processo, per quel particolare caso semplicemente quei confronti non servivano. Se essi fossero stati implementati, infatti, avrebbero restituito un unico valore, lo stesso, sempre, ad ogni esecuzione con qualsiasi sequenza di input. Quindi, banalmente, erano superflui. Questo fatto mostra come una intelligenza di reinforcement learning sia in grado letteralmente di scoprire soluzioni pi\u00f9 efficienti, anche quando queste, apparendo contrarie ad ogni logica, sono, invece, molto difficili da individuare con intuito e creativit\u00e0. In DeepMind, poi, si sono concentrati particolarmente sul miglioramento degli algoritmi di ordinamento per sequenze brevi, fatte di 3-5 elementi. Tali algoritmi sono, infatti, tra i pi\u00f9 utilizzati, perch\u00e9 vengono spesso impiegati pi\u00f9 volte come parte di funzioni di ordinamento di sequenze pi\u00f9 ampie e, quindi, il loro miglioramento pu\u00f2 portare ad una velocizzazione complessiva per qualsiasi numero di elementi. Questa focalizzazione ha, quindi, portato ad un ulteriore risultato particolarmente interessante che \u00e8 venuto fuori per la funzione chiamata varsort4, cio\u00e8 la funzione di ordinamento di liste di 4 elementi. Come accennavamo poco fa, nei moderni linguaggi di programmazione, la funzione normalmente invocata per l'ordinamento, che di solito si chiama sort o qualcosa del genere, nasconde in realt\u00e0 una serie di funzioni diverse al proprio interno, che vengono impiegate a seconda del numero di elementi da ordinare. In pratica, ci\u00f2 vuol dire che se io da programmatore utilizzo la funzione sort, questa a sua volta conta gli elementi da ordinare e se sono 2 invoca sort2, se sono 3 invoca sort3, se sono 4 sort4 e cos\u00ec via, fino ad un certo numero che varia a seconda dell'implementazione. Poi, superato tale numero, vengono utilizzate combinazioni di tutte queste funzioni per sequenze pi\u00f9 piccole. Ebbene, Alphadev ha scoperto che per una lista di 4 elementi questo non \u00e8 il modo pi\u00f9 efficiente di procedere, almeno in assembly. Al contrario, ha utilizzato il seguente approccio. Come gi\u00e0 noto, se gli elementi sono 2 chiama la funzione varsort2, se gli elementi sono 3 chiama varsort3, ma se gli elementi sono pi\u00f9 di 3 chiama comunque varsort3 sui primi tre elementi e poi invoca una versione semplificata di varsort4 che lavora sul risultato parzialmente ordinato da varsort3. Ok, lo so che \u00e8 un processo un po' complicato da descrivere a parole e da immaginare, ma se vuoi trovi un semplice schema nel paper alla figura 4. Ad ogni modo, cambiando questa strategia che prima era considerata basilare e ovvia quasi scontata, si \u00e8 scoperto che si ottiene un notevole incremento in termini di velocit\u00e0 complessiva e quindi di efficienza dell'algoritmo. Insomma, migliorando uno degli algoritmi pi\u00f9 utilizzati dagli sviluppatori di tutto il mondo, Alphadev va dimostrato come un'intelligenza artificiale e pu\u00f2 essere utilizzata in modo da avere un impatto positivo e reale sulle nostre vite. Utilizzandolo in questo modo, questo motore di Machine Learning pu\u00f2 rappresentare un'arma potentissima nello sviluppo di strumenti che contribuiscono a migliorare l'intero panorama informatico e a risolvere problemi a vantaggio dell'intera societ\u00e0. Migliorando Alphadev, o addirittura sviluppando dei competitor pi\u00f9 potenti, si potrebbero ottimizzare algoritmi direttamente nei vari linguaggi ad alto livello e ci\u00f2 potrebbe risultare ancora pi\u00f9 utile nel mondo dello sviluppo software. Ma anche cos\u00ec, le creazioni di Alphadev, come le Swap & Copy Moves o la Varsort 4, non solo dimostrano che esso pu\u00f2 migliorare un algoritmo esistente, ma addirittura che \u00e8 in grado di trovare nuove soluzioni del tutto innovative a problemi di complessit\u00e0 enorme. E questa cosa \u00e8 possibile perch\u00e9, a differenza dei large language model come ChatGPT, gli algoritmi di Deep Reinforcement Learning come Alphadev sono in grado realmente di creare qualcosa di nuovo, di inventare soluzioni e non solo di riprodurre quello che \u00e8 il comportamento umano. Bene, finisce qui l'episodio di oggi. Per tutti i dettagli riguardanti la notizia, l'algoritmo, eccetera, ti rimando ovviamente ai link in descrizione. Ringrazio come sempre Edoardo e Carlo per la loro donazione mensile e poi Corrado che ha fatto la sua donazione ormai ben due mesi fa, ma io sono super ingolfato e ci ho messo una vita a far uscire questo episodio. A proposito, in queste settimane ho preparato una roba interessantissima, ma che per ora \u00e8 top secret. Se riesco spero di pubblicarla gi\u00e0 al prossimo episodio. Tu intanto, se apprezzi il mio lavoro, fai come Carlo, Edoardo e Corrado e dimostralo concretamente. Sul sito Pensieri in Codice trovi tutti gli episodi, tutti i link per le donazioni, le affiliazioni, il gruppo Telegram, il canale Telegram, eccetera. E in pi\u00f9, da oggi, se doni pi\u00f9 di 10\u20ac, anche accumulando pi\u00f9 donazioni e conteggiando le donazioni passate, ricevi a casa tutti gli adesivi e il segnalibro con le nuove grafiche. Basta che mi scrivi il tuo indirizzo per email o su Telegram. A proposito poi di Telegram, ti ricordo che l'accesso al gruppo di Pensieri in Codice \u00e8 su autorizzazione per via dei bot che infestano la piattaforma, quindi ti consiglio di scrivermi per velocizzare le procedure di verifica, ti basta cercare chiocciola valerio galano direttamente nella casella di ricerca di Telegram. Infine, non dimenticare di condividere l'episodio con amici, parenti, gruppi, eccetera, che come al solito io cerco di farti fare bella figura e a te spargere la voce non costa nulla. E basta, grazie per aver ascoltato fin qui, noi ci sentiamo al prossimo episodio e tu non dimenticare mai che un informatico risolve problemi, a volte, anche usando il computer.", "segments": [{"id": 1, "seek": 2984, "start": 0.0, "end": 5.92, "text": " Sono mesi ormai che il mondo intero \u00e8 rimasto a bocca aperta dopo aver visto le potenzialit\u00e0", "tokens": [50364, 48344, 3813, 72, 420, 76, 1301, 947, 1930, 40499, 728, 78, 4873, 15982, 33869, 257, 748, 22394, 43139, 1328, 35196, 18247, 17558, 476, 1847, 11368, 831, 12445, 50660], "temperature": 0.0, "avg_logprob": -0.18943798449612403, "compression_ratio": 1.5854545454545454, "no_speech_prob": 0.00406646728515625, "words": null}, {"id": 2, "seek": 2984, "start": 5.92, "end": 12.0, "text": " di chat GPT e le migliaia di applicazioni che ne stanno fiorendo al ritmo di decine", "tokens": [50660, 1026, 5081, 26039, 51, 308, 476, 6186, 14218, 654, 1026, 2580, 27569, 947, 408, 342, 13484, 15848, 418, 273, 78, 419, 11289, 3280, 1026, 979, 533, 50964], "temperature": 0.0, "avg_logprob": -0.18943798449612403, "compression_ratio": 1.5854545454545454, "no_speech_prob": 0.00406646728515625, "words": null}, {"id": 3, "seek": 2984, "start": 12.0, "end": 13.0, "text": " al giorno.", "tokens": [50964, 419, 42202, 13, 51014], "temperature": 0.0, "avg_logprob": -0.18943798449612403, "compression_ratio": 1.5854545454545454, "no_speech_prob": 0.00406646728515625, "words": null}, {"id": 4, "seek": 2984, "start": 13.0, "end": 15.68, "text": " Anche noi ne abbiamo parlato nello scorso episodio.", "tokens": [51014, 1107, 1876, 22447, 408, 22815, 13734, 2513, 408, 1913, 38629, 539, 39200, 1004, 13, 51148], "temperature": 0.0, "avg_logprob": -0.18943798449612403, "compression_ratio": 1.5854545454545454, "no_speech_prob": 0.00406646728515625, "words": null}, {"id": 5, "seek": 2984, "start": 15.68, "end": 22.16, "text": " Ma il machine learning non \u00e8 fatto solo di large language model che replicano il comportamento", "tokens": [51148, 4042, 1930, 3479, 2539, 2107, 4873, 23228, 6944, 1026, 2416, 2856, 2316, 947, 3248, 38028, 1930, 25883, 8824, 51472], "temperature": 0.0, "avg_logprob": -0.18943798449612403, "compression_ratio": 1.5854545454545454, "no_speech_prob": 0.00406646728515625, "words": null}, {"id": 6, "seek": 2984, "start": 22.16, "end": 23.16, "text": " umano.", "tokens": [51472, 1105, 3730, 13, 51522], "temperature": 0.0, "avg_logprob": -0.18943798449612403, "compression_ratio": 1.5854545454545454, "no_speech_prob": 0.00406646728515625, "words": null}, {"id": 7, "seek": 2984, "start": 23.16, "end": 29.84, "text": " Esistono altri tipi di intelligenze artificiali basate su approcci differenti e che possono", "tokens": [51522, 2313, 468, 8957, 33707, 4125, 72, 1026, 4359, 3213, 1381, 11677, 72, 987, 473, 459, 2075, 66, 537, 27372, 308, 947, 43857, 51856], "temperature": 0.0, "avg_logprob": -0.18943798449612403, "compression_ratio": 1.5854545454545454, "no_speech_prob": 0.00406646728515625, "words": null}, {"id": 8, "seek": 5892, "start": 29.84, "end": 33.04, "text": " generare risultati e ricadute anche pi\u00f9 importanti.", "tokens": [50364, 1337, 543, 2253, 723, 6908, 308, 21040, 345, 1169, 11585, 10589, 1021, 72, 13, 50524], "temperature": 0.0, "avg_logprob": -0.31478659069635034, "compression_ratio": 1.5, "no_speech_prob": 0.048095703125, "words": null}, {"id": 9, "seek": 5892, "start": 33.04, "end": 39.54, "text": " Noi oggi, approfittando di una notizia che forse non ha avuto il giusto risalto, cogliamo", "tokens": [50524, 883, 72, 34768, 11, 2075, 69, 593, 1806, 1026, 2002, 406, 590, 654, 947, 337, 405, 2107, 324, 1305, 8262, 1930, 1735, 48260, 2253, 304, 1353, 11, 598, 41443, 10502, 50849], "temperature": 0.0, "avg_logprob": -0.31478659069635034, "compression_ratio": 1.5, "no_speech_prob": 0.048095703125, "words": null}, {"id": 10, "seek": 5892, "start": 39.54, "end": 46.32, "text": " l'occasione per parlare di una differente forma di machine learning chiamata Deep Reinforcement", "tokens": [50849, 287, 6, 905, 16369, 5328, 680, 13734, 543, 1026, 2002, 1026, 38145, 1576, 8366, 1026, 3479, 2539, 417, 2918, 3274, 14895, 42116, 9382, 51188], "temperature": 0.0, "avg_logprob": -0.31478659069635034, "compression_ratio": 1.5, "no_speech_prob": 0.048095703125, "words": null}, {"id": 11, "seek": 5892, "start": 46.32, "end": 47.32, "text": " Learning.", "tokens": [51188, 15205, 13, 51238], "temperature": 0.0, "avg_logprob": -0.31478659069635034, "compression_ratio": 1.5, "no_speech_prob": 0.048095703125, "words": null}, {"id": 12, "seek": 5892, "start": 47.32, "end": 50.16, "text": " Ma prima ascoltiamo la sigla.", "tokens": [51238, 4042, 19507, 15526, 4837, 7415, 635, 4556, 875, 13, 51380], "temperature": 0.0, "avg_logprob": -0.31478659069635034, "compression_ratio": 1.5, "no_speech_prob": 0.048095703125, "words": null}, {"id": 13, "seek": 5892, "start": 50.16, "end": 57.24, "text": " Sono due mesi, lo so, ti \u00e8 mancata, anche a me.", "tokens": [51380, 48344, 3462, 3813, 72, 11, 450, 370, 11, 8757, 4873, 587, 66, 3274, 11, 11585, 257, 385, 13, 51734], "temperature": 0.0, "avg_logprob": -0.31478659069635034, "compression_ratio": 1.5, "no_speech_prob": 0.048095703125, "words": null}, {"id": 14, "seek": 5892, "start": 57.24, "end": 58.92, "text": " Benvenuti su Pensieri in Codice.", "tokens": [51734, 3964, 553, 29161, 459, 45035, 45980, 294, 383, 378, 573, 13, 51818], "temperature": 0.0, "avg_logprob": -0.31478659069635034, "compression_ratio": 1.5, "no_speech_prob": 0.048095703125, "words": null}, {"id": 15, "seek": 8240, "start": 59.24, "end": 62.88, "text": " Il podcast dove si ragiona da informatici con Valerio Galano.", "tokens": [50380, 4416, 7367, 23287, 1511, 17539, 21758, 1120, 1356, 2399, 72, 416, 7188, 260, 1004, 7336, 3730, 13, 50562], "temperature": 0.0, "avg_logprob": -0.293890460153644, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0206298828125, "words": null}, {"id": 16, "seek": 8240, "start": 68.28, "end": 70.52, "text": " Cominciamo dalla notizia.", "tokens": [50832, 2432, 21961, 10502, 35566, 406, 590, 654, 13, 50944], "temperature": 0.0, "avg_logprob": -0.293890460153644, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0206298828125, "words": null}, {"id": 17, "seek": 8240, "start": 70.52, "end": 76.52000000000001, "text": " Il 7 giugno di quest'anno, quindi circa un mese e mezzo fa, DeepMind, una sussidiaria", "tokens": [50944, 4416, 1614, 1735, 697, 1771, 1026, 866, 6, 13484, 11, 15727, 45972, 517, 275, 1130, 308, 385, 35130, 2050, 11, 14895, 44, 471, 11, 2002, 262, 2023, 12716, 9831, 51244], "temperature": 0.0, "avg_logprob": -0.293890460153644, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0206298828125, "words": null}, {"id": 18, "seek": 8240, "start": 76.52000000000001, "end": 82.4, "text": " di Google che fa ricerca nel campo dell'intelligenza artificiale, ha annunciato che uno dei suoi", "tokens": [51244, 1026, 3329, 947, 2050, 21040, 36127, 15373, 29691, 19781, 6, 20761, 3213, 2394, 11677, 68, 11, 324, 2324, 11228, 2513, 947, 8526, 13874, 459, 4869, 51538], "temperature": 0.0, "avg_logprob": -0.293890460153644, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.0206298828125, "words": null}, {"id": 19, "seek": 11176, "start": 82.4, "end": 89.36, "text": " sistemi, in particolare quello chiamato Alphadev, ha sviluppato un nuovo algoritmo", "tokens": [50364, 10555, 13372, 11, 294, 1276, 43141, 22813, 417, 2918, 2513, 967, 950, 762, 85, 11, 324, 17342, 388, 10504, 2513, 517, 49348, 3501, 50017, 3280, 50712], "temperature": 0.0, "avg_logprob": -0.22155762242618948, "compression_ratio": 1.564748201438849, "no_speech_prob": 0.417724609375, "words": null}, {"id": 20, "seek": 11176, "start": 89.36, "end": 92.2, "text": " di ordinamento utilizzando il linguaggio Assembly.", "tokens": [50712, 1026, 25376, 8824, 40355, 1806, 1930, 21766, 30763, 6281, 443, 25021, 13, 50854], "temperature": 0.0, "avg_logprob": -0.22155762242618948, "compression_ratio": 1.564748201438849, "no_speech_prob": 0.417724609375, "words": null}, {"id": 21, "seek": 11176, "start": 92.2, "end": 98.32000000000001, "text": " Detta cos\u00ec potrebbe sembrare qualcosa di banale, una notizia come tante, ma la realt\u00e0", "tokens": [50854, 4237, 1328, 23278, 1847, 39487, 20775, 35559, 42400, 1026, 5643, 1220, 11, 2002, 406, 590, 654, 808, 256, 2879, 11, 463, 635, 47512, 51160], "temperature": 0.0, "avg_logprob": -0.22155762242618948, "compression_ratio": 1.564748201438849, "no_speech_prob": 0.417724609375, "words": null}, {"id": 22, "seek": 11176, "start": 98.32000000000001, "end": 101.64000000000001, "text": " \u00e8 che si tratta di un passo in avanti molto importante.", "tokens": [51160, 4873, 947, 1511, 504, 18405, 1026, 517, 38159, 294, 1305, 11520, 16394, 9416, 13, 51326], "temperature": 0.0, "avg_logprob": -0.22155762242618948, "compression_ratio": 1.564748201438849, "no_speech_prob": 0.417724609375, "words": null}, {"id": 23, "seek": 11176, "start": 101.64000000000001, "end": 108.68, "text": " Questo nuovo algoritmo, infatti, ha la caratteristica di essere pi\u00f9 efficiente di tutti i suoi predecessori", "tokens": [51326, 38167, 49348, 3501, 50017, 3280, 11, 1536, 21515, 11, 324, 635, 1032, 1161, 468, 2262, 1026, 19799, 10589, 7148, 68, 1026, 19822, 741, 459, 4869, 24874, 780, 7386, 51678], "temperature": 0.0, "avg_logprob": -0.22155762242618948, "compression_ratio": 1.564748201438849, "no_speech_prob": 0.417724609375, "words": null}, {"id": 24, "seek": 11176, "start": 108.68, "end": 111.76, "text": " implementati fino ad ora da intelligenze umane.", "tokens": [51678, 4445, 6908, 42560, 614, 33714, 1120, 4359, 3213, 1381, 1105, 1929, 13, 51832], "temperature": 0.0, "avg_logprob": -0.22155762242618948, "compression_ratio": 1.564748201438849, "no_speech_prob": 0.417724609375, "words": null}, {"id": 25, "seek": 13852, "start": 112.2, "end": 118.16000000000001, "text": " I ricercatori informatici lavorano continuamente nel tentativo di migliorare le performance", "tokens": [50386, 286, 21040, 2869, 39842, 1356, 2399, 72, 29241, 3730, 2993, 3439, 15373, 7054, 18586, 1026, 6186, 75, 1973, 543, 476, 3389, 50684], "temperature": 0.0, "avg_logprob": -0.19609375124176343, "compression_ratio": 1.562992125984252, "no_speech_prob": 0.00045108795166015625, "words": null}, {"id": 26, "seek": 13852, "start": 118.16000000000001, "end": 124.28, "text": " degli algoritmi di base e, nello specifico, per quelli di ordinamento, erano anni che", "tokens": [50684, 274, 1146, 2081, 3501, 50017, 3057, 1026, 3096, 308, 11, 408, 1913, 2685, 78, 11, 680, 631, 16320, 1026, 25376, 8824, 11, 1189, 3730, 31164, 947, 50990], "temperature": 0.0, "avg_logprob": -0.19609375124176343, "compression_ratio": 1.562992125984252, "no_speech_prob": 0.00045108795166015625, "words": null}, {"id": 27, "seek": 13852, "start": 124.28, "end": 129.28, "text": " non veniva realizzato qualcosa che risultasse pi\u00f9 veloce di quelli gi\u00e0 conosciuti.", "tokens": [50990, 2107, 6138, 5931, 957, 8072, 2513, 42400, 947, 2253, 723, 8604, 10589, 1241, 752, 384, 1026, 631, 16320, 30469, 49892, 537, 29161, 13, 51240], "temperature": 0.0, "avg_logprob": -0.19609375124176343, "compression_ratio": 1.562992125984252, "no_speech_prob": 0.00045108795166015625, "words": null}, {"id": 28, "seek": 13852, "start": 129.28, "end": 136.12, "text": " Con l'impiego di Alphadev, invece, questo limite \u00e8 stato superato ed \u00e8 una cosa emblematica", "tokens": [51240, 2656, 287, 6, 8814, 12200, 1026, 967, 950, 762, 85, 11, 36344, 11, 10263, 39946, 4873, 29657, 1687, 2513, 1257, 4873, 2002, 10163, 35949, 267, 2262, 51582], "temperature": 0.0, "avg_logprob": -0.19609375124176343, "compression_ratio": 1.562992125984252, "no_speech_prob": 0.00045108795166015625, "words": null}, {"id": 29, "seek": 13852, "start": 136.12, "end": 138.52, "text": " che colpisce sotto tanti punti di vista.", "tokens": [51582, 947, 1173, 40516, 384, 43754, 256, 11520, 18212, 72, 1026, 22553, 13, 51702], "temperature": 0.0, "avg_logprob": -0.19609375124176343, "compression_ratio": 1.562992125984252, "no_speech_prob": 0.00045108795166015625, "words": null}, {"id": 30, "seek": 16692, "start": 138.96, "end": 145.52, "text": " Innanzitutto perch\u00e9, parlando pragmaticamente, un migliore algoritmo di ordinamento ha ricadute", "tokens": [50386, 34066, 3910, 270, 28698, 14303, 11, 971, 16201, 46904, 3439, 11, 517, 6186, 2081, 418, 3501, 50017, 3280, 1026, 25376, 8824, 324, 21040, 345, 1169, 50714], "temperature": 0.0, "avg_logprob": -0.18907461240310078, "compression_ratio": 1.5740072202166064, "no_speech_prob": 0.00475311279296875, "words": null}, {"id": 31, "seek": 16692, "start": 145.52, "end": 150.56, "text": " positive enormi sul mondo reale, a breve ne parleremo in modo pi\u00f9 approfondito.", "tokens": [50714, 3353, 8473, 72, 17603, 40499, 957, 68, 11, 257, 48517, 408, 13734, 323, 3280, 294, 16664, 10589, 2075, 69, 684, 3528, 13, 50966], "temperature": 0.0, "avg_logprob": -0.18907461240310078, "compression_ratio": 1.5740072202166064, "no_speech_prob": 0.00475311279296875, "words": null}, {"id": 32, "seek": 16692, "start": 150.56, "end": 156.28, "text": " Ma oltre a ci\u00f2, da un punto di vista pi\u00f9 generale, questo avvenimento ci d\u00e0 un'idea", "tokens": [50966, 4042, 277, 2282, 265, 257, 6983, 4293, 11, 1120, 517, 14326, 1026, 22553, 10589, 1337, 1220, 11, 10263, 1305, 553, 10030, 6983, 274, 1467, 517, 6, 482, 64, 51252], "temperature": 0.0, "avg_logprob": -0.18907461240310078, "compression_ratio": 1.5740072202166064, "no_speech_prob": 0.00475311279296875, "words": null}, {"id": 33, "seek": 16692, "start": 156.28, "end": 161.20000000000002, "text": " di quali siano le grandi potenzialit\u00e0 di un sistema di machine learning quando viene", "tokens": [51252, 1026, 4101, 72, 262, 6254, 476, 45155, 1847, 11368, 831, 12445, 1026, 517, 13245, 1026, 3479, 2539, 7770, 19561, 51498], "temperature": 0.0, "avg_logprob": -0.18907461240310078, "compression_ratio": 1.5740072202166064, "no_speech_prob": 0.00475311279296875, "words": null}, {"id": 34, "seek": 16692, "start": 161.20000000000002, "end": 166.92000000000002, "text": " utilizzato effettivamente per superare quelli che sono i limiti dell'inventiva umana.", "tokens": [51498, 40355, 2513, 1244, 3093, 23957, 680, 1687, 543, 631, 16320, 947, 9259, 741, 4948, 72, 19781, 6, 259, 2475, 5931, 1105, 2095, 13, 51784], "temperature": 0.0, "avg_logprob": -0.18907461240310078, "compression_ratio": 1.5740072202166064, "no_speech_prob": 0.00475311279296875, "words": null}, {"id": 35, "seek": 19692, "start": 167.44000000000003, "end": 172.96, "text": " Ma procediamo con ordine e facciamo un passo indietro perch\u00e9, per capire bene gli aspetti", "tokens": [50390, 4042, 6682, 7415, 416, 4792, 533, 308, 1915, 42052, 517, 38159, 1016, 1684, 340, 14303, 11, 680, 1410, 621, 2537, 17161, 16817, 12495, 50666], "temperature": 0.0, "avg_logprob": -0.20465959621859448, "compression_ratio": 1.5564853556485356, "no_speech_prob": 0.0006875991821289062, "words": null}, {"id": 36, "seek": 19692, "start": 172.96, "end": 178.76000000000002, "text": " pi\u00f9 interessanti di questa vicenda, \u00e8 necessario conoscere un paio di concetti.", "tokens": [50666, 10589, 12478, 11520, 1026, 16540, 26031, 7639, 11, 4873, 2688, 4912, 416, 10466, 323, 517, 2502, 1004, 1026, 1588, 12495, 13, 50956], "temperature": 0.0, "avg_logprob": -0.20465959621859448, "compression_ratio": 1.5564853556485356, "no_speech_prob": 0.0006875991821289062, "words": null}, {"id": 37, "seek": 19692, "start": 178.76000000000002, "end": 185.32000000000002, "text": " Quindi, innanzitutto, ripassiamo brevemente cos'\u00e8 un algoritmo di ordinamento, che cos'\u00e8", "tokens": [50956, 32534, 11, 7714, 3910, 270, 28698, 11, 12782, 640, 7415, 48517, 4082, 3792, 6, 1462, 517, 3501, 50017, 3280, 1026, 25376, 8824, 11, 947, 3792, 6, 1462, 51284], "temperature": 0.0, "avg_logprob": -0.20465959621859448, "compression_ratio": 1.5564853556485356, "no_speech_prob": 0.0006875991821289062, "words": null}, {"id": 38, "seek": 19692, "start": 185.32000000000002, "end": 191.44000000000003, "text": " il linguaggio Assembly e poi parliamo di come funziona Alphadev e di che cosa \u00e8 stato in", "tokens": [51284, 1930, 21766, 30763, 20399, 308, 19260, 971, 49926, 1026, 808, 49345, 21758, 967, 950, 762, 85, 308, 1026, 947, 10163, 4873, 29657, 294, 51590], "temperature": 0.0, "avg_logprob": -0.20465959621859448, "compression_ratio": 1.5564853556485356, "no_speech_prob": 0.0006875991821289062, "words": null}, {"id": 39, "seek": 19692, "start": 191.44000000000003, "end": 192.68, "text": " grado di produrre.", "tokens": [51590, 677, 1573, 1026, 15792, 374, 265, 13, 51652], "temperature": 0.0, "avg_logprob": -0.20465959621859448, "compression_ratio": 1.5564853556485356, "no_speech_prob": 0.0006875991821289062, "words": null}, {"id": 40, "seek": 22492, "start": 197.92000000000002, "end": 205.72000000000003, "text": " Senza entrare nel campo tecnico, un algoritmo di ordinamento, lo dice il nome stesso, \u00e8", "tokens": [50414, 3862, 2394, 22284, 265, 15373, 29691, 20105, 2789, 11, 517, 3501, 50017, 3280, 1026, 25376, 8824, 11, 450, 10313, 1930, 19003, 44413, 11, 4873, 50804], "temperature": 0.0, "avg_logprob": -0.24328270721658368, "compression_ratio": 1.5462555066079295, "no_speech_prob": 0.0015249252319335938, "words": null}, {"id": 41, "seek": 22492, "start": 205.72000000000003, "end": 208.52, "text": " un algoritmo che serve ad ordinare qualcosa.", "tokens": [50804, 517, 3501, 50017, 3280, 947, 4596, 614, 25376, 543, 42400, 13, 50944], "temperature": 0.0, "avg_logprob": -0.24328270721658368, "compression_ratio": 1.5462555066079295, "no_speech_prob": 0.0015249252319335938, "words": null}, {"id": 42, "seek": 22492, "start": 208.52, "end": 214.44000000000003, "text": " Nella sua forma pi\u00f9 semplice, solitamente questo qualcosa sono numeri, perch\u00e9 i computer", "tokens": [50944, 426, 9885, 8233, 8366, 10589, 4361, 564, 573, 11, 1404, 270, 3439, 10263, 42400, 9259, 7866, 72, 11, 14303, 741, 3820, 51240], "temperature": 0.0, "avg_logprob": -0.24328270721658368, "compression_ratio": 1.5462555066079295, "no_speech_prob": 0.0015249252319335938, "words": null}, {"id": 43, "seek": 22492, "start": 214.44000000000003, "end": 216.60000000000002, "text": " lavorano essenzialmente con i numeri.", "tokens": [51240, 29241, 3730, 2097, 11368, 831, 4082, 416, 741, 7866, 72, 13, 51348], "temperature": 0.0, "avg_logprob": -0.24328270721658368, "compression_ratio": 1.5462555066079295, "no_speech_prob": 0.0015249252319335938, "words": null}, {"id": 44, "seek": 22492, "start": 216.60000000000002, "end": 224.92000000000002, "text": " Quindi, banalmente, se avessi una lista come 7, 1 e 499, potrei utilizzare uno dei tanti", "tokens": [51348, 32534, 11, 5643, 304, 4082, 11, 369, 1305, 442, 72, 2002, 27764, 808, 1614, 11, 502, 308, 1017, 8494, 11, 1847, 10271, 40355, 543, 8526, 13874, 256, 11520, 51764], "temperature": 0.0, "avg_logprob": -0.24328270721658368, "compression_ratio": 1.5462555066079295, "no_speech_prob": 0.0015249252319335938, "words": null}, {"id": 45, "seek": 25304, "start": 224.92000000000002, "end": 231.00000000000003, "text": " algoritmi di ordinamento gi\u00e0 esistenti per trasformarla in 1, 7 e 499.", "tokens": [50364, 3501, 50017, 3057, 1026, 25376, 8824, 30469, 785, 468, 23012, 680, 22507, 837, 34148, 294, 502, 11, 1614, 308, 1017, 8494, 13, 50668], "temperature": 0.0, "avg_logprob": -0.2263020901630322, "compression_ratio": 1.5743801652892562, "no_speech_prob": 0.0675048828125, "words": null}, {"id": 46, "seek": 25304, "start": 231.00000000000003, "end": 236.96, "text": " Ovviamente, la mia lista potrebbe essere di tre numeri, ma anche di due, di uno o di un", "tokens": [50668, 50005, 23347, 11, 635, 21290, 27764, 1847, 39487, 19799, 1026, 2192, 7866, 72, 11, 463, 11585, 1026, 3462, 11, 1026, 8526, 277, 1026, 517, 50966], "temperature": 0.0, "avg_logprob": -0.2263020901630322, "compression_ratio": 1.5743801652892562, "no_speech_prob": 0.0675048828125, "words": null}, {"id": 47, "seek": 25304, "start": 236.96, "end": 243.20000000000002, "text": " miliardo, poco importa, alla fine dell'esecuzione l'algoritmo me la dovrebbe restituire ordinata.", "tokens": [50966, 1962, 72, 12850, 11, 10639, 33218, 11, 11591, 2489, 19781, 6, 1130, 49789, 5328, 287, 6, 20422, 50017, 3280, 385, 635, 30870, 39487, 1472, 6380, 621, 25376, 3274, 13, 51278], "temperature": 0.0, "avg_logprob": -0.2263020901630322, "compression_ratio": 1.5743801652892562, "no_speech_prob": 0.0675048828125, "words": null}, {"id": 48, "seek": 25304, "start": 243.20000000000002, "end": 247.36, "text": " Ok, bene, ma a cosa serve ordinare dei numeri?", "tokens": [51278, 3477, 11, 2537, 11, 463, 257, 10163, 4596, 25376, 543, 13874, 7866, 72, 30, 51486], "temperature": 0.0, "avg_logprob": -0.2263020901630322, "compression_ratio": 1.5743801652892562, "no_speech_prob": 0.0675048828125, "words": null}, {"id": 49, "seek": 25304, "start": 247.36, "end": 253.04000000000002, "text": " Beh, diciamo che in campo informatico serve praticamente per qualsiasi cosa.", "tokens": [51486, 13068, 11, 14285, 7415, 947, 294, 29691, 1356, 2399, 78, 4596, 45734, 680, 421, 1124, 4609, 72, 10163, 13, 51770], "temperature": 0.0, "avg_logprob": -0.2263020901630322, "compression_ratio": 1.5743801652892562, "no_speech_prob": 0.0675048828125, "words": null}, {"id": 50, "seek": 27888, "start": 253.16, "end": 259.64, "text": " Se ti stai immaginando una colonna di numeri in Excel che si pu\u00f2 ordinare con un clic,", "tokens": [50370, 1100, 8757, 342, 1301, 3397, 559, 259, 1806, 2002, 1173, 784, 1026, 7866, 72, 294, 19060, 947, 1511, 26526, 25376, 543, 416, 517, 33661, 11, 50694], "temperature": 0.0, "avg_logprob": -0.24357359291565034, "compression_ratio": 1.6, "no_speech_prob": 0.0008425712585449219, "words": null}, {"id": 51, "seek": 27888, "start": 259.64, "end": 263.2, "text": " sappi che la storia \u00e8 molto pi\u00f9 complicata di cos\u00ec.", "tokens": [50694, 46938, 72, 947, 635, 5967, 654, 4873, 16394, 10589, 16060, 3274, 1026, 23278, 13, 50872], "temperature": 0.0, "avg_logprob": -0.24357359291565034, "compression_ratio": 1.6, "no_speech_prob": 0.0008425712585449219, "words": null}, {"id": 52, "seek": 27888, "start": 263.2, "end": 268.4, "text": " Nel software in generale, operare su dati ordinati \u00e8 pi\u00f9 conveniente che farlo su", "tokens": [50872, 426, 338, 4722, 294, 1337, 1220, 11, 2208, 543, 459, 1137, 72, 25376, 6908, 4873, 10589, 7158, 8413, 947, 1400, 752, 459, 51132], "temperature": 0.0, "avg_logprob": -0.24357359291565034, "compression_ratio": 1.6, "no_speech_prob": 0.0008425712585449219, "words": null}, {"id": 53, "seek": 27888, "start": 268.4, "end": 270.08, "text": " dati organizzati in modo casuale.", "tokens": [51132, 1137, 72, 4645, 89, 6908, 294, 16664, 13052, 68, 13, 51216], "temperature": 0.0, "avg_logprob": -0.24357359291565034, "compression_ratio": 1.6, "no_speech_prob": 0.0008425712585449219, "words": null}, {"id": 54, "seek": 27888, "start": 270.08, "end": 275.71999999999997, "text": " Pertanto, qualsiasi programma, procedura, sistema, esegue ordinamenti ogni volta che", "tokens": [51216, 430, 911, 5857, 11, 421, 1124, 4609, 72, 1461, 1696, 11, 6682, 2991, 11, 13245, 11, 785, 1146, 622, 25376, 2466, 72, 33189, 18765, 947, 51498], "temperature": 0.0, "avg_logprob": -0.24357359291565034, "compression_ratio": 1.6, "no_speech_prob": 0.0008425712585449219, "words": null}, {"id": 55, "seek": 27888, "start": 275.71999999999997, "end": 278.88, "text": " ci\u00f2 \u00e8 conveniente dal punto di vista computazionale.", "tokens": [51498, 6983, 4293, 4873, 7158, 8413, 11702, 14326, 1026, 22553, 2807, 921, 313, 1220, 13, 51656], "temperature": 0.0, "avg_logprob": -0.24357359291565034, "compression_ratio": 1.6, "no_speech_prob": 0.0008425712585449219, "words": null}, {"id": 56, "seek": 30512, "start": 279.28, "end": 284.44, "text": " Ovviamente non lo fa di sua spontanea volont\u00e0, ma sono i programmatori che, ogni qualvolta", "tokens": [50384, 50005, 23347, 2107, 450, 2050, 1026, 8233, 20795, 1929, 64, 40005, 1467, 11, 463, 9259, 741, 1461, 15677, 7386, 947, 11, 33189, 4101, 9646, 1328, 50642], "temperature": 0.0, "avg_logprob": -0.2384350464099974, "compression_ratio": 1.5748031496062993, "no_speech_prob": 0.03729248046875, "words": null}, {"id": 57, "seek": 30512, "start": 284.44, "end": 291.04, "text": " devono implementare un algoritmo, possono decidere se ordinarne i dati sia un atto migliorativo", "tokens": [50642, 1905, 8957, 4445, 543, 517, 3501, 50017, 3280, 11, 43857, 21937, 323, 369, 4792, 6470, 716, 741, 1137, 72, 25176, 517, 951, 78, 6186, 75, 1973, 18586, 50972], "temperature": 0.0, "avg_logprob": -0.2384350464099974, "compression_ratio": 1.5748031496062993, "no_speech_prob": 0.03729248046875, "words": null}, {"id": 58, "seek": 30512, "start": 291.04, "end": 294.04, "text": " o meno per lo scopo che si sono prefissi.", "tokens": [50972, 277, 40236, 680, 450, 795, 404, 78, 947, 1511, 9259, 18417, 891, 72, 13, 51122], "temperature": 0.0, "avg_logprob": -0.2384350464099974, "compression_ratio": 1.5748031496062993, "no_speech_prob": 0.03729248046875, "words": null}, {"id": 59, "seek": 30512, "start": 294.04, "end": 298.84, "text": " E questo tipo di operazioni \u00e8 presente a tutti i livelli.", "tokens": [51122, 462, 10263, 9746, 1026, 2208, 27569, 4873, 28709, 257, 19822, 741, 1621, 16320, 13, 51362], "temperature": 0.0, "avg_logprob": -0.2384350464099974, "compression_ratio": 1.5748031496062993, "no_speech_prob": 0.03729248046875, "words": null}, {"id": 60, "seek": 30512, "start": 298.84, "end": 303.68, "text": " Pu\u00f2 ordinare l'utente quando, ad esempio, filtra una lista o, come dicevamo poco fa,", "tokens": [51362, 13605, 4293, 25376, 543, 287, 6, 325, 1576, 7770, 11, 614, 33627, 11, 1387, 17227, 2002, 27764, 277, 11, 808, 10313, 85, 10502, 10639, 2050, 11, 51604], "temperature": 0.0, "avg_logprob": -0.2384350464099974, "compression_ratio": 1.5748031496062993, "no_speech_prob": 0.03729248046875, "words": null}, {"id": 61, "seek": 30512, "start": 303.68, "end": 305.12, "text": " ordina una colonna Excel.", "tokens": [51604, 4792, 1426, 2002, 1173, 784, 19060, 13, 51676], "temperature": 0.0, "avg_logprob": -0.2384350464099974, "compression_ratio": 1.5748031496062993, "no_speech_prob": 0.03729248046875, "words": null}, {"id": 62, "seek": 33380, "start": 305.44, "end": 308.68, "text": " Pu\u00f2 ordinare un software prima di lavorare su dei dati.", "tokens": [50380, 13605, 4293, 25376, 543, 517, 4722, 19507, 1026, 29241, 543, 459, 13874, 1137, 72, 13, 50542], "temperature": 0.0, "avg_logprob": -0.2673611247705089, "compression_ratio": 1.6595744680851063, "no_speech_prob": 0.071533203125, "words": null}, {"id": 63, "seek": 33380, "start": 308.68, "end": 312.4, "text": " Pu\u00f2 ordinare un componente hardware prima di eseguire certe operazioni.", "tokens": [50542, 13605, 4293, 25376, 543, 517, 4026, 1576, 8837, 19507, 1026, 785, 1146, 43612, 5351, 68, 2208, 27569, 13, 50728], "temperature": 0.0, "avg_logprob": -0.2673611247705089, "compression_ratio": 1.6595744680851063, "no_speech_prob": 0.071533203125, "words": null}, {"id": 64, "seek": 33380, "start": 312.4, "end": 319.16, "text": " E il discorso pu\u00f2 essere complicato o poi a piacere, se pensi che in informatica tutto", "tokens": [50728, 462, 1930, 2983, 284, 539, 26526, 19799, 16060, 2513, 277, 19260, 257, 3895, 326, 323, 11, 369, 6099, 72, 947, 294, 1356, 267, 2262, 23048, 51066], "temperature": 0.0, "avg_logprob": -0.2673611247705089, "compression_ratio": 1.6595744680851063, "no_speech_prob": 0.071533203125, "words": null}, {"id": 65, "seek": 33380, "start": 319.16, "end": 320.64, "text": " \u00e8 espresso per mezzo di numeri.", "tokens": [51066, 4873, 7089, 735, 78, 680, 385, 35130, 1026, 7866, 72, 13, 51140], "temperature": 0.0, "avg_logprob": -0.2673611247705089, "compression_ratio": 1.6595744680851063, "no_speech_prob": 0.071533203125, "words": null}, {"id": 66, "seek": 33380, "start": 320.64, "end": 323.52, "text": " I caratteri, i simboli, i dati, gli oggetti.", "tokens": [51140, 286, 1032, 1161, 72, 11, 741, 1034, 65, 9384, 11, 741, 1137, 72, 11, 17161, 5360, 847, 7317, 13, 51284], "temperature": 0.0, "avg_logprob": -0.2673611247705089, "compression_ratio": 1.6595744680851063, "no_speech_prob": 0.071533203125, "words": null}, {"id": 67, "seek": 33380, "start": 323.52, "end": 328.84000000000003, "text": " Alla fine sono tutti numeri e quindi tutti possono essere ordinati in qualche modo.", "tokens": [51284, 1057, 64, 2489, 9259, 19822, 7866, 72, 308, 15727, 19822, 43857, 19799, 25376, 6908, 294, 38737, 16664, 13, 51550], "temperature": 0.0, "avg_logprob": -0.2673611247705089, "compression_ratio": 1.6595744680851063, "no_speech_prob": 0.071533203125, "words": null}, {"id": 68, "seek": 33380, "start": 328.84000000000003, "end": 333.8, "text": " Ed \u00e8 grazie a questo fatto che il nostro computer pu\u00f2 ricercare all'interno dei nostri", "tokens": [51550, 3977, 4873, 1295, 3283, 257, 10263, 23228, 947, 1930, 35779, 3820, 26526, 21040, 260, 5685, 439, 6, 5106, 1771, 13874, 10397, 470, 51798], "temperature": 0.0, "avg_logprob": -0.2673611247705089, "compression_ratio": 1.6595744680851063, "no_speech_prob": 0.071533203125, "words": null}, {"id": 69, "seek": 36092, "start": 333.88, "end": 336.88, "text": " harddisk, file, archivi cloud, eccetera.", "tokens": [50368, 1152, 67, 7797, 11, 3991, 11, 3912, 33448, 4588, 11, 29613, 20269, 13, 50518], "temperature": 0.0, "avg_logprob": -0.23920036633225047, "compression_ratio": 1.599236641221374, "no_speech_prob": 0.1751708984375, "words": null}, {"id": 70, "seek": 36092, "start": 336.88, "end": 342.16, "text": " Ed \u00e8 sempre grazie all'ordinamento delle informazioni se pu\u00f2 restituirci risultati", "tokens": [50518, 3977, 4873, 9553, 1295, 3283, 439, 6, 6241, 8824, 16485, 1356, 27569, 369, 26526, 1472, 6380, 347, 537, 2253, 723, 6908, 50782], "temperature": 0.0, "avg_logprob": -0.23920036633225047, "compression_ratio": 1.599236641221374, "no_speech_prob": 0.1751708984375, "words": null}, {"id": 71, "seek": 36092, "start": 342.16, "end": 343.48, "text": " in tempi brevi.", "tokens": [50782, 294, 18274, 72, 1403, 4917, 13, 50848], "temperature": 0.0, "avg_logprob": -0.23920036633225047, "compression_ratio": 1.599236641221374, "no_speech_prob": 0.1751708984375, "words": null}, {"id": 72, "seek": 36092, "start": 343.48, "end": 349.28000000000003, "text": " Immagina il tuo harddisk come un elenco telefonico o un dizionario, se non fosse ordinato in", "tokens": [50848, 17322, 559, 1426, 1930, 45352, 1152, 67, 7797, 808, 517, 806, 268, 1291, 26812, 2789, 277, 517, 12098, 313, 4912, 11, 369, 2107, 24528, 25376, 2513, 294, 51138], "temperature": 0.0, "avg_logprob": -0.23920036633225047, "compression_ratio": 1.599236641221374, "no_speech_prob": 0.1751708984375, "words": null}, {"id": 73, "seek": 36092, "start": 349.28000000000003, "end": 353.56, "text": " qualche modo, quanto ci vorrebbe per trovare un numero o una parola.", "tokens": [51138, 38737, 16664, 11, 17820, 6983, 4245, 39487, 680, 35449, 543, 517, 46839, 277, 2002, 971, 4711, 13, 51352], "temperature": 0.0, "avg_logprob": -0.23920036633225047, "compression_ratio": 1.599236641221374, "no_speech_prob": 0.1751708984375, "words": null}, {"id": 74, "seek": 36092, "start": 353.56, "end": 359.64, "text": " E poi, oltre che per l'efficienza, l'ordinamento \u00e8 importante anche a livello funzionale, per", "tokens": [51352, 462, 19260, 11, 277, 2282, 265, 947, 680, 287, 6, 68, 3341, 42331, 11, 287, 6, 6241, 8824, 4873, 9416, 11585, 257, 1621, 1913, 49345, 313, 1220, 11, 680, 51656], "temperature": 0.0, "avg_logprob": -0.23920036633225047, "compression_ratio": 1.599236641221374, "no_speech_prob": 0.1751708984375, "words": null}, {"id": 75, "seek": 36092, "start": 359.64, "end": 360.92, "text": " l'esperienza utente.", "tokens": [51656, 287, 6, 34698, 42331, 2839, 1576, 13, 51720], "temperature": 0.0, "avg_logprob": -0.23920036633225047, "compression_ratio": 1.599236641221374, "no_speech_prob": 0.1751708984375, "words": null}, {"id": 76, "seek": 38460, "start": 361.08000000000004, "end": 366.72, "text": " Immagina di ricevere i risultati di un motore di ricerca non ordinati per attinenza.", "tokens": [50372, 17322, 559, 1426, 1026, 5090, 5887, 741, 2253, 723, 6908, 1026, 517, 2184, 418, 1026, 21040, 36127, 2107, 25376, 6908, 680, 951, 5636, 2394, 13, 50654], "temperature": 0.0, "avg_logprob": -0.24705188313745102, "compression_ratio": 1.6409090909090909, "no_speech_prob": 0.0194091796875, "words": null}, {"id": 77, "seek": 38460, "start": 366.72, "end": 372.2, "text": " Sarebbero praticamente inutili, dovresti spulciare decine e decine di pagine ogni volta.", "tokens": [50654, 318, 543, 65, 46659, 45734, 294, 325, 2312, 11, 30870, 4149, 72, 637, 425, 537, 543, 979, 533, 308, 979, 533, 1026, 280, 10260, 33189, 18765, 13, 50928], "temperature": 0.0, "avg_logprob": -0.24705188313745102, "compression_ratio": 1.6409090909090909, "no_speech_prob": 0.0194091796875, "words": null}, {"id": 78, "seek": 38460, "start": 372.2, "end": 379.12, "text": " Insomma, l'ordinamento \u00e8 fondamentale praticamente in ogni aspetto della gestione delle informazioni,", "tokens": [50928, 9442, 30243, 11, 287, 6, 6241, 8824, 4873, 9557, 2466, 1220, 45734, 294, 33189, 382, 42801, 11618, 7219, 5328, 16485, 1356, 27569, 11, 51274], "temperature": 0.0, "avg_logprob": -0.24705188313745102, "compression_ratio": 1.6409090909090909, "no_speech_prob": 0.0194091796875, "words": null}, {"id": 79, "seek": 38460, "start": 379.12, "end": 381.36, "text": " sia digitali che analogiche.", "tokens": [51274, 25176, 4562, 72, 947, 16660, 9304, 13, 51386], "temperature": 0.0, "avg_logprob": -0.24705188313745102, "compression_ratio": 1.6409090909090909, "no_speech_prob": 0.0194091796875, "words": null}, {"id": 80, "seek": 38460, "start": 381.36, "end": 384.6, "text": " E oggi come oggi significa praticamente qualsiasi cosa.", "tokens": [51386, 462, 34768, 808, 34768, 19957, 45734, 421, 1124, 4609, 72, 10163, 13, 51548], "temperature": 0.0, "avg_logprob": -0.24705188313745102, "compression_ratio": 1.6409090909090909, "no_speech_prob": 0.0194091796875, "words": null}, {"id": 81, "seek": 41320, "start": 385.04, "end": 391.76000000000005, "text": " E quindi, a questo punto, riesci a immaginare quante volte al giorno NEL MONDO viene invocato", "tokens": [50386, 462, 15727, 11, 257, 10263, 14326, 11, 23932, 537, 257, 3397, 559, 259, 543, 421, 2879, 37801, 419, 42202, 426, 3158, 27398, 26649, 19561, 1048, 905, 2513, 50722], "temperature": 0.0, "avg_logprob": -0.2523506721564099, "compression_ratio": 1.5523012552301256, "no_speech_prob": 0.052581787109375, "words": null}, {"id": 82, "seek": 41320, "start": 391.76000000000005, "end": 393.92, "text": " un algoritmo di ordinamento?", "tokens": [50722, 517, 3501, 50017, 3280, 1026, 25376, 8824, 30, 50830], "temperature": 0.0, "avg_logprob": -0.2523506721564099, "compression_ratio": 1.5523012552301256, "no_speech_prob": 0.052581787109375, "words": null}, {"id": 83, "seek": 41320, "start": 393.92, "end": 397.0, "text": " Il conteggio va fatto in trilioni.", "tokens": [50830, 4416, 660, 1146, 17862, 2773, 23228, 294, 26120, 15273, 13, 50984], "temperature": 0.0, "avg_logprob": -0.2523506721564099, "compression_ratio": 1.5523012552301256, "no_speech_prob": 0.052581787109375, "words": null}, {"id": 84, "seek": 41320, "start": 397.0, "end": 403.24, "text": " Oggi come oggi \u00e8 difficile che qualcuno scriva il proprio algoritmo di ordinamento.", "tokens": [50984, 422, 22771, 808, 34768, 4873, 26607, 947, 32101, 12638, 5545, 2757, 1930, 28203, 3501, 50017, 3280, 1026, 25376, 8824, 13, 51296], "temperature": 0.0, "avg_logprob": -0.2523506721564099, "compression_ratio": 1.5523012552301256, "no_speech_prob": 0.052581787109375, "words": null}, {"id": 85, "seek": 41320, "start": 403.24, "end": 406.20000000000005, "text": " Avviene, ma solo in casi particolari.", "tokens": [51296, 11667, 85, 10174, 11, 463, 6944, 294, 22567, 1276, 401, 3504, 13, 51444], "temperature": 0.0, "avg_logprob": -0.2523506721564099, "compression_ratio": 1.5523012552301256, "no_speech_prob": 0.052581787109375, "words": null}, {"id": 86, "seek": 41320, "start": 406.20000000000005, "end": 413.20000000000005, "text": " E per questo motivo le migliori implementazioni di tali algoritmi sono gi\u00e0 presenti sotto", "tokens": [51444, 462, 680, 10263, 35804, 476, 6186, 75, 1973, 72, 4445, 27569, 1026, 4023, 72, 3501, 50017, 3057, 9259, 30469, 1974, 72, 43754, 51794], "temperature": 0.0, "avg_logprob": -0.2523506721564099, "compression_ratio": 1.5523012552301256, "no_speech_prob": 0.052581787109375, "words": null}, {"id": 87, "seek": 44108, "start": 413.2, "end": 418.15999999999997, "text": " forma di funzioni invocabili all'interno degli strumenti software che i programmatori", "tokens": [50364, 8366, 1026, 49345, 15273, 1048, 905, 455, 2312, 439, 6, 5106, 1771, 32079, 1056, 2206, 72, 4722, 947, 741, 1461, 15677, 7386, 50612], "temperature": 0.0, "avg_logprob": -0.20966569767441862, "compression_ratio": 1.7193675889328064, "no_speech_prob": 0.03961181640625, "words": null}, {"id": 88, "seek": 44108, "start": 418.15999999999997, "end": 419.56, "text": " solitamente utilizzano.", "tokens": [50612, 1404, 270, 3439, 40355, 3730, 13, 50682], "temperature": 0.0, "avg_logprob": -0.20966569767441862, "compression_ratio": 1.7193675889328064, "no_speech_prob": 0.03961181640625, "words": null}, {"id": 89, "seek": 44108, "start": 419.56, "end": 425.08, "text": " Quindi l'idea di fondo della ricerca \u00e8 che se si riescono a migliorare le performance", "tokens": [50682, 32534, 287, 6, 482, 64, 1026, 38101, 11618, 21040, 36127, 4873, 947, 369, 1511, 23932, 45846, 257, 6186, 75, 1973, 543, 476, 3389, 50958], "temperature": 0.0, "avg_logprob": -0.20966569767441862, "compression_ratio": 1.7193675889328064, "no_speech_prob": 0.03961181640625, "words": null}, {"id": 90, "seek": 44108, "start": 425.08, "end": 430.8, "text": " di tali funzioni, sostituendole poi all'interno dei linguaggi, dei compilatori e dei chip,", "tokens": [50958, 1026, 4023, 72, 49345, 15273, 11, 41585, 6380, 521, 4812, 19260, 439, 6, 5106, 1771, 13874, 21766, 46893, 11, 13874, 715, 388, 39842, 308, 13874, 11409, 11, 51244], "temperature": 0.0, "avg_logprob": -0.20966569767441862, "compression_ratio": 1.7193675889328064, "no_speech_prob": 0.03961181640625, "words": null}, {"id": 91, "seek": 44108, "start": 430.8, "end": 436.84, "text": " il beneficio che ne deriva \u00e8 enorme e viene propagato in maniera relativamente facile e", "tokens": [51244, 1930, 10304, 1004, 947, 408, 1163, 5931, 4873, 33648, 308, 19561, 12425, 2513, 294, 587, 10609, 21960, 3439, 23670, 308, 51546], "temperature": 0.0, "avg_logprob": -0.20966569767441862, "compression_ratio": 1.7193675889328064, "no_speech_prob": 0.03961181640625, "words": null}, {"id": 92, "seek": 44108, "start": 436.84, "end": 441.08, "text": " trasparente al software realizzato tramite tali strumenti.", "tokens": [51546, 504, 9375, 1898, 68, 419, 4722, 957, 8072, 2513, 25749, 642, 4023, 72, 1056, 2206, 72, 13, 51758], "temperature": 0.0, "avg_logprob": -0.20966569767441862, "compression_ratio": 1.7193675889328064, "no_speech_prob": 0.03961181640625, "words": null}, {"id": 93, "seek": 46956, "start": 441.52, "end": 445.24, "text": " I ricercatori lavorano sempre a nuovi algoritmi di base.", "tokens": [50386, 286, 21040, 2869, 39842, 29241, 3730, 9553, 257, 37802, 4917, 3501, 50017, 3057, 1026, 3096, 13, 50572], "temperature": 0.0, "avg_logprob": -0.21863073110580444, "compression_ratio": 1.6618181818181819, "no_speech_prob": 0.02001953125, "words": null}, {"id": 94, "seek": 46956, "start": 445.24, "end": 450.4, "text": " Migliorare infatti le performance di questi porta chiaramente ricadute positive a tutti", "tokens": [50572, 18951, 75, 1973, 543, 1536, 21515, 476, 3389, 1026, 29729, 28598, 47454, 3439, 21040, 345, 1169, 3353, 257, 19822, 50830], "temperature": 0.0, "avg_logprob": -0.21863073110580444, "compression_ratio": 1.6618181818181819, "no_speech_prob": 0.02001953125, "words": null}, {"id": 95, "seek": 46956, "start": 450.4, "end": 451.4, "text": " i livelli.", "tokens": [50830, 741, 1621, 16320, 13, 50880], "temperature": 0.0, "avg_logprob": -0.21863073110580444, "compression_ratio": 1.6618181818181819, "no_speech_prob": 0.02001953125, "words": null}, {"id": 96, "seek": 46956, "start": 451.4, "end": 457.56, "text": " Ora ci sarebbe tanto da dire su questo argomento, sul concetto di efficienza, sulle caratteristiche", "tokens": [50880, 43672, 6983, 38706, 39042, 10331, 1120, 1264, 459, 10263, 3882, 298, 15467, 11, 17603, 1588, 23778, 1026, 4703, 42331, 11, 459, 2447, 1032, 1161, 468, 9304, 51188], "temperature": 0.0, "avg_logprob": -0.21863073110580444, "compression_ratio": 1.6618181818181819, "no_speech_prob": 0.02001953125, "words": null}, {"id": 97, "seek": 46956, "start": 457.56, "end": 462.71999999999997, "text": " dei algoritmi eccetera, ma per quello che ci interessa oggi accontentiamoci di tenere", "tokens": [51188, 13874, 3501, 50017, 3057, 29613, 20269, 11, 463, 680, 22813, 947, 6983, 728, 8391, 34768, 1317, 896, 317, 7415, 537, 1026, 2064, 323, 51446], "temperature": 0.0, "avg_logprob": -0.21863073110580444, "compression_ratio": 1.6618181818181819, "no_speech_prob": 0.02001953125, "words": null}, {"id": 98, "seek": 46956, "start": 462.71999999999997, "end": 464.08, "text": " a mente questo fatto.", "tokens": [51446, 257, 26577, 10263, 23228, 13, 51514], "temperature": 0.0, "avg_logprob": -0.21863073110580444, "compression_ratio": 1.6618181818181819, "no_speech_prob": 0.02001953125, "words": null}, {"id": 99, "seek": 46956, "start": 464.08, "end": 469.56, "text": " Un algoritmo pi\u00f9 performante consuma meno risorse, quindi pu\u00f2 essere eseguito su processori", "tokens": [51514, 1156, 3501, 50017, 3280, 10589, 2042, 2879, 3978, 64, 40236, 2253, 18699, 11, 15727, 26526, 19799, 785, 1146, 22703, 459, 1399, 7386, 51788], "temperature": 0.0, "avg_logprob": -0.21863073110580444, "compression_ratio": 1.6618181818181819, "no_speech_prob": 0.02001953125, "words": null}, {"id": 100, "seek": 48728, "start": 469.56, "end": 474.56, "text": " meno potenti, spreca meno energia e fa il suo lavoro in meno tempo.", "tokens": [50364, 40236, 1847, 23012, 11, 22269, 496, 40236, 29469, 308, 2050, 1930, 34197, 42060, 294, 40236, 8972, 13, 50614], "temperature": 0.0, "avg_logprob": -0.23921130544372968, "compression_ratio": 1.440217391304348, "no_speech_prob": 0.03460693359375, "words": null}, {"id": 101, "seek": 48728, "start": 474.56, "end": 478.6, "text": " Da tutto questo derivano tutta una serie di vantaggi tecnici.", "tokens": [50614, 3933, 23048, 10263, 10151, 3730, 3672, 1328, 2002, 23030, 1026, 371, 394, 46893, 535, 66, 7692, 72, 13, 50816], "temperature": 0.0, "avg_logprob": -0.23921130544372968, "compression_ratio": 1.440217391304348, "no_speech_prob": 0.03460693359375, "words": null}, {"id": 102, "seek": 48728, "start": 478.6, "end": 483.92, "text": " In pratica, migliorare gli algoritmi di base incrementa di molto la qualit\u00e0 del software", "tokens": [50816, 682, 28844, 2262, 11, 6186, 75, 1973, 543, 17161, 3501, 50017, 3057, 1026, 3096, 26200, 64, 1026, 16394, 635, 4101, 12445, 1103, 4722, 51082], "temperature": 0.0, "avg_logprob": -0.23921130544372968, "compression_ratio": 1.440217391304348, "no_speech_prob": 0.03460693359375, "words": null}, {"id": 103, "seek": 48728, "start": 483.92, "end": 487.28, "text": " sovrastante rendendolo pi\u00f9 leggero e veloce.", "tokens": [51082, 370, 85, 4148, 2879, 6125, 521, 7902, 10589, 1676, 1321, 78, 308, 1241, 752, 384, 13, 51250], "temperature": 0.0, "avg_logprob": -0.23921130544372968, "compression_ratio": 1.440217391304348, "no_speech_prob": 0.03460693359375, "words": null}, {"id": 104, "seek": 51244, "start": 487.28000000000003, "end": 500.6, "text": " Adesso la seconda nozione da tenere a mente riguarda invece il linguaggio Assembly.", "tokens": [50364, 1999, 5557, 635, 1150, 64, 572, 19706, 1120, 2064, 323, 257, 26577, 8329, 16981, 64, 36344, 1930, 21766, 30763, 20399, 13, 51030], "temperature": 0.0, "avg_logprob": -0.2643045741067806, "compression_ratio": 1.5120481927710843, "no_speech_prob": 0.029754638671875, "words": null}, {"id": 105, "seek": 51244, "start": 500.6, "end": 507.20000000000005, "text": " Anche qui, senza essere tecnici che tanto non ci serve, Assembly \u00e8 un linguaggio molto", "tokens": [51030, 1107, 1876, 1956, 11, 36208, 19799, 535, 66, 7692, 72, 947, 10331, 2107, 6983, 4596, 11, 20399, 4873, 517, 21766, 30763, 16394, 51360], "temperature": 0.0, "avg_logprob": -0.2643045741067806, "compression_ratio": 1.5120481927710843, "no_speech_prob": 0.029754638671875, "words": null}, {"id": 106, "seek": 51244, "start": 507.20000000000005, "end": 512.44, "text": " simile alle istruzioni che si utilizzano normalmente per istruire i processori.", "tokens": [51360, 1034, 794, 5430, 1418, 894, 89, 15273, 947, 1511, 40355, 3730, 38217, 680, 1418, 894, 621, 741, 1399, 7386, 13, 51622], "temperature": 0.0, "avg_logprob": -0.2643045741067806, "compression_ratio": 1.5120481927710843, "no_speech_prob": 0.029754638671875, "words": null}, {"id": 107, "seek": 53712, "start": 512.6800000000001, "end": 519.0, "text": " Diciamo che \u00e8 quasi la lingua nella quale si pu\u00f2 dialogare direttamente con una CPU.", "tokens": [50376, 413, 299, 7415, 947, 4873, 20954, 635, 22949, 4398, 23878, 421, 1220, 1511, 26526, 19308, 543, 1264, 6319, 3439, 416, 2002, 13199, 13, 50692], "temperature": 0.0, "avg_logprob": -0.26757813058793545, "compression_ratio": 1.5387931034482758, "no_speech_prob": 0.1558837890625, "words": null}, {"id": 108, "seek": 53712, "start": 519.0, "end": 523.6, "text": " Naturalmente, nella frase che ho appena detto, quel quasi \u00e8 molto importante.", "tokens": [50692, 20137, 4082, 11, 23878, 38406, 947, 1106, 724, 4118, 41031, 11, 7178, 20954, 4873, 16394, 9416, 13, 50922], "temperature": 0.0, "avg_logprob": -0.26757813058793545, "compression_ratio": 1.5387931034482758, "no_speech_prob": 0.1558837890625, "words": null}, {"id": 109, "seek": 53712, "start": 523.6, "end": 530.8800000000001, "text": " Infatti, questo linguaggio, come tutti i linguaggi, \u00e8 una strazione, cio\u00e8 ha lo scopo di permettere", "tokens": [50922, 11537, 21515, 11, 10263, 21766, 30763, 11, 808, 19822, 741, 21766, 46893, 11, 4873, 2002, 2148, 19706, 11, 41827, 324, 450, 795, 404, 78, 1026, 21540, 323, 51286], "temperature": 0.0, "avg_logprob": -0.26757813058793545, "compression_ratio": 1.5387931034482758, "no_speech_prob": 0.1558837890625, "words": null}, {"id": 110, "seek": 53712, "start": 530.8800000000001, "end": 537.12, "text": " ai programmatori di ignorare le peculiarit\u00e0 dei singoli processori che possono differire", "tokens": [51286, 9783, 1461, 15677, 7386, 1026, 14698, 543, 476, 27149, 12445, 13874, 1522, 9384, 1399, 7386, 947, 43857, 743, 621, 51598], "temperature": 0.0, "avg_logprob": -0.26757813058793545, "compression_ratio": 1.5387931034482758, "no_speech_prob": 0.1558837890625, "words": null}, {"id": 111, "seek": 56240, "start": 537.12, "end": 539.5600000000001, "text": " a seconda di tipo, modello, marca.", "tokens": [50364, 257, 1150, 64, 1026, 9746, 11, 1072, 11216, 11, 30582, 13, 50486], "temperature": 0.0, "avg_logprob": -0.24460227557203987, "compression_ratio": 1.5844155844155845, "no_speech_prob": 0.54541015625, "words": null}, {"id": 112, "seek": 56240, "start": 539.5600000000001, "end": 545.96, "text": " Ma siccome si tratta di un set di istruzioni molto complesse da combinare insieme direttamente", "tokens": [50486, 4042, 33579, 1102, 1511, 504, 18405, 1026, 517, 992, 1026, 1418, 894, 89, 15273, 16394, 1209, 7357, 1120, 38514, 543, 1028, 44940, 1264, 6319, 3439, 50806], "temperature": 0.0, "avg_logprob": -0.24460227557203987, "compression_ratio": 1.5844155844155845, "no_speech_prob": 0.54541015625, "words": null}, {"id": 113, "seek": 56240, "start": 545.96, "end": 553.72, "text": " per ottenere ci\u00f2 che si desidera, la programmazione, in pratica, si svolge utilizzando altri linguaggi", "tokens": [50806, 680, 4337, 1147, 323, 6983, 4293, 947, 1511, 730, 1438, 64, 11, 635, 37648, 12928, 11, 294, 28844, 2262, 11, 1511, 262, 9646, 432, 40355, 1806, 33707, 21766, 46893, 51194], "temperature": 0.0, "avg_logprob": -0.24460227557203987, "compression_ratio": 1.5844155844155845, "no_speech_prob": 0.54541015625, "words": null}, {"id": 114, "seek": 56240, "start": 553.72, "end": 559.12, "text": " definiti comunemente ad alto livello, che sono a loro volta astrazioni di Assembly", "tokens": [51194, 1561, 8707, 11040, 16288, 614, 21275, 1621, 1913, 11, 947, 9259, 257, 28810, 18765, 5357, 30695, 15273, 1026, 20399, 51464], "temperature": 0.0, "avg_logprob": -0.24460227557203987, "compression_ratio": 1.5844155844155845, "no_speech_prob": 0.54541015625, "words": null}, {"id": 115, "seek": 56240, "start": 559.12, "end": 562.4, "text": " e sono pi\u00f9 semplici da utilizzare per noi umani.", "tokens": [51464, 308, 9259, 10589, 4361, 4770, 72, 1120, 40355, 543, 680, 22447, 1105, 3782, 13, 51628], "temperature": 0.0, "avg_logprob": -0.24460227557203987, "compression_ratio": 1.5844155844155845, "no_speech_prob": 0.54541015625, "words": null}, {"id": 116, "seek": 59220, "start": 562.84, "end": 568.8, "text": " Tali linguaggi vengono poi tradotti in codice Assembly e questo codice viene a sua volta", "tokens": [50386, 314, 5103, 21766, 46893, 371, 1501, 8957, 19260, 2479, 37514, 294, 17656, 573, 20399, 308, 10263, 17656, 573, 19561, 257, 8233, 18765, 50684], "temperature": 0.0, "avg_logprob": -0.24370336032180645, "compression_ratio": 1.578358208955224, "no_speech_prob": 0.02593994140625, "words": null}, {"id": 117, "seek": 59220, "start": 568.8, "end": 574.16, "text": " tradotto nelle istruzioni proprie dello specifico processore prima di dargliele in pasto.", "tokens": [50684, 2479, 18838, 46350, 1418, 894, 89, 15273, 447, 1424, 414, 368, 1913, 2685, 78, 1399, 418, 19507, 1026, 4072, 7191, 1187, 68, 294, 1791, 78, 13, 50952], "temperature": 0.0, "avg_logprob": -0.24370336032180645, "compression_ratio": 1.578358208955224, "no_speech_prob": 0.02593994140625, "words": null}, {"id": 118, "seek": 59220, "start": 574.16, "end": 577.84, "text": " Ok, so che sembra complicato, ma non lo \u00e8.", "tokens": [50952, 3477, 11, 370, 947, 20775, 424, 16060, 2513, 11, 463, 2107, 450, 4873, 13, 51136], "temperature": 0.0, "avg_logprob": -0.24370336032180645, "compression_ratio": 1.578358208955224, "no_speech_prob": 0.02593994140625, "words": null}, {"id": 119, "seek": 59220, "start": 577.84, "end": 580.3199999999999, "text": " Prova a seguirmi sul ragionamento.", "tokens": [51136, 1705, 2757, 257, 18584, 3057, 17603, 17539, 313, 8824, 13, 51260], "temperature": 0.0, "avg_logprob": -0.24370336032180645, "compression_ratio": 1.578358208955224, "no_speech_prob": 0.02593994140625, "words": null}, {"id": 120, "seek": 59220, "start": 580.3199999999999, "end": 585.0, "text": " Hai mai visto un esempio di codice sorgente di un qualsiasi software?", "tokens": [51260, 24055, 12698, 17558, 517, 33627, 1026, 17656, 573, 262, 4646, 1576, 1026, 517, 421, 1124, 4609, 72, 4722, 30, 51494], "temperature": 0.0, "avg_logprob": -0.24370336032180645, "compression_ratio": 1.578358208955224, "no_speech_prob": 0.02593994140625, "words": null}, {"id": 121, "seek": 59220, "start": 585.0, "end": 592.1999999999999, "text": " Avrai notato che, a prescindere dal linguaggio in cui era scritto, la sintassi, pur non essendo", "tokens": [51494, 11667, 34554, 406, 2513, 947, 11, 257, 1183, 66, 471, 323, 11702, 21766, 30763, 294, 22929, 4249, 5918, 34924, 11, 635, 41259, 640, 72, 11, 1864, 2107, 2097, 3999, 51854], "temperature": 0.0, "avg_logprob": -0.24370336032180645, "compression_ratio": 1.578358208955224, "no_speech_prob": 0.02593994140625, "words": null}, {"id": 122, "seek": 61888, "start": 592.6800000000001, "end": 596.8000000000001, "text": " una lingua corrente, ha qualcosa di simile all'inglese?", "tokens": [50388, 2002, 22949, 4398, 1181, 14772, 11, 324, 42400, 1026, 1034, 794, 439, 6, 278, 904, 68, 30, 50594], "temperature": 0.0, "avg_logprob": -0.2254273550123231, "compression_ratio": 1.6125, "no_speech_prob": 0.005382537841796875, "words": null}, {"id": 123, "seek": 61888, "start": 596.8000000000001, "end": 603.96, "text": " Magari una funzione inizia con la parola function o una variabile definita con var o una condizione", "tokens": [50594, 6395, 3504, 2002, 1019, 19706, 294, 590, 654, 416, 635, 971, 4711, 2445, 277, 2002, 3034, 33288, 1561, 2786, 416, 1374, 277, 2002, 2224, 35740, 50952], "temperature": 0.0, "avg_logprob": -0.2254273550123231, "compression_ratio": 1.6125, "no_speech_prob": 0.005382537841796875, "words": null}, {"id": 124, "seek": 61888, "start": 603.96, "end": 604.96, "text": " con if?", "tokens": [50952, 416, 498, 30, 51002], "temperature": 0.0, "avg_logprob": -0.2254273550123231, "compression_ratio": 1.6125, "no_speech_prob": 0.005382537841796875, "words": null}, {"id": 125, "seek": 61888, "start": 604.96, "end": 608.0400000000001, "text": " Ecco, questo \u00e8 un linguaggio ad alto livello.", "tokens": [51002, 28993, 1291, 11, 10263, 4873, 517, 21766, 30763, 614, 21275, 1621, 1913, 13, 51156], "temperature": 0.0, "avg_logprob": -0.2254273550123231, "compression_ratio": 1.6125, "no_speech_prob": 0.005382537841796875, "words": null}, {"id": 126, "seek": 61888, "start": 608.0400000000001, "end": 613.4000000000001, "text": " Quando un programma scritto in questo modo deve essere eseguito, lo si fa elaborare ad", "tokens": [51156, 18725, 517, 1461, 1696, 5918, 34924, 294, 10263, 16664, 17761, 19799, 785, 1146, 22703, 11, 450, 1511, 2050, 16298, 543, 614, 51424], "temperature": 0.0, "avg_logprob": -0.2254273550123231, "compression_ratio": 1.6125, "no_speech_prob": 0.005382537841796875, "words": null}, {"id": 127, "seek": 61888, "start": 613.4000000000001, "end": 618.88, "text": " un altro programma chiamato compilatore, che prende tutte le istruzioni scritte in questa", "tokens": [51424, 517, 40924, 1461, 1696, 417, 2918, 2513, 715, 388, 43148, 11, 947, 9866, 68, 38632, 476, 1418, 894, 89, 15273, 5918, 9786, 294, 16540, 51698], "temperature": 0.0, "avg_logprob": -0.2254273550123231, "compression_ratio": 1.6125, "no_speech_prob": 0.005382537841796875, "words": null}, {"id": 128, "seek": 64712, "start": 618.88, "end": 625.8, "text": " specie di inglese e le trasforma in istruzioni assembly, che risultano molto pi\u00f9 complesse.", "tokens": [50364, 1608, 414, 1026, 3957, 904, 68, 308, 476, 22507, 837, 64, 294, 1418, 894, 89, 15273, 12103, 11, 947, 2253, 723, 3730, 16394, 10589, 1209, 7357, 13, 50710], "temperature": 0.0, "avg_logprob": -0.18516240486009852, "compression_ratio": 1.6705882352941177, "no_speech_prob": 0.478759765625, "words": null}, {"id": 129, "seek": 64712, "start": 625.8, "end": 631.96, "text": " Tramite poi un secondo programma, chiamato assembler, il codice assembly viene trasformato", "tokens": [50710, 1765, 335, 642, 19260, 517, 41601, 1461, 1696, 11, 417, 2918, 2513, 8438, 1918, 11, 1930, 17656, 573, 12103, 19561, 22507, 837, 2513, 51018], "temperature": 0.0, "avg_logprob": -0.18516240486009852, "compression_ratio": 1.6705882352941177, "no_speech_prob": 0.478759765625, "words": null}, {"id": 130, "seek": 64712, "start": 631.96, "end": 637.88, "text": " nelle vere e proprie istruzioni per il processore, ancora pi\u00f9 complesse, e finalmente quest'ultimo", "tokens": [51018, 46350, 16443, 308, 447, 1424, 414, 1418, 894, 89, 15273, 680, 1930, 1399, 418, 11, 30656, 10589, 1209, 7357, 11, 308, 35577, 866, 6, 723, 6934, 51314], "temperature": 0.0, "avg_logprob": -0.18516240486009852, "compression_ratio": 1.6705882352941177, "no_speech_prob": 0.478759765625, "words": null}, {"id": 131, "seek": 64712, "start": 637.88, "end": 641.36, "text": " pu\u00f2 eseguire i comandi che gli sono stati impartiti.", "tokens": [51314, 26526, 785, 1146, 43612, 741, 395, 49460, 947, 17161, 9259, 2219, 72, 32177, 8707, 13, 51488], "temperature": 0.0, "avg_logprob": -0.18516240486009852, "compression_ratio": 1.6705882352941177, "no_speech_prob": 0.478759765625, "words": null}, {"id": 132, "seek": 64712, "start": 641.36, "end": 647.12, "text": " Se questi passaggi che ti ho descritto ti sono chiari, direi che per quello che dobbiamo", "tokens": [51488, 1100, 29729, 1320, 46893, 947, 8757, 1106, 7471, 18579, 78, 8757, 9259, 13228, 3504, 11, 1264, 72, 947, 680, 22813, 947, 360, 6692, 7415, 51776], "temperature": 0.0, "avg_logprob": -0.18516240486009852, "compression_ratio": 1.6705882352941177, "no_speech_prob": 0.478759765625, "words": null}, {"id": 133, "seek": 67480, "start": 647.12, "end": 649.16, "text": " affrontare oggi non ci serve altro.", "tokens": [50364, 2096, 10001, 543, 34768, 2107, 6983, 4596, 40924, 13, 50466], "temperature": 0.0, "avg_logprob": -0.2911005463937055, "compression_ratio": 1.4952380952380953, "no_speech_prob": 0.05181884765625, "words": null}, {"id": 134, "seek": 67480, "start": 649.16, "end": 660.76, "text": " Torniamo quindi all'argomento principale dell'episodio.", "tokens": [50466, 314, 1865, 7415, 15727, 439, 6, 289, 30851, 15467, 6959, 1220, 19781, 6, 595, 271, 378, 1004, 13, 51046], "temperature": 0.0, "avg_logprob": -0.2911005463937055, "compression_ratio": 1.4952380952380953, "no_speech_prob": 0.05181884765625, "words": null}, {"id": 135, "seek": 67480, "start": 660.76, "end": 666.6, "text": " Abbiamo detto che un certo motore di machine learning ha inventato un nuovo algoritmo, ma", "tokens": [51046, 32673, 7415, 41031, 947, 517, 22261, 2184, 418, 1026, 3479, 2539, 324, 7962, 2513, 517, 49348, 3501, 50017, 3280, 11, 463, 51338], "temperature": 0.0, "avg_logprob": -0.2911005463937055, "compression_ratio": 1.4952380952380953, "no_speech_prob": 0.05181884765625, "words": null}, {"id": 136, "seek": 67480, "start": 666.6, "end": 670.2, "text": " com'\u00e8 possibile che un software inventi un altro software?", "tokens": [51338, 395, 6, 1462, 50184, 947, 517, 4722, 7962, 72, 517, 40924, 4722, 30, 51518], "temperature": 0.0, "avg_logprob": -0.2911005463937055, "compression_ratio": 1.4952380952380953, "no_speech_prob": 0.05181884765625, "words": null}, {"id": 137, "seek": 67480, "start": 670.2, "end": 674.8, "text": " Beh, in questo particolare caso tutto \u00e8 iniziato dal concetto di gioco.", "tokens": [51518, 13068, 11, 294, 10263, 1276, 43141, 9666, 23048, 4873, 294, 24300, 2513, 11702, 1588, 23778, 1026, 1735, 11198, 13, 51748], "temperature": 0.0, "avg_logprob": -0.2911005463937055, "compression_ratio": 1.4952380952380953, "no_speech_prob": 0.05181884765625, "words": null}, {"id": 138, "seek": 70408, "start": 675.48, "end": 681.08, "text": " Alphadev non \u00e8 il primo sistema messo a punto dal team di DeepMind, prima di esso infatti", "tokens": [50398, 967, 950, 762, 85, 2107, 4873, 1930, 38671, 13245, 2082, 78, 257, 14326, 11702, 1469, 1026, 14895, 44, 471, 11, 19507, 1026, 2097, 78, 1536, 21515, 50678], "temperature": 0.0, "avg_logprob": -0.22780797241822534, "compression_ratio": 1.6142322097378277, "no_speech_prob": 0.071533203125, "words": null}, {"id": 139, "seek": 70408, "start": 681.08, "end": 686.6400000000001, "text": " sono stati realizzati altri software di machine learning e alcuni di questi anche hanno fatto", "tokens": [50678, 9259, 2219, 72, 957, 8072, 6908, 33707, 4722, 1026, 3479, 2539, 308, 20005, 24307, 1026, 29729, 11585, 26595, 23228, 50956], "temperature": 0.0, "avg_logprob": -0.22780797241822534, "compression_ratio": 1.6142322097378277, "no_speech_prob": 0.071533203125, "words": null}, {"id": 140, "seek": 70408, "start": 686.6400000000001, "end": 687.6400000000001, "text": " notizia.", "tokens": [50956, 406, 590, 654, 13, 51006], "temperature": 0.0, "avg_logprob": -0.22780797241822534, "compression_ratio": 1.6142322097378277, "no_speech_prob": 0.071533203125, "words": null}, {"id": 141, "seek": 70408, "start": 687.6400000000001, "end": 693.8000000000001, "text": " C'\u00e8 stato ad esempio AlphaGo, che ha battuto il campione mondiale del gioco Go e che poi", "tokens": [51006, 383, 6, 1462, 29657, 614, 33627, 20588, 12104, 11, 947, 324, 9591, 8262, 1930, 2255, 5328, 17606, 25051, 1103, 1735, 11198, 1037, 308, 947, 19260, 51314], "temperature": 0.0, "avg_logprob": -0.22780797241822534, "compression_ratio": 1.6142322097378277, "no_speech_prob": 0.071533203125, "words": null}, {"id": 142, "seek": 70408, "start": 693.8000000000001, "end": 700.72, "text": " si \u00e8 evoluto in AlphaZero, che \u00e8 in grado di giocare a Go, a scacchi e persino a Shoji,", "tokens": [51314, 1511, 4873, 1073, 2308, 78, 294, 20588, 57, 2032, 11, 947, 4873, 294, 677, 1573, 1026, 48508, 5685, 257, 1037, 11, 257, 795, 326, 8036, 308, 868, 2982, 257, 31404, 4013, 11, 51660], "temperature": 0.0, "avg_logprob": -0.22780797241822534, "compression_ratio": 1.6142322097378277, "no_speech_prob": 0.071533203125, "words": null}, {"id": 143, "seek": 70408, "start": 700.72, "end": 704.08, "text": " quel gioco che a volte viene chiamato scacchi giapponesi.", "tokens": [51660, 7178, 1735, 11198, 947, 257, 37801, 19561, 417, 2918, 2513, 795, 326, 8036, 39689, 427, 2213, 72, 13, 51828], "temperature": 0.0, "avg_logprob": -0.22780797241822534, "compression_ratio": 1.6142322097378277, "no_speech_prob": 0.071533203125, "words": null}, {"id": 144, "seek": 73032, "start": 704.36, "end": 710.32, "text": " Poi c'\u00e8 stato Alphastar, che ha sconfitto i migliori giocatori mondiali del famoso videogame", "tokens": [50378, 430, 4869, 269, 6, 1462, 29657, 967, 950, 525, 289, 11, 947, 324, 795, 266, 69, 34924, 741, 6186, 75, 1973, 72, 1735, 905, 39842, 17606, 831, 72, 1103, 49526, 46801, 529, 50676], "temperature": 0.0, "avg_logprob": -0.23658854141831398, "compression_ratio": 1.4841269841269842, "no_speech_prob": 0.0003101825714111328, "words": null}, {"id": 145, "seek": 73032, "start": 710.32, "end": 712.88, "text": " Starcraft 2 della Blizzard.", "tokens": [50676, 5705, 5611, 568, 11618, 40976, 13, 50804], "temperature": 0.0, "avg_logprob": -0.23658854141831398, "compression_ratio": 1.4841269841269842, "no_speech_prob": 0.0003101825714111328, "words": null}, {"id": 146, "seek": 73032, "start": 712.88, "end": 719.0400000000001, "text": " Insomma, Alphadev ha a tutti gli effetti degli antenati illustri, ma questi sembrano essere", "tokens": [50804, 9442, 30243, 11, 967, 950, 762, 85, 324, 257, 19822, 17161, 1244, 12495, 32079, 18858, 6908, 8490, 470, 11, 463, 29729, 4361, 1443, 3730, 19799, 51112], "temperature": 0.0, "avg_logprob": -0.23658854141831398, "compression_ratio": 1.4841269841269842, "no_speech_prob": 0.0003101825714111328, "words": null}, {"id": 147, "seek": 73032, "start": 719.0400000000001, "end": 723.6, "text": " specializzati nell'ambito del gioco e in realt\u00e0 ci\u00f2 non \u00e8 un caso.", "tokens": [51112, 2121, 8072, 6908, 44666, 6, 2173, 3528, 1103, 1735, 11198, 308, 294, 47512, 6983, 4293, 2107, 4873, 517, 9666, 13, 51340], "temperature": 0.0, "avg_logprob": -0.23658854141831398, "compression_ratio": 1.4841269841269842, "no_speech_prob": 0.0003101825714111328, "words": null}, {"id": 148, "seek": 73032, "start": 723.6, "end": 730.32, "text": " I giochi che presentano tante possibili scelte per ogni mossa infatti, come ad esempio gli", "tokens": [51340, 286, 48508, 8036, 947, 1974, 3730, 256, 2879, 1402, 897, 2312, 795, 338, 975, 680, 33189, 275, 9978, 1536, 21515, 11, 808, 614, 33627, 17161, 51676], "temperature": 0.0, "avg_logprob": -0.23658854141831398, "compression_ratio": 1.4841269841269842, "no_speech_prob": 0.0003101825714111328, "words": null}, {"id": 149, "seek": 75980, "start": 730.32, "end": 736.88, "text": " scacchi o i videogame di strategia in tempo reale, si prestano molto bene all'impiego", "tokens": [50364, 795, 326, 8036, 277, 741, 46801, 529, 1026, 5464, 654, 294, 8972, 957, 68, 11, 1511, 16305, 3730, 16394, 2537, 439, 6, 8814, 12200, 50692], "temperature": 0.0, "avg_logprob": -0.21008523133668033, "compression_ratio": 1.6794871794871795, "no_speech_prob": 0.67724609375, "words": null}, {"id": 150, "seek": 75980, "start": 736.88, "end": 742.84, "text": " di una particolare tecnica di machine learning chiamata reinforcement learning.", "tokens": [50692, 1026, 2002, 1276, 43141, 20105, 2262, 1026, 3479, 2539, 417, 2918, 3274, 29280, 2539, 13, 50990], "temperature": 0.0, "avg_logprob": -0.21008523133668033, "compression_ratio": 1.6794871794871795, "no_speech_prob": 0.67724609375, "words": null}, {"id": 151, "seek": 75980, "start": 742.84, "end": 748.5600000000001, "text": " Il reinforcement learning funziona pi\u00f9 o meno in questo modo, si istruisce un'intelligenza", "tokens": [50990, 4416, 29280, 2539, 49345, 21758, 10589, 277, 40236, 294, 10263, 16664, 11, 1511, 1418, 894, 49596, 517, 6, 20761, 3213, 2394, 51276], "temperature": 0.0, "avg_logprob": -0.21008523133668033, "compression_ratio": 1.6794871794871795, "no_speech_prob": 0.67724609375, "words": null}, {"id": 152, "seek": 75980, "start": 748.5600000000001, "end": 755.7600000000001, "text": " artificiale per farle tentare di conseguire un dato obiettivo e la si premia se riesce", "tokens": [51276, 11677, 68, 680, 1400, 306, 7054, 543, 1026, 12706, 621, 517, 46971, 1111, 1684, 83, 6340, 308, 635, 1511, 5624, 654, 369, 23932, 384, 51636], "temperature": 0.0, "avg_logprob": -0.21008523133668033, "compression_ratio": 1.6794871794871795, "no_speech_prob": 0.67724609375, "words": null}, {"id": 153, "seek": 75980, "start": 755.7600000000001, "end": 759.8000000000001, "text": " nell'intento oppure la si penalizza se fallisce.", "tokens": [51636, 44666, 6, 686, 15467, 1458, 540, 635, 1511, 13661, 7176, 369, 2100, 49596, 13, 51838], "temperature": 0.0, "avg_logprob": -0.21008523133668033, "compression_ratio": 1.6794871794871795, "no_speech_prob": 0.67724609375, "words": null}, {"id": 154, "seek": 78808, "start": 760.2800000000001, "end": 765.2400000000001, "text": " Nel nostro caso specifico, rapportando il tutto alla dimensione del gioco, si fa giocare", "tokens": [50388, 426, 338, 35779, 9666, 2685, 78, 11, 18018, 1806, 1930, 23048, 11591, 10139, 68, 1103, 1735, 11198, 11, 1511, 2050, 48508, 5685, 50636], "temperature": 0.0, "avg_logprob": -0.20275000619888306, "compression_ratio": 1.639676113360324, "no_speech_prob": 0.0007915496826171875, "words": null}, {"id": 155, "seek": 78808, "start": 765.2400000000001, "end": 772.4000000000001, "text": " la I al gioco designato e ad ogni mossa la si premia se la mossa scelta la avvicina alla", "tokens": [50636, 635, 286, 419, 1735, 11198, 1715, 2513, 308, 614, 33189, 275, 9978, 635, 1511, 5624, 654, 369, 635, 275, 9978, 795, 338, 1328, 635, 1305, 25537, 1426, 11591, 50994], "temperature": 0.0, "avg_logprob": -0.20275000619888306, "compression_ratio": 1.639676113360324, "no_speech_prob": 0.0007915496826171875, "words": null}, {"id": 156, "seek": 78808, "start": 772.4000000000001, "end": 775.32, "text": " vittoria o la si penalizza in caso contrario.", "tokens": [50994, 371, 593, 8172, 277, 635, 1511, 13661, 7176, 294, 9666, 47642, 13, 51140], "temperature": 0.0, "avg_logprob": -0.20275000619888306, "compression_ratio": 1.639676113360324, "no_speech_prob": 0.0007915496826171875, "words": null}, {"id": 157, "seek": 78808, "start": 775.32, "end": 781.2400000000001, "text": " Ad ogni operazione, in questo modo, l'algoritmo memorizza se la sua scelta \u00e8 stata buona", "tokens": [51140, 1999, 33189, 2208, 12928, 11, 294, 10263, 16664, 11, 287, 6, 20422, 50017, 3280, 10560, 7176, 369, 635, 8233, 795, 338, 1328, 4873, 49554, 758, 4037, 51436], "temperature": 0.0, "avg_logprob": -0.20275000619888306, "compression_ratio": 1.639676113360324, "no_speech_prob": 0.0007915496826171875, "words": null}, {"id": 158, "seek": 78808, "start": 781.2400000000001, "end": 788.08, "text": " o meno e, giocando miliardi di partite, impara come comportarsi nelle pi\u00f9 varie situazioni", "tokens": [51436, 277, 40236, 308, 11, 1735, 905, 1806, 1962, 72, 38126, 1026, 644, 642, 11, 704, 2419, 808, 25883, 32742, 46350, 10589, 1374, 414, 2054, 27569, 51778], "temperature": 0.0, "avg_logprob": -0.20275000619888306, "compression_ratio": 1.639676113360324, "no_speech_prob": 0.0007915496826171875, "words": null}, {"id": 159, "seek": 81664, "start": 788.08, "end": 789.08, "text": " del gioco.", "tokens": [50364, 1103, 1735, 11198, 13, 50414], "temperature": 0.0, "avg_logprob": -0.20993304007819721, "compression_ratio": 1.6496350364963503, "no_speech_prob": 0.296630859375, "words": null}, {"id": 160, "seek": 81664, "start": 789.08, "end": 795.12, "text": " Anche se all'apparenza questo potrebbe sembrare un compito semplice per una intelligenza artificiale,", "tokens": [50414, 1107, 1876, 369, 439, 6, 1746, 4484, 2394, 10263, 1847, 39487, 20775, 35559, 517, 715, 3528, 4361, 564, 573, 680, 2002, 4359, 3213, 2394, 11677, 68, 11, 50716], "temperature": 0.0, "avg_logprob": -0.20993304007819721, "compression_ratio": 1.6496350364963503, "no_speech_prob": 0.296630859375, "words": null}, {"id": 161, "seek": 81664, "start": 795.12, "end": 800.2800000000001, "text": " si tratta in realt\u00e0 di qualcosa di molto complesso perch\u00e9 una stessa mossa pu\u00f2 avere", "tokens": [50716, 1511, 504, 18405, 294, 47512, 1026, 42400, 1026, 16394, 1209, 5557, 14303, 2002, 342, 8391, 275, 9978, 26526, 37914, 50974], "temperature": 0.0, "avg_logprob": -0.20993304007819721, "compression_ratio": 1.6496350364963503, "no_speech_prob": 0.296630859375, "words": null}, {"id": 162, "seek": 81664, "start": 800.2800000000001, "end": 803.72, "text": " un valore diverso a seconda di tantissime altre condizioni.", "tokens": [50974, 517, 1323, 418, 18558, 539, 257, 1150, 64, 1026, 12095, 891, 1312, 34983, 2224, 590, 15273, 13, 51146], "temperature": 0.0, "avg_logprob": -0.20993304007819721, "compression_ratio": 1.6496350364963503, "no_speech_prob": 0.296630859375, "words": null}, {"id": 163, "seek": 81664, "start": 803.72, "end": 809.22, "text": " Se pensiamo ad esempio agli scacchi, muovere il re pu\u00f2 avere senso se ad esempio \u00e8 sotto", "tokens": [51146, 1100, 6099, 7415, 614, 33627, 623, 2081, 795, 326, 8036, 11, 2992, 5179, 323, 1930, 319, 26526, 37914, 3151, 539, 369, 614, 33627, 4873, 43754, 51421], "temperature": 0.0, "avg_logprob": -0.20993304007819721, "compression_ratio": 1.6496350364963503, "no_speech_prob": 0.296630859375, "words": null}, {"id": 164, "seek": 81664, "start": 809.22, "end": 815.6400000000001, "text": " scacco, ma ne ha molto meno se nel muoverlo lo esponiamo all'essere mangiato da un pezzo", "tokens": [51421, 795, 18662, 11, 463, 408, 324, 16394, 40236, 369, 15373, 2992, 3570, 752, 450, 7089, 266, 7415, 439, 6, 442, 323, 587, 7834, 2513, 1120, 517, 520, 35130, 51742], "temperature": 0.0, "avg_logprob": -0.20993304007819721, "compression_ratio": 1.6496350364963503, "no_speech_prob": 0.296630859375, "words": null}, {"id": 165, "seek": 81664, "start": 815.6400000000001, "end": 816.6400000000001, "text": " avversario.", "tokens": [51742, 1305, 840, 4912, 13, 51792], "temperature": 0.0, "avg_logprob": -0.20993304007819721, "compression_ratio": 1.6496350364963503, "no_speech_prob": 0.296630859375, "words": null}, {"id": 166, "seek": 84528, "start": 816.96, "end": 822.12, "text": " Si tratta di sviluppare una notevole capacit\u00e0 decisionale che fino ad un certo livello di", "tokens": [50380, 4909, 504, 18405, 1026, 17342, 388, 10504, 543, 2002, 3637, 3080, 306, 4637, 12445, 3537, 1220, 947, 42560, 614, 517, 22261, 1621, 1913, 1026, 50638], "temperature": 0.0, "avg_logprob": -0.17091181333342645, "compression_ratio": 1.6340579710144927, "no_speech_prob": 0.004467010498046875, "words": null}, {"id": 167, "seek": 84528, "start": 822.12, "end": 827.68, "text": " complessit\u00e0 per noi umani \u00e8 abbastanza naturale, ma non lo \u00e8 affatto per una macchina.", "tokens": [50638, 1209, 442, 12445, 680, 22447, 1105, 3782, 4873, 16903, 525, 20030, 40877, 11, 463, 2107, 450, 4873, 2096, 37491, 680, 2002, 7912, 339, 1426, 13, 50916], "temperature": 0.0, "avg_logprob": -0.17091181333342645, "compression_ratio": 1.6340579710144927, "no_speech_prob": 0.004467010498046875, "words": null}, {"id": 168, "seek": 84528, "start": 827.68, "end": 833.48, "text": " Immagina che il tuo obiettivo ad esempio sia andare a Roma, puoi prendere l'auto o comprare", "tokens": [50916, 17322, 559, 1426, 947, 1930, 45352, 1111, 1684, 83, 6340, 614, 33627, 25176, 42742, 257, 31892, 11, 2362, 4869, 9866, 323, 287, 6, 41988, 277, 715, 35559, 51206], "temperature": 0.0, "avg_logprob": -0.17091181333342645, "compression_ratio": 1.6340579710144927, "no_speech_prob": 0.004467010498046875, "words": null}, {"id": 169, "seek": 84528, "start": 833.48, "end": 839.16, "text": " un biglietto aereo, tanto per dirne una, ma la scelta giusta cambia in base a dove ti", "tokens": [51206, 517, 955, 75, 1684, 1353, 257, 323, 78, 11, 10331, 680, 4746, 716, 2002, 11, 463, 635, 795, 338, 1328, 1735, 28652, 18751, 654, 294, 3096, 257, 23287, 8757, 51490], "temperature": 0.0, "avg_logprob": -0.17091181333342645, "compression_ratio": 1.6340579710144927, "no_speech_prob": 0.004467010498046875, "words": null}, {"id": 170, "seek": 84528, "start": 839.16, "end": 845.28, "text": " trovi, a quanto traffico c'\u00e8, a quanto puoi spendere e a mille altri fattori, senza contare", "tokens": [51490, 4495, 4917, 11, 257, 17820, 21073, 2789, 269, 6, 1462, 11, 257, 17820, 2362, 4869, 3496, 323, 308, 257, 1728, 68, 33707, 283, 1591, 7386, 11, 36208, 660, 543, 51796], "temperature": 0.0, "avg_logprob": -0.17091181333342645, "compression_ratio": 1.6340579710144927, "no_speech_prob": 0.004467010498046875, "words": null}, {"id": 171, "seek": 87328, "start": 845.28, "end": 848.56, "text": " poi gli imprevisti, uno sciopero, un incidente e cos\u00ec via.", "tokens": [50364, 19260, 17161, 704, 40382, 45308, 11, 8526, 2180, 404, 2032, 11, 517, 9348, 68, 308, 23278, 5766, 13, 50528], "temperature": 0.0, "avg_logprob": -0.2266270661157025, "compression_ratio": 1.6, "no_speech_prob": 0.09942626953125, "words": null}, {"id": 172, "seek": 87328, "start": 848.56, "end": 854.3199999999999, "text": " Da umano te la caveresti facilmente in una situazione del genere, ma insegnare ad un", "tokens": [50528, 3933, 1105, 3730, 535, 635, 1335, 331, 21597, 10217, 4082, 294, 2002, 2054, 12928, 1103, 41553, 11, 463, 33874, 4568, 543, 614, 517, 50816], "temperature": 0.0, "avg_logprob": -0.2266270661157025, "compression_ratio": 1.6, "no_speech_prob": 0.09942626953125, "words": null}, {"id": 173, "seek": 87328, "start": 854.3199999999999, "end": 860.72, "text": " software come comportarsi efficientemente di fronte ad una molteplicit\u00e0 di casi diventa", "tokens": [50816, 4722, 808, 25883, 32742, 7148, 16288, 1026, 1868, 68, 614, 2002, 8015, 975, 4770, 12445, 1026, 22567, 3414, 8938, 51136], "temperature": 0.0, "avg_logprob": -0.2266270661157025, "compression_ratio": 1.6, "no_speech_prob": 0.09942626953125, "words": null}, {"id": 174, "seek": 87328, "start": 860.72, "end": 862.4399999999999, "text": " estremamente complesso.", "tokens": [51136, 871, 2579, 3439, 1209, 5557, 13, 51222], "temperature": 0.0, "avg_logprob": -0.2266270661157025, "compression_ratio": 1.6, "no_speech_prob": 0.09942626953125, "words": null}, {"id": 175, "seek": 87328, "start": 862.4399999999999, "end": 867.76, "text": " I giochi sono quindi un ambiente perfetto per questo tipo di machine learning, perch\u00e9", "tokens": [51222, 286, 48508, 8036, 9259, 15727, 517, 34957, 13826, 23778, 680, 10263, 9746, 1026, 3479, 2539, 11, 14303, 51488], "temperature": 0.0, "avg_logprob": -0.2266270661157025, "compression_ratio": 1.6, "no_speech_prob": 0.09942626953125, "words": null}, {"id": 176, "seek": 87328, "start": 867.76, "end": 873.28, "text": " seppur presentino un alto grado di incertezza hanno comunque un set di regole limitato.", "tokens": [51488, 369, 427, 374, 1974, 2982, 517, 21275, 677, 1573, 1026, 834, 911, 4371, 2394, 26595, 45736, 517, 992, 1026, 1121, 4812, 4948, 2513, 13, 51764], "temperature": 0.0, "avg_logprob": -0.2266270661157025, "compression_ratio": 1.6, "no_speech_prob": 0.09942626953125, "words": null}, {"id": 177, "seek": 90064, "start": 873.28, "end": 879.68, "text": " \u00c8 relativamente facile capire chi vince e chi perde e di norma non si verificano eventi", "tokens": [50364, 34495, 21960, 3439, 23670, 1410, 621, 13228, 371, 1236, 308, 13228, 44182, 308, 1026, 2026, 64, 2107, 1511, 1306, 1089, 3730, 2280, 72, 50684], "temperature": 0.0, "avg_logprob": -0.19787177250816904, "compression_ratio": 1.5573770491803278, "no_speech_prob": 0.049560546875, "words": null}, {"id": 178, "seek": 90064, "start": 879.68, "end": 880.68, "text": " imprevisti.", "tokens": [50684, 704, 40382, 45308, 13, 50734], "temperature": 0.0, "avg_logprob": -0.19787177250816904, "compression_ratio": 1.5573770491803278, "no_speech_prob": 0.049560546875, "words": null}, {"id": 179, "seek": 90064, "start": 880.68, "end": 888.4, "text": " Ovviamente in quest'ottica l'obiettivo principale della IA \u00e8 vincere la partita e per far s\u00ec", "tokens": [50734, 50005, 23347, 294, 866, 6, 1521, 2262, 287, 6, 996, 1684, 83, 6340, 6959, 1220, 11618, 286, 32, 4873, 371, 4647, 323, 635, 644, 2786, 308, 680, 1400, 49267, 51120], "temperature": 0.0, "avg_logprob": -0.19787177250816904, "compression_ratio": 1.5573770491803278, "no_speech_prob": 0.049560546875, "words": null}, {"id": 180, "seek": 90064, "start": 888.4, "end": 894.04, "text": " che essa possa elaborare le informazioni, sia le ricompense che le penalit\u00e0 che le", "tokens": [51120, 947, 7208, 41564, 16298, 543, 476, 1356, 27569, 11, 25176, 476, 21040, 8586, 1288, 947, 476, 13661, 12445, 947, 476, 51402], "temperature": 0.0, "avg_logprob": -0.19787177250816904, "compression_ratio": 1.5573770491803278, "no_speech_prob": 0.049560546875, "words": null}, {"id": 181, "seek": 90064, "start": 894.04, "end": 899.64, "text": " probabilit\u00e0 di vittoria vengono espresse tramite tutta una serie di complesse funzioni", "tokens": [51402, 31959, 12445, 1026, 371, 593, 8172, 371, 1501, 8957, 7089, 22603, 25749, 642, 3672, 1328, 2002, 23030, 1026, 1209, 7357, 49345, 15273, 51682], "temperature": 0.0, "avg_logprob": -0.19787177250816904, "compression_ratio": 1.5573770491803278, "no_speech_prob": 0.049560546875, "words": null}, {"id": 182, "seek": 90064, "start": 899.64, "end": 900.64, "text": " matematiche.", "tokens": [51682, 3803, 8615, 9304, 13, 51732], "temperature": 0.0, "avg_logprob": -0.19787177250816904, "compression_ratio": 1.5573770491803278, "no_speech_prob": 0.049560546875, "words": null}, {"id": 183, "seek": 92698, "start": 900.64, "end": 913.1999999999999, "text": " Come abbiamo detto prima per\u00f2, Alphadev non ha avuto a che fare con un classico gioco", "tokens": [50364, 2492, 22815, 41031, 19507, 12673, 11, 967, 950, 762, 85, 2107, 324, 1305, 8262, 257, 947, 11994, 416, 517, 1508, 2789, 1735, 11198, 50992], "temperature": 0.0, "avg_logprob": -0.2549935665327249, "compression_ratio": 1.4883720930232558, "no_speech_prob": 0.017974853515625, "words": null}, {"id": 184, "seek": 92698, "start": 913.1999999999999, "end": 918.64, "text": " umano n\u00e9 con un videogame, esso ha dovuto lavorare su altri algoritmi che in linea", "tokens": [50992, 1105, 3730, 7024, 416, 517, 46801, 529, 11, 2097, 78, 324, 30870, 8262, 29241, 543, 459, 33707, 3501, 50017, 3057, 947, 294, 1622, 64, 51264], "temperature": 0.0, "avg_logprob": -0.2549935665327249, "compression_ratio": 1.4883720930232558, "no_speech_prob": 0.017974853515625, "words": null}, {"id": 185, "seek": 92698, "start": 918.64, "end": 921.84, "text": " di principio sono qualcosa di abbastanza diverso da un gioco.", "tokens": [51264, 1026, 34308, 9259, 42400, 1026, 16903, 525, 20030, 18558, 539, 1120, 517, 1735, 11198, 13, 51424], "temperature": 0.0, "avg_logprob": -0.2549935665327249, "compression_ratio": 1.4883720930232558, "no_speech_prob": 0.017974853515625, "words": null}, {"id": 186, "seek": 92698, "start": 921.84, "end": 926.98, "text": " Per questo motivo, per raggiungere il loro obiettivo, i programmatori di DeepMind hanno", "tokens": [51424, 3026, 10263, 35804, 11, 680, 17539, 7834, 1063, 323, 1930, 28810, 1111, 1684, 83, 6340, 11, 741, 1461, 15677, 7386, 1026, 14895, 44, 471, 26595, 51681], "temperature": 0.0, "avg_logprob": -0.2549935665327249, "compression_ratio": 1.4883720930232558, "no_speech_prob": 0.017974853515625, "words": null}, {"id": 187, "seek": 95310, "start": 926.98, "end": 932.26, "text": " trasformato la ricerca di un algoritmo di ordinamento pi\u00f9 veloce in una sorta di gioco", "tokens": [50364, 22507, 837, 2513, 635, 21040, 36127, 1026, 517, 3501, 50017, 3280, 1026, 25376, 8824, 10589, 1241, 752, 384, 294, 2002, 33425, 1026, 1735, 11198, 50628], "temperature": 0.0, "avg_logprob": -0.20210873353772046, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.79541015625, "words": null}, {"id": 188, "seek": 95310, "start": 932.26, "end": 934.78, "text": " progettato apposta per Alphadev.", "tokens": [50628, 447, 847, 83, 2513, 724, 8638, 680, 967, 950, 762, 85, 13, 50754], "temperature": 0.0, "avg_logprob": -0.20210873353772046, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.79541015625, "words": null}, {"id": 189, "seek": 95310, "start": 934.78, "end": 939.82, "text": " La vittoria in questo gioco consisteva appunto nello sviluppare un algoritmo che prima di", "tokens": [50754, 2369, 371, 593, 8172, 294, 10263, 1735, 11198, 49066, 2757, 724, 24052, 408, 1913, 17342, 388, 10504, 543, 517, 3501, 50017, 3280, 947, 19507, 1026, 51006], "temperature": 0.0, "avg_logprob": -0.20210873353772046, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.79541015625, "words": null}, {"id": 190, "seek": 95310, "start": 939.82, "end": 946.4200000000001, "text": " tutto funzionasse correttamente e poi che fosse anche pi\u00f9 veloce dei suoi predecessori.", "tokens": [51006, 23048, 49345, 313, 8604, 1181, 14313, 3439, 308, 19260, 947, 24528, 11585, 10589, 1241, 752, 384, 13874, 459, 4869, 24874, 780, 7386, 13, 51336], "temperature": 0.0, "avg_logprob": -0.20210873353772046, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.79541015625, "words": null}, {"id": 191, "seek": 95310, "start": 946.4200000000001, "end": 953.1, "text": " Ad ogni mossa Alphadev selezionava e utilizzava una nuova istruzione dal set assembly che aveva", "tokens": [51336, 1999, 33189, 275, 9978, 967, 950, 762, 85, 369, 20336, 313, 4061, 308, 40355, 4061, 2002, 3822, 27924, 1418, 894, 19706, 11702, 992, 12103, 947, 3472, 2757, 51670], "temperature": 0.0, "avg_logprob": -0.20210873353772046, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.79541015625, "words": null}, {"id": 192, "seek": 98154, "start": 953.1, "end": 958.22, "text": " a disposizione e veniva premiato se si avvicinava maggiormente all'obiettivo.", "tokens": [50364, 257, 15885, 35740, 308, 6138, 5931, 11222, 2513, 369, 1511, 1305, 25537, 259, 4061, 44639, 1973, 4082, 439, 6, 996, 1684, 83, 6340, 13, 50620], "temperature": 0.0, "avg_logprob": -0.18952767016323468, "compression_ratio": 1.58364312267658, "no_speech_prob": 0.77001953125, "words": null}, {"id": 193, "seek": 98154, "start": 958.22, "end": 964.1800000000001, "text": " Stabilite queste regole, l'IA ha giocato un numero enorme di partite, gareggiando contro", "tokens": [50620, 745, 5177, 642, 35455, 1121, 4812, 11, 287, 6, 6914, 324, 1735, 905, 2513, 517, 46839, 33648, 1026, 644, 642, 11, 290, 543, 22771, 1806, 1583, 50918], "temperature": 0.0, "avg_logprob": -0.18952767016323468, "compression_ratio": 1.58364312267658, "no_speech_prob": 0.77001953125, "words": null}, {"id": 194, "seek": 98154, "start": 964.1800000000001, "end": 970.74, "text": " se stessa e cercando ogni volta di stabilire il record di punteggio, attuando cos\u00ec una", "tokens": [50918, 369, 342, 8391, 308, 36099, 1806, 33189, 18765, 1026, 11652, 621, 1930, 2136, 1026, 4468, 975, 1615, 1004, 11, 951, 84, 1806, 23278, 2002, 51246], "temperature": 0.0, "avg_logprob": -0.18952767016323468, "compression_ratio": 1.58364312267658, "no_speech_prob": 0.77001953125, "words": null}, {"id": 195, "seek": 98154, "start": 970.74, "end": 975.62, "text": " modalit\u00e0 di apprendimento che prende il nome di Deep Reinforcement Learning.", "tokens": [51246, 39745, 12445, 1026, 724, 4542, 10030, 947, 9866, 68, 1930, 19003, 1026, 14895, 42116, 9382, 15205, 13, 51490], "temperature": 0.0, "avg_logprob": -0.18952767016323468, "compression_ratio": 1.58364312267658, "no_speech_prob": 0.77001953125, "words": null}, {"id": 196, "seek": 98154, "start": 975.62, "end": 981.5400000000001, "text": " Secondo gli sviluppatori di DeepMind, cito, il numero di possibili combinazioni di istruzioni", "tokens": [51490, 5736, 78, 17161, 17342, 388, 10504, 39842, 1026, 14895, 44, 471, 11, 269, 3528, 11, 1930, 46839, 1026, 1402, 897, 2312, 38514, 27569, 1026, 1418, 894, 89, 15273, 51786], "temperature": 0.0, "avg_logprob": -0.18952767016323468, "compression_ratio": 1.58364312267658, "no_speech_prob": 0.77001953125, "words": null}, {"id": 197, "seek": 100678, "start": 981.54, "end": 987.8199999999999, "text": " \u00e8 simile al numero di particelle dell'universo e al numero di possibili combinazioni dimosse", "tokens": [50364, 4873, 1034, 794, 419, 46839, 1026, 644, 573, 2447, 19781, 6, 409, 36969, 308, 419, 46839, 1026, 1402, 897, 2312, 38514, 27569, 5013, 14353, 50678], "temperature": 0.0, "avg_logprob": -0.18675000667572023, "compression_ratio": 1.6120689655172413, "no_speech_prob": 0.117431640625, "words": null}, {"id": 198, "seek": 100678, "start": 987.8199999999999, "end": 995.54, "text": " nei giochi degli scacchi e del go messi insieme, e una singola partita sbagliata invalida l'intero", "tokens": [50678, 34517, 48508, 8036, 32079, 795, 326, 8036, 308, 1103, 352, 2082, 72, 1028, 44940, 11, 308, 2002, 1522, 4711, 644, 2786, 262, 17282, 2081, 3274, 1048, 304, 2887, 287, 6, 5106, 78, 51064], "temperature": 0.0, "avg_logprob": -0.18675000667572023, "compression_ratio": 1.6120689655172413, "no_speech_prob": 0.117431640625, "words": null}, {"id": 199, "seek": 100678, "start": 995.54, "end": 996.54, "text": " algoritmo.", "tokens": [51064, 3501, 50017, 3280, 13, 51114], "temperature": 0.0, "avg_logprob": -0.18675000667572023, "compression_ratio": 1.6120689655172413, "no_speech_prob": 0.117431640625, "words": null}, {"id": 200, "seek": 100678, "start": 996.54, "end": 1002.2199999999999, "text": " Ad ogni iterazione, quindi, dopo aver aggiunto l'istruzione scelta, Alphadev valutava la", "tokens": [51114, 1999, 33189, 309, 1663, 19706, 11, 15727, 11, 35196, 18247, 42254, 24052, 287, 6, 468, 894, 19706, 795, 338, 1328, 11, 967, 950, 762, 85, 1323, 325, 4061, 635, 51398], "temperature": 0.0, "avg_logprob": -0.18675000667572023, "compression_ratio": 1.6120689655172413, "no_speech_prob": 0.117431640625, "words": null}, {"id": 201, "seek": 100678, "start": 1002.2199999999999, "end": 1006.78, "text": " correttezza dell'algoritmo, confrontando il risultato ottenuto con quello atteso.", "tokens": [51398, 1181, 1505, 975, 26786, 19781, 6, 20422, 50017, 3280, 11, 12422, 1806, 1930, 2253, 723, 2513, 4337, 1147, 8262, 416, 22813, 951, 41189, 13, 51626], "temperature": 0.0, "avg_logprob": -0.18675000667572023, "compression_ratio": 1.6120689655172413, "no_speech_prob": 0.117431640625, "words": null}, {"id": 202, "seek": 103434, "start": 1007.1, "end": 1011.78, "text": " La ricompensa scattava sia per la correttezza sia per la maggiore velocit\u00e0.", "tokens": [50380, 2369, 21040, 8586, 23364, 795, 1591, 4061, 25176, 680, 635, 1181, 1505, 975, 26786, 25176, 680, 635, 463, 22771, 418, 7806, 12445, 13, 50614], "temperature": 0.0, "avg_logprob": -0.18548387144842454, "compression_ratio": 1.516, "no_speech_prob": 0.29345703125, "words": null}, {"id": 203, "seek": 103434, "start": 1011.78, "end": 1017.8199999999999, "text": " Cos\u00ec facendo, alla fine, Alphadev ha scoperto un nuovo algoritmo di ordinamento che ha portato", "tokens": [50614, 15855, 4749, 1915, 3999, 11, 11591, 2489, 11, 967, 950, 762, 85, 324, 795, 404, 13098, 517, 49348, 3501, 50017, 3280, 1026, 25376, 8824, 947, 324, 2436, 2513, 50916], "temperature": 0.0, "avg_logprob": -0.18548387144842454, "compression_ratio": 1.516, "no_speech_prob": 0.29345703125, "words": null}, {"id": 204, "seek": 103434, "start": 1017.8199999999999, "end": 1025.86, "text": " miglioramenti fino al 70% per le sequenze pi\u00f9 brevi e circa dell'1,7% per le sequenze", "tokens": [50916, 6186, 75, 1973, 2466, 72, 42560, 419, 5285, 4, 680, 476, 5123, 268, 1381, 10589, 1403, 4917, 308, 45972, 19781, 6, 16, 11, 22, 4, 680, 476, 5123, 268, 1381, 51318], "temperature": 0.0, "avg_logprob": -0.18548387144842454, "compression_ratio": 1.516, "no_speech_prob": 0.29345703125, "words": null}, {"id": 205, "seek": 103434, "start": 1025.86, "end": 1028.82, "text": " che superano i 250.000 elementi.", "tokens": [51318, 947, 1687, 3730, 741, 11650, 13, 1360, 4478, 72, 13, 51466], "temperature": 0.0, "avg_logprob": -0.18548387144842454, "compression_ratio": 1.516, "no_speech_prob": 0.29345703125, "words": null}, {"id": 206, "seek": 103434, "start": 1028.82, "end": 1034.34, "text": " Un dettaglio molto interessante, poi, \u00e8 che, differentemente da come avviene nel caso", "tokens": [51466, 1156, 1141, 25030, 19987, 16394, 24372, 11, 19260, 11, 4873, 947, 11, 819, 16288, 1120, 808, 1305, 85, 10174, 15373, 9666, 51742], "temperature": 0.0, "avg_logprob": -0.18548387144842454, "compression_ratio": 1.516, "no_speech_prob": 0.29345703125, "words": null}, {"id": 207, "seek": 106406, "start": 1034.34, "end": 1040.3, "text": " dei large language model, non \u00e8 stato necessario basarsi su esempi precedentemente creati da", "tokens": [50364, 13874, 2416, 2856, 2316, 11, 2107, 4873, 29657, 2688, 4912, 987, 32742, 459, 32340, 72, 37388, 16288, 1428, 72, 1120, 50662], "temperature": 0.0, "avg_logprob": -0.21752717132153718, "compression_ratio": 1.541044776119403, "no_speech_prob": 0.26220703125, "words": null}, {"id": 208, "seek": 106406, "start": 1040.3, "end": 1046.74, "text": " umani, ma il sistema ha scoperto da solo la propria strada verso la risoluzione del problema.", "tokens": [50662, 1105, 3782, 11, 463, 1930, 13245, 324, 795, 404, 13098, 1120, 6944, 635, 2365, 4668, 1056, 1538, 49786, 635, 2253, 401, 3334, 5328, 1103, 12395, 13, 50984], "temperature": 0.0, "avg_logprob": -0.21752717132153718, "compression_ratio": 1.541044776119403, "no_speech_prob": 0.26220703125, "words": null}, {"id": 209, "seek": 106406, "start": 1046.74, "end": 1053.62, "text": " \u00c8 una differenza che va ben colta perch\u00e9 l'approccio del Deep Reinforcement Learning", "tokens": [50984, 34495, 2002, 743, 23691, 947, 2773, 3271, 1173, 1328, 14303, 287, 6, 1746, 24174, 8529, 1103, 14895, 42116, 9382, 15205, 51328], "temperature": 0.0, "avg_logprob": -0.21752717132153718, "compression_ratio": 1.541044776119403, "no_speech_prob": 0.26220703125, "words": null}, {"id": 210, "seek": 106406, "start": 1053.62, "end": 1060.86, "text": " \u00e8 molto pi\u00f9 utile rispetto all'LLM quando si cerca di produrre qualcosa di nuovo e migliore", "tokens": [51328, 4873, 16394, 10589, 2839, 794, 2253, 42801, 439, 6, 24010, 44, 7770, 1511, 26770, 1026, 15792, 374, 265, 42400, 1026, 49348, 308, 6186, 2081, 418, 51690], "temperature": 0.0, "avg_logprob": -0.21752717132153718, "compression_ratio": 1.541044776119403, "no_speech_prob": 0.26220703125, "words": null}, {"id": 211, "seek": 106406, "start": 1060.86, "end": 1064.06, "text": " rispetto a quanto gi\u00e0 fatto da menti umane.", "tokens": [51690, 2253, 42801, 257, 17820, 30469, 23228, 1120, 3074, 72, 1105, 1929, 13, 51850], "temperature": 0.0, "avg_logprob": -0.21752717132153718, "compression_ratio": 1.541044776119403, "no_speech_prob": 0.26220703125, "words": null}, {"id": 212, "seek": 109262, "start": 1064.54, "end": 1070.22, "text": " Qui non parliamo pi\u00f9, infatti, di una collezione enorme di esempi a cui attingere per creare", "tokens": [50388, 27361, 2107, 971, 49926, 10589, 11, 1536, 21515, 11, 1026, 2002, 1263, 4371, 5328, 33648, 1026, 32340, 72, 257, 22929, 412, 783, 323, 680, 1197, 543, 50672], "temperature": 0.0, "avg_logprob": -0.24590412216279114, "compression_ratio": 1.5186915887850467, "no_speech_prob": 0.00036835670471191406, "words": null}, {"id": 213, "seek": 109262, "start": 1070.22, "end": 1072.06, "text": " una sequenza di parole sensate.", "tokens": [50672, 2002, 5123, 23691, 1026, 26783, 2923, 473, 13, 50764], "temperature": 0.0, "avg_logprob": -0.24590412216279114, "compression_ratio": 1.5186915887850467, "no_speech_prob": 0.00036835670471191406, "words": null}, {"id": 214, "seek": 109262, "start": 1072.06, "end": 1077.82, "text": " Qui il concetto \u00e8 risolvere un problema esplorando nuovi approcci e nuove combinazioni", "tokens": [50764, 27361, 1930, 1588, 23778, 4873, 2253, 401, 5887, 517, 12395, 785, 564, 284, 1806, 37802, 4917, 2075, 66, 537, 308, 3822, 1682, 38514, 27569, 51052], "temperature": 0.0, "avg_logprob": -0.24590412216279114, "compression_ratio": 1.5186915887850467, "no_speech_prob": 0.00036835670471191406, "words": null}, {"id": 215, "seek": 109262, "start": 1077.82, "end": 1079.02, "text": " mai provate prima.", "tokens": [51052, 12698, 1439, 473, 19507, 13, 51112], "temperature": 0.0, "avg_logprob": -0.24590412216279114, "compression_ratio": 1.5186915887850467, "no_speech_prob": 0.00036835670471191406, "words": null}, {"id": 216, "seek": 109262, "start": 1086.8999999999999, "end": 1092.62, "text": " Ora, al di l\u00e0 dei dettagli tecnici per i quali ti lascio il paper originale in descrizione,", "tokens": [51506, 43672, 11, 419, 1026, 3684, 13874, 1141, 25030, 2081, 535, 66, 7692, 72, 680, 741, 4101, 72, 8757, 2439, 8529, 1930, 3035, 4957, 1220, 294, 2189, 19706, 11, 51792], "temperature": 0.0, "avg_logprob": -0.24590412216279114, "compression_ratio": 1.5186915887850467, "no_speech_prob": 0.00036835670471191406, "words": null}, {"id": 217, "seek": 112166, "start": 1092.7, "end": 1098.0600000000002, "text": " la cosa secondo me pi\u00f9 interessante di questa storia \u00e8 che l'algoritmo di ordinamento", "tokens": [50368, 635, 10163, 41601, 385, 10589, 24372, 1026, 16540, 5967, 654, 4873, 947, 287, 6, 20422, 50017, 3280, 1026, 25376, 8824, 50636], "temperature": 0.0, "avg_logprob": -0.1705322265625, "compression_ratio": 1.6879699248120301, "no_speech_prob": 0.00047278404235839844, "words": null}, {"id": 218, "seek": 112166, "start": 1098.0600000000002, "end": 1103.8600000000001, "text": " \u00e8 stato sviluppato utilizzando un approccio totalmente diverso dai precedenti sotto vari", "tokens": [50636, 4873, 29657, 17342, 388, 10504, 2513, 40355, 1806, 517, 2075, 66, 8529, 30865, 18558, 539, 38586, 16969, 23012, 43754, 3034, 50926], "temperature": 0.0, "avg_logprob": -0.1705322265625, "compression_ratio": 1.6879699248120301, "no_speech_prob": 0.00047278404235839844, "words": null}, {"id": 219, "seek": 112166, "start": 1103.8600000000001, "end": 1104.8600000000001, "text": " aspetti.", "tokens": [50926, 16817, 12495, 13, 50976], "temperature": 0.0, "avg_logprob": -0.1705322265625, "compression_ratio": 1.6879699248120301, "no_speech_prob": 0.00047278404235839844, "words": null}, {"id": 220, "seek": 112166, "start": 1104.8600000000001, "end": 1110.0600000000002, "text": " Innanzitutto, per anni i ricercatori hanno progettato e realizzato algoritmi di base", "tokens": [50976, 34066, 3910, 270, 28698, 11, 680, 31164, 741, 21040, 2869, 39842, 26595, 447, 847, 83, 2513, 308, 957, 8072, 2513, 3501, 50017, 3057, 1026, 3096, 51236], "temperature": 0.0, "avg_logprob": -0.1705322265625, "compression_ratio": 1.6879699248120301, "no_speech_prob": 0.00047278404235839844, "words": null}, {"id": 221, "seek": 112166, "start": 1110.0600000000002, "end": 1115.9, "text": " utilizzando il ragionamento e l'intuito, mentre questo nuovo risultato \u00e8 stato ottenuto", "tokens": [51236, 40355, 1806, 1930, 17539, 313, 8824, 308, 287, 6, 686, 22703, 11, 49601, 10263, 49348, 2253, 723, 2513, 4873, 29657, 4337, 1147, 8262, 51528], "temperature": 0.0, "avg_logprob": -0.1705322265625, "compression_ratio": 1.6879699248120301, "no_speech_prob": 0.00047278404235839844, "words": null}, {"id": 222, "seek": 112166, "start": 1115.9, "end": 1121.66, "text": " letteralmente effettuando milioni di tentativi fino a scoprire la giusta combinazione di", "tokens": [51528, 5063, 304, 4082, 1244, 42747, 1806, 1962, 15273, 1026, 7054, 10662, 72, 42560, 257, 795, 404, 38920, 635, 1735, 28652, 38514, 12928, 1026, 51816], "temperature": 0.0, "avg_logprob": -0.1705322265625, "compression_ratio": 1.6879699248120301, "no_speech_prob": 0.00047278404235839844, "words": null}, {"id": 223, "seek": 114966, "start": 1121.7, "end": 1122.7, "text": " elementi.", "tokens": [50366, 4478, 72, 13, 50416], "temperature": 0.0, "avg_logprob": -0.1918025366638018, "compression_ratio": 1.628158844765343, "no_speech_prob": 0.04083251953125, "words": null}, {"id": 224, "seek": 114966, "start": 1122.7, "end": 1128.38, "text": " So che a prima vista \u00e8 qualcosa che potrebbe ricordare il concetto di forza bruta, che", "tokens": [50416, 407, 947, 257, 19507, 22553, 4873, 42400, 947, 1847, 39487, 21040, 765, 543, 1930, 1588, 23778, 1026, 337, 2394, 738, 12093, 11, 947, 50700], "temperature": 0.0, "avg_logprob": -0.1918025366638018, "compression_ratio": 1.628158844765343, "no_speech_prob": 0.04083251953125, "words": null}, {"id": 225, "seek": 114966, "start": 1128.38, "end": 1134.5400000000002, "text": " di solito non \u00e8 mai la migliore delle soluzioni auspicabili, ma la realt\u00e0 \u00e8 che il reinforcement", "tokens": [50700, 1026, 1404, 3528, 2107, 4873, 12698, 635, 6186, 2081, 418, 16485, 1404, 3334, 15273, 3437, 37509, 455, 2312, 11, 463, 635, 47512, 4873, 947, 1930, 29280, 51008], "temperature": 0.0, "avg_logprob": -0.1918025366638018, "compression_ratio": 1.628158844765343, "no_speech_prob": 0.04083251953125, "words": null}, {"id": 226, "seek": 114966, "start": 1134.5400000000002, "end": 1139.5400000000002, "text": " learning \u00e8 molto di pi\u00f9 di un algoritmo di forza bruta e, risultati alla mano, la", "tokens": [51008, 2539, 4873, 16394, 1026, 10589, 1026, 517, 3501, 50017, 3280, 1026, 337, 2394, 738, 12093, 308, 11, 2253, 723, 6908, 11591, 18384, 11, 635, 51258], "temperature": 0.0, "avg_logprob": -0.1918025366638018, "compression_ratio": 1.628158844765343, "no_speech_prob": 0.04083251953125, "words": null}, {"id": 227, "seek": 114966, "start": 1139.5400000000002, "end": 1144.3400000000001, "text": " scelta di utilizzarlo ha portato a superare un limite che sembrava ormai definitivo.", "tokens": [51258, 795, 338, 1328, 1026, 40355, 19457, 324, 2436, 2513, 257, 1687, 543, 517, 39946, 947, 20775, 424, 2757, 420, 76, 1301, 28781, 6340, 13, 51498], "temperature": 0.0, "avg_logprob": -0.1918025366638018, "compression_ratio": 1.628158844765343, "no_speech_prob": 0.04083251953125, "words": null}, {"id": 228, "seek": 114966, "start": 1144.3400000000001, "end": 1149.66, "text": " Poi, un'altra peculiarit\u00e0 \u00e8 che l'intera lavorazione \u00e8 stata eseguita utilizzando", "tokens": [51498, 430, 4869, 11, 517, 6, 38865, 27149, 12445, 4873, 947, 287, 6, 5106, 64, 29241, 12928, 4873, 49554, 785, 1146, 1983, 64, 40355, 1806, 51764], "temperature": 0.0, "avg_logprob": -0.1918025366638018, "compression_ratio": 1.628158844765343, "no_speech_prob": 0.04083251953125, "words": null}, {"id": 229, "seek": 117506, "start": 1149.66, "end": 1156.14, "text": " Assembly e non un linguaggio ad alto livello e questo ha rappresentato un'ulteriore differenza", "tokens": [50364, 20399, 308, 2107, 517, 21766, 30763, 614, 21275, 1621, 1913, 308, 10263, 324, 8125, 11662, 2513, 517, 6, 425, 34345, 418, 743, 23691, 50688], "temperature": 0.0, "avg_logprob": -0.2089673918226491, "compression_ratio": 1.597457627118644, "no_speech_prob": 0.347412109375, "words": null}, {"id": 230, "seek": 117506, "start": 1156.14, "end": 1161.26, "text": " nell'approccio perch\u00e9 gli umani in generale non lavorano sugli algoritmi Assembly.", "tokens": [50688, 44666, 6, 1746, 24174, 8529, 14303, 17161, 1105, 3782, 294, 1337, 1220, 2107, 29241, 3730, 22802, 2081, 3501, 50017, 3057, 6281, 443, 25021, 13, 50944], "temperature": 0.0, "avg_logprob": -0.2089673918226491, "compression_ratio": 1.597457627118644, "no_speech_prob": 0.347412109375, "words": null}, {"id": 231, "seek": 117506, "start": 1161.26, "end": 1168.42, "text": " Questa scelta aveva un duplice scopo, innanzitutto restringeva il ventaglio di possibili combinazioni", "tokens": [50944, 2326, 7841, 795, 338, 1328, 3472, 2757, 517, 1581, 564, 573, 795, 404, 78, 11, 7714, 3910, 270, 28698, 1472, 38895, 2757, 1930, 6931, 559, 19987, 1026, 1402, 897, 2312, 38514, 27569, 51302], "temperature": 0.0, "avg_logprob": -0.2089673918226491, "compression_ratio": 1.597457627118644, "no_speech_prob": 0.347412109375, "words": null}, {"id": 232, "seek": 117506, "start": 1168.42, "end": 1175.0600000000002, "text": " di istruzioni perch\u00e9 Assembly \u00e8 meno articolato di un qualsiasi linguaggio a livello superiore", "tokens": [51302, 1026, 1418, 894, 89, 15273, 14303, 20399, 4873, 40236, 15228, 401, 2513, 1026, 517, 421, 1124, 4609, 72, 21766, 30763, 257, 1621, 1913, 1687, 72, 418, 51634], "temperature": 0.0, "avg_logprob": -0.2089673918226491, "compression_ratio": 1.597457627118644, "no_speech_prob": 0.347412109375, "words": null}, {"id": 233, "seek": 120370, "start": 1175.06, "end": 1180.94, "text": " e poi eliminava un livello di complessit\u00e0 che poteva nascondere delle inefficienze.", "tokens": [50364, 308, 19260, 7892, 4061, 517, 1621, 1913, 1026, 1209, 442, 12445, 947, 280, 1370, 2757, 297, 4806, 33447, 16485, 7167, 3341, 1053, 1381, 13, 50658], "temperature": 0.0, "avg_logprob": -0.19134424390300872, "compression_ratio": 1.6893939393939394, "no_speech_prob": 0.06365966796875, "words": null}, {"id": 234, "seek": 120370, "start": 1180.94, "end": 1185.86, "text": " Se infatti pensiamo che un'istruzione di un linguaggio ad alto livello viene trasformata", "tokens": [50658, 1100, 1536, 21515, 6099, 7415, 947, 517, 6, 468, 894, 19706, 1026, 517, 21766, 30763, 614, 21275, 1621, 1913, 19561, 22507, 837, 3274, 50904], "temperature": 0.0, "avg_logprob": -0.19134424390300872, "compression_ratio": 1.6893939393939394, "no_speech_prob": 0.06365966796875, "words": null}, {"id": 235, "seek": 120370, "start": 1185.86, "end": 1192.54, "text": " solitamente in una serie di istruzioni Assembly, possiamo anche supporre che una lunga sequenza", "tokens": [50904, 1404, 270, 3439, 294, 2002, 23030, 1026, 1418, 894, 89, 15273, 20399, 11, 44758, 11585, 1003, 284, 265, 947, 2002, 16730, 64, 5123, 23691, 51238], "temperature": 0.0, "avg_logprob": -0.19134424390300872, "compression_ratio": 1.6893939393939394, "no_speech_prob": 0.06365966796875, "words": null}, {"id": 236, "seek": 120370, "start": 1192.54, "end": 1197.7, "text": " di operazioni ad alto livello possa generare una combinazione in Assembly non ottimale.", "tokens": [51238, 1026, 2208, 27569, 614, 21275, 1621, 1913, 41564, 1337, 543, 2002, 38514, 12928, 294, 20399, 2107, 4337, 31208, 1220, 13, 51496], "temperature": 0.0, "avg_logprob": -0.19134424390300872, "compression_ratio": 1.6893939393939394, "no_speech_prob": 0.06365966796875, "words": null}, {"id": 237, "seek": 120370, "start": 1197.7, "end": 1203.7, "text": " In teoria i compilatori dovrebbero evitare queste condizioni, ma non sempre \u00e8 possibile", "tokens": [51496, 682, 535, 8172, 741, 715, 388, 39842, 30870, 22692, 46659, 1073, 270, 543, 35455, 2224, 590, 15273, 11, 463, 2107, 9553, 4873, 50184, 51796], "temperature": 0.0, "avg_logprob": -0.19134424390300872, "compression_ratio": 1.6893939393939394, "no_speech_prob": 0.06365966796875, "words": null}, {"id": 238, "seek": 122926, "start": 1203.7, "end": 1209.52, "text": " farlo, prevedere tutte le possibili combinazioni che un programmatore potrebbe decidere di utilizzare", "tokens": [50364, 1400, 752, 11, 659, 937, 323, 38632, 476, 1402, 897, 2312, 38514, 27569, 947, 517, 1461, 15677, 418, 1847, 39487, 21937, 323, 1026, 40355, 543, 50655], "temperature": 0.0, "avg_logprob": -0.19008027358886298, "compression_ratio": 1.6099585062240664, "no_speech_prob": 0.0014324188232421875, "words": null}, {"id": 239, "seek": 122926, "start": 1209.52, "end": 1211.38, "text": " \u00e8 praticamente impossibile.", "tokens": [50655, 4873, 45734, 38802, 30898, 13, 50748], "temperature": 0.0, "avg_logprob": -0.19008027358886298, "compression_ratio": 1.6099585062240664, "no_speech_prob": 0.0014324188232421875, "words": null}, {"id": 240, "seek": 122926, "start": 1211.38, "end": 1217.7, "text": " Quindi, in pratica, Assembly rappresenta un ambiente pi\u00f9 flessibile in cui operare", "tokens": [50748, 32534, 11, 294, 28844, 2262, 11, 20399, 8125, 495, 8938, 517, 34957, 10589, 932, 442, 30898, 294, 22929, 2208, 543, 51064], "temperature": 0.0, "avg_logprob": -0.19008027358886298, "compression_ratio": 1.6099585062240664, "no_speech_prob": 0.0014324188232421875, "words": null}, {"id": 241, "seek": 122926, "start": 1217.7, "end": 1223.98, "text": " e utilizzandolo direttamente Alphadev ha potuto eliminare completamente tutto lo strato di", "tokens": [51064, 308, 40355, 474, 7902, 1264, 6319, 3439, 967, 950, 762, 85, 324, 1847, 8262, 7892, 543, 28381, 23048, 450, 1056, 2513, 1026, 51378], "temperature": 0.0, "avg_logprob": -0.19008027358886298, "compression_ratio": 1.6099585062240664, "no_speech_prob": 0.0014324188232421875, "words": null}, {"id": 242, "seek": 122926, "start": 1223.98, "end": 1229.26, "text": " incertezza dovuto all'astrazione causata da un qualsiasi linguaggio, lasciando poi", "tokens": [51378, 834, 911, 4371, 2394, 30870, 8262, 439, 6, 525, 424, 19706, 3302, 3274, 1120, 517, 421, 1124, 4609, 72, 21766, 30763, 11, 48451, 1806, 19260, 51642], "temperature": 0.0, "avg_logprob": -0.19008027358886298, "compression_ratio": 1.6099585062240664, "no_speech_prob": 0.0014324188232421875, "words": null}, {"id": 243, "seek": 125486, "start": 1229.26, "end": 1234.3799999999999, "text": " ai programmatori umani il compito di ricostruire il nuovo algoritmo a livello superiore.", "tokens": [50364, 9783, 1461, 15677, 7386, 1105, 3782, 1930, 715, 3528, 1026, 21040, 555, 894, 621, 1930, 49348, 3501, 50017, 3280, 257, 1621, 1913, 1687, 72, 418, 13, 50620], "temperature": 0.0, "avg_logprob": -0.20510913242423345, "compression_ratio": 1.5372549019607844, "no_speech_prob": 0.548828125, "words": null}, {"id": 244, "seek": 125486, "start": 1234.3799999999999, "end": 1240.86, "text": " E nello specifico, in DeepMind, hanno riportato tutto il lavoro fatto da Alphadev in linguaggio", "tokens": [50620, 462, 408, 1913, 2685, 78, 11, 294, 14895, 44, 471, 11, 26595, 12782, 477, 2513, 23048, 1930, 42060, 23228, 1120, 967, 950, 762, 85, 294, 21766, 30763, 50944], "temperature": 0.0, "avg_logprob": -0.20510913242423345, "compression_ratio": 1.5372549019607844, "no_speech_prob": 0.548828125, "words": null}, {"id": 245, "seek": 125486, "start": 1240.86, "end": 1246.74, "text": " C++ e poi l'hanno reso open e, altra nota positiva, l'hanno inserito in una delle", "tokens": [50944, 383, 25472, 308, 19260, 287, 6, 71, 13484, 319, 539, 1269, 308, 11, 4955, 424, 36192, 11218, 5931, 11, 287, 6, 71, 13484, 1028, 260, 3528, 294, 2002, 16485, 51238], "temperature": 0.0, "avg_logprob": -0.20510913242423345, "compression_ratio": 1.5372549019607844, "no_speech_prob": 0.548828125, "words": null}, {"id": 246, "seek": 125486, "start": 1246.74, "end": 1248.7, "text": " librerie pi\u00f9 utilizzate al mondo.", "tokens": [51238, 4939, 17487, 10589, 40355, 473, 419, 40499, 13, 51336], "temperature": 0.0, "avg_logprob": -0.20510913242423345, "compression_ratio": 1.5372549019607844, "no_speech_prob": 0.548828125, "words": null}, {"id": 247, "seek": 125486, "start": 1248.7, "end": 1254.86, "text": " Ci\u00f2 significa che questo codice migliorato verr\u00e0 ora utilizzato da centinaia di migliaia", "tokens": [51336, 20188, 4293, 19957, 947, 10263, 17656, 573, 6186, 75, 1973, 2513, 1306, 39212, 33714, 40355, 2513, 1120, 1489, 1426, 654, 1026, 6186, 14218, 654, 51644], "temperature": 0.0, "avg_logprob": -0.20510913242423345, "compression_ratio": 1.5372549019607844, "no_speech_prob": 0.548828125, "words": null}, {"id": 248, "seek": 128282, "start": 1254.8600000000001, "end": 1260.2600000000002, "text": " di programmatori e software e tutto ci\u00f2 non pu\u00f2 che essere un'ottima notizia per", "tokens": [50364, 1026, 1461, 15677, 7386, 308, 4722, 308, 23048, 6983, 4293, 2107, 26526, 947, 19799, 517, 6, 1521, 4775, 406, 590, 654, 680, 50634], "temperature": 0.0, "avg_logprob": -0.23207236747992666, "compression_ratio": 1.4663461538461537, "no_speech_prob": 0.196533203125, "words": null}, {"id": 249, "seek": 128282, "start": 1260.2600000000002, "end": 1261.6200000000001, "text": " noi e per la societ\u00e0.", "tokens": [50634, 22447, 308, 680, 635, 14051, 1467, 13, 50702], "temperature": 0.0, "avg_logprob": -0.23207236747992666, "compression_ratio": 1.4663461538461537, "no_speech_prob": 0.196533203125, "words": null}, {"id": 250, "seek": 128282, "start": 1269.6200000000001, "end": 1275.66, "text": " Per via del suo approccio totalmente diverso da quello abitualmente utilizzato fino ad ora,", "tokens": [51102, 3026, 5766, 1103, 34197, 2075, 66, 8529, 30865, 18558, 539, 1120, 22813, 410, 270, 901, 4082, 40355, 2513, 42560, 614, 33714, 11, 51404], "temperature": 0.0, "avg_logprob": -0.23207236747992666, "compression_ratio": 1.4663461538461537, "no_speech_prob": 0.196533203125, "words": null}, {"id": 251, "seek": 128282, "start": 1275.66, "end": 1281.7400000000002, "text": " Alphadev, nello svolgere il suo compito, ha anche prodotto alcuni risultati molto singolari", "tokens": [51404, 967, 950, 762, 85, 11, 408, 1913, 262, 9646, 34899, 1930, 34197, 715, 3528, 11, 324, 11585, 15792, 18838, 20005, 24307, 2253, 723, 6908, 16394, 1522, 401, 3504, 51708], "temperature": 0.0, "avg_logprob": -0.23207236747992666, "compression_ratio": 1.4663461538461537, "no_speech_prob": 0.196533203125, "words": null}, {"id": 252, "seek": 128282, "start": 1281.7400000000002, "end": 1282.8200000000002, "text": " e interessanti.", "tokens": [51708, 308, 12478, 11520, 13, 51762], "temperature": 0.0, "avg_logprob": -0.23207236747992666, "compression_ratio": 1.4663461538461537, "no_speech_prob": 0.196533203125, "words": null}, {"id": 253, "seek": 131122, "start": 1283.26, "end": 1288.98, "text": " Un esempio di ci\u00f2 \u00e8 rappresentato da una serie di strane sequenze di istruzioni che", "tokens": [50386, 1156, 33627, 1026, 6983, 4293, 4873, 8125, 11662, 2513, 1120, 2002, 23030, 1026, 1056, 1929, 5123, 268, 1381, 1026, 1418, 894, 89, 15273, 947, 50672], "temperature": 0.0, "avg_logprob": -0.2138287375761768, "compression_ratio": 1.5111940298507462, "no_speech_prob": 0.00130462646484375, "words": null}, {"id": 254, "seek": 131122, "start": 1288.98, "end": 1294.54, "text": " i ricercatori di DeepMind hanno chiamato Alphadev Swap & Copy Moves.", "tokens": [50672, 741, 21040, 2869, 39842, 1026, 14895, 44, 471, 26595, 417, 2918, 2513, 967, 950, 762, 85, 3926, 569, 3693, 25653, 3335, 977, 13, 50950], "temperature": 0.0, "avg_logprob": -0.2138287375761768, "compression_ratio": 1.5111940298507462, "no_speech_prob": 0.00130462646484375, "words": null}, {"id": 255, "seek": 131122, "start": 1294.54, "end": 1299.86, "text": " A livello concettuale, infatti, si tratta di qualcosa di molto simile alla mossa 37", "tokens": [50950, 316, 1621, 1913, 1588, 3093, 901, 68, 11, 1536, 21515, 11, 1511, 504, 18405, 1026, 42400, 1026, 16394, 1034, 794, 11591, 275, 9978, 13435, 51216], "temperature": 0.0, "avg_logprob": -0.2138287375761768, "compression_ratio": 1.5111940298507462, "no_speech_prob": 0.00130462646484375, "words": null}, {"id": 256, "seek": 131122, "start": 1299.86, "end": 1304.7, "text": " di AlphaGo che la EA mise in campo contro il campione mondiale di Go.", "tokens": [51216, 1026, 20588, 12104, 947, 635, 35747, 36845, 294, 29691, 1583, 1930, 2255, 5328, 17606, 25051, 1026, 1037, 13, 51458], "temperature": 0.0, "avg_logprob": -0.2138287375761768, "compression_ratio": 1.5111940298507462, "no_speech_prob": 0.00130462646484375, "words": null}, {"id": 257, "seek": 131122, "start": 1304.7, "end": 1311.22, "text": " Durante quella leggendaria partita, l'intelligenza artificiale aveva eseguito una mossa talmente", "tokens": [51458, 13710, 2879, 32234, 30991, 521, 9831, 644, 2786, 11, 287, 6, 20761, 3213, 2394, 11677, 68, 3472, 2757, 785, 1146, 22703, 2002, 275, 9978, 4023, 4082, 51784], "temperature": 0.0, "avg_logprob": -0.2138287375761768, "compression_ratio": 1.5111940298507462, "no_speech_prob": 0.00130462646484375, "words": null}, {"id": 258, "seek": 134070, "start": 1311.22, "end": 1317.46, "text": " controintuitiva che aveva stupito tutti gli esperti, campione compreso, ma che alla fine", "tokens": [50364, 1583, 686, 1983, 5931, 947, 3472, 2757, 342, 1010, 3528, 19822, 17161, 10045, 7317, 11, 2255, 5328, 715, 38021, 11, 463, 947, 11591, 2489, 50676], "temperature": 0.0, "avg_logprob": -0.19947536844406685, "compression_ratio": 1.519572953736655, "no_speech_prob": 0.044647216796875, "words": null}, {"id": 259, "seek": 134070, "start": 1317.46, "end": 1319.8600000000001, "text": " l'aveva portata a vincere il match.", "tokens": [50676, 287, 6, 946, 2757, 2436, 3274, 257, 371, 4647, 323, 1930, 2995, 13, 50796], "temperature": 0.0, "avg_logprob": -0.19947536844406685, "compression_ratio": 1.519572953736655, "no_speech_prob": 0.044647216796875, "words": null}, {"id": 260, "seek": 134070, "start": 1319.8600000000001, "end": 1326.42, "text": " Con le sue Swap & Copy Moves, Alphadev a suo modo ha fatto qualcosa di simile, implementando", "tokens": [50796, 2656, 476, 20416, 3926, 569, 3693, 25653, 3335, 977, 11, 967, 950, 762, 85, 257, 34197, 16664, 324, 23228, 42400, 1026, 1034, 794, 11, 4445, 1806, 51124], "temperature": 0.0, "avg_logprob": -0.19947536844406685, "compression_ratio": 1.519572953736655, "no_speech_prob": 0.044647216796875, "words": null}, {"id": 261, "seek": 134070, "start": 1326.42, "end": 1331.3, "text": " alcune operazioni abbastanza banali in modo del tutto singolare e fuori da ci\u00f2 che i", "tokens": [51124, 20005, 2613, 2208, 27569, 16903, 525, 20030, 5643, 5103, 294, 16664, 1103, 23048, 1522, 43141, 308, 8536, 7386, 1120, 6983, 4293, 947, 741, 51368], "temperature": 0.0, "avg_logprob": -0.19947536844406685, "compression_ratio": 1.519572953736655, "no_speech_prob": 0.044647216796875, "words": null}, {"id": 262, "seek": 134070, "start": 1331.3, "end": 1333.7, "text": " ricercatori sono abituati a vedere.", "tokens": [51368, 21040, 2869, 39842, 9259, 410, 6380, 6908, 257, 35373, 13, 51488], "temperature": 0.0, "avg_logprob": -0.19947536844406685, "compression_ratio": 1.519572953736655, "no_speech_prob": 0.044647216796875, "words": null}, {"id": 263, "seek": 134070, "start": 1333.7, "end": 1340.7, "text": " In pratica, nel proprio algoritmo, in alcuni casi, la EA ha deciso di saltare a piepari", "tokens": [51488, 682, 28844, 2262, 11, 15373, 28203, 3501, 50017, 3280, 11, 294, 20005, 24307, 22567, 11, 635, 35747, 324, 18206, 78, 1026, 5139, 543, 257, 1730, 79, 3504, 51838], "temperature": 0.0, "avg_logprob": -0.19947536844406685, "compression_ratio": 1.519572953736655, "no_speech_prob": 0.044647216796875, "words": null}, {"id": 264, "seek": 136762, "start": 1340.7, "end": 1346.3400000000001, "text": " alcune istruzioni nel flusso del codice, istruzioni che fino ad ora erano considerate", "tokens": [50364, 20005, 2613, 1418, 894, 89, 15273, 15373, 932, 301, 539, 1103, 17656, 573, 11, 1418, 894, 89, 15273, 947, 42560, 614, 33714, 1189, 3730, 1949, 473, 50646], "temperature": 0.0, "avg_logprob": -0.17089844471774995, "compression_ratio": 1.6456692913385826, "no_speech_prob": 0.0008425712585449219, "words": null}, {"id": 265, "seek": 136762, "start": 1346.3400000000001, "end": 1349.78, "text": " indispensabili per il corretto funzionamento del processo.", "tokens": [50646, 42937, 455, 2312, 680, 1930, 1181, 1505, 1353, 49345, 313, 8824, 1103, 27939, 13, 50818], "temperature": 0.0, "avg_logprob": -0.17089844471774995, "compression_ratio": 1.6456692913385826, "no_speech_prob": 0.0008425712585449219, "words": null}, {"id": 266, "seek": 136762, "start": 1349.78, "end": 1355.22, "text": " Nello specifico, il fenomeno si \u00e8 manifestato nel caso in cui venga calcolato l'ordinamento", "tokens": [50818, 426, 11216, 2685, 78, 11, 1930, 26830, 4726, 78, 1511, 4873, 10067, 2513, 15373, 9666, 294, 22929, 371, 31494, 2104, 8768, 2513, 287, 6, 6241, 8824, 51090], "temperature": 0.0, "avg_logprob": -0.17089844471774995, "compression_ratio": 1.6456692913385826, "no_speech_prob": 0.0008425712585449219, "words": null}, {"id": 267, "seek": 136762, "start": 1355.22, "end": 1361.1000000000001, "text": " per otto numeri, dove alcune istruzioni di confronto semplicemente mancano nell'algoritmo.", "tokens": [51090, 680, 4337, 1353, 7866, 72, 11, 23287, 20005, 2613, 1418, 894, 89, 15273, 1026, 1497, 81, 7556, 4361, 4770, 16288, 587, 18651, 44666, 6, 20422, 50017, 3280, 13, 51384], "temperature": 0.0, "avg_logprob": -0.17089844471774995, "compression_ratio": 1.6456692913385826, "no_speech_prob": 0.0008425712585449219, "words": null}, {"id": 268, "seek": 136762, "start": 1361.1000000000001, "end": 1367.6200000000001, "text": " A prima vista, questo comportamento \u00e8 apparso come un errore, ma poi, verificando meglio", "tokens": [51384, 316, 19507, 22553, 11, 10263, 25883, 8824, 4873, 45914, 539, 808, 517, 45935, 265, 11, 463, 19260, 11, 1306, 1089, 1806, 48911, 51710], "temperature": 0.0, "avg_logprob": -0.17089844471774995, "compression_ratio": 1.6456692913385826, "no_speech_prob": 0.0008425712585449219, "words": null}, {"id": 269, "seek": 139138, "start": 1367.6200000000001, "end": 1373.22, "text": " nel codice, si \u00e8 scoperto che, per via di come era strutturato il processo, per quel", "tokens": [50364, 15373, 17656, 573, 11, 1511, 4873, 795, 404, 13098, 947, 11, 680, 5766, 1026, 808, 4249, 1056, 13478, 374, 2513, 1930, 27939, 11, 680, 7178, 50644], "temperature": 0.0, "avg_logprob": -0.21235795251347803, "compression_ratio": 1.5529953917050692, "no_speech_prob": 0.313232421875, "words": null}, {"id": 270, "seek": 139138, "start": 1373.22, "end": 1377.2600000000002, "text": " particolare caso semplicemente quei confronti non servivano.", "tokens": [50644, 1276, 43141, 9666, 4361, 4770, 16288, 631, 72, 12422, 72, 2107, 1658, 592, 3730, 13, 50846], "temperature": 0.0, "avg_logprob": -0.21235795251347803, "compression_ratio": 1.5529953917050692, "no_speech_prob": 0.313232421875, "words": null}, {"id": 271, "seek": 139138, "start": 1377.2600000000002, "end": 1384.6200000000001, "text": " Se essi fossero stati implementati, infatti, avrebbero restituito un unico valore, lo stesso,", "tokens": [50846, 1100, 2097, 72, 14090, 2032, 2219, 72, 4445, 6908, 11, 1536, 21515, 11, 1305, 22692, 46659, 1472, 270, 22703, 517, 517, 2789, 1323, 418, 11, 450, 44413, 11, 51214], "temperature": 0.0, "avg_logprob": -0.21235795251347803, "compression_ratio": 1.5529953917050692, "no_speech_prob": 0.313232421875, "words": null}, {"id": 272, "seek": 139138, "start": 1384.6200000000001, "end": 1388.6200000000001, "text": " sempre, ad ogni esecuzione con qualsiasi sequenza di input.", "tokens": [51214, 9553, 11, 614, 33189, 785, 3045, 3334, 5328, 416, 421, 1124, 4609, 72, 5123, 23691, 1026, 4846, 13, 51414], "temperature": 0.0, "avg_logprob": -0.21235795251347803, "compression_ratio": 1.5529953917050692, "no_speech_prob": 0.313232421875, "words": null}, {"id": 273, "seek": 139138, "start": 1388.6200000000001, "end": 1391.38, "text": " Quindi, banalmente, erano superflui.", "tokens": [51414, 32534, 11, 5643, 304, 4082, 11, 1189, 3730, 1687, 49253, 72, 13, 51552], "temperature": 0.0, "avg_logprob": -0.21235795251347803, "compression_ratio": 1.5529953917050692, "no_speech_prob": 0.313232421875, "words": null}, {"id": 274, "seek": 140870, "start": 1391.8200000000002, "end": 1398.0200000000002, "text": " Questo fatto mostra come una intelligenza di reinforcement learning sia in grado letteralmente", "tokens": [50386, 38167, 23228, 43101, 808, 2002, 4359, 3213, 2394, 1026, 29280, 2539, 25176, 294, 677, 1573, 5063, 304, 4082, 50696], "temperature": 0.0, "avg_logprob": -0.2907986123528745, "compression_ratio": 1.4395604395604396, "no_speech_prob": 0.011505126953125, "words": null}, {"id": 275, "seek": 140870, "start": 1398.0200000000002, "end": 1403.38, "text": " di scoprire soluzioni pi\u00f9 efficienti, anche quando queste, apparendo contrarie ad ogni", "tokens": [50696, 1026, 795, 404, 38920, 1404, 3334, 15273, 10589, 7148, 72, 11, 11585, 7770, 35455, 11, 724, 543, 273, 78, 660, 5352, 414, 614, 33189, 50964], "temperature": 0.0, "avg_logprob": -0.2907986123528745, "compression_ratio": 1.4395604395604396, "no_speech_prob": 0.011505126953125, "words": null}, {"id": 276, "seek": 140870, "start": 1403.38, "end": 1408.7, "text": " logica, sono, invece, molto difficili da individuare con intuito e creativit\u00e0.", "tokens": [50964, 3565, 2262, 11, 9259, 11, 36344, 11, 16394, 2204, 2312, 1120, 2461, 84, 543, 416, 16224, 78, 308, 1428, 592, 12445, 13, 51230], "temperature": 0.0, "avg_logprob": -0.2907986123528745, "compression_ratio": 1.4395604395604396, "no_speech_prob": 0.011505126953125, "words": null}, {"id": 277, "seek": 143822, "start": 1408.7, "end": 1422.5800000000002, "text": " In DeepMind, poi, si sono concentrati particolarmente sul miglioramento degli algoritmi di ordinamento", "tokens": [50364, 682, 14895, 44, 471, 11, 19260, 11, 1511, 9259, 5512, 4481, 72, 1276, 15276, 4082, 17603, 6186, 75, 1973, 8824, 32079, 3501, 50017, 3057, 1026, 25376, 8824, 51058], "temperature": 0.0, "avg_logprob": -0.22410714172181628, "compression_ratio": 1.6076555023923444, "no_speech_prob": 0.0032215118408203125, "words": null}, {"id": 278, "seek": 143822, "start": 1422.5800000000002, "end": 1426.18, "text": " per sequenze brevi, fatte di 3-5 elementi.", "tokens": [51058, 680, 5123, 268, 1381, 1403, 4917, 11, 4046, 975, 1026, 805, 12, 20, 4478, 72, 13, 51238], "temperature": 0.0, "avg_logprob": -0.22410714172181628, "compression_ratio": 1.6076555023923444, "no_speech_prob": 0.0032215118408203125, "words": null}, {"id": 279, "seek": 143822, "start": 1426.18, "end": 1432.18, "text": " Tali algoritmi sono, infatti, tra i pi\u00f9 utilizzati, perch\u00e9 vengono spesso impiegati pi\u00f9 volte", "tokens": [51238, 314, 5103, 3501, 50017, 3057, 9259, 11, 1536, 21515, 11, 944, 741, 10589, 40355, 6908, 11, 14303, 371, 1501, 8957, 637, 5557, 704, 20408, 6908, 10589, 37801, 51538], "temperature": 0.0, "avg_logprob": -0.22410714172181628, "compression_ratio": 1.6076555023923444, "no_speech_prob": 0.0032215118408203125, "words": null}, {"id": 280, "seek": 143822, "start": 1432.18, "end": 1438.22, "text": " come parte di funzioni di ordinamento di sequenze pi\u00f9 ampie e, quindi, il loro miglioramento", "tokens": [51538, 808, 6975, 1026, 49345, 15273, 1026, 25376, 8824, 1026, 5123, 268, 1381, 10589, 18648, 414, 308, 11, 15727, 11, 1930, 28810, 6186, 75, 1973, 8824, 51840], "temperature": 0.0, "avg_logprob": -0.22410714172181628, "compression_ratio": 1.6076555023923444, "no_speech_prob": 0.0032215118408203125, "words": null}, {"id": 281, "seek": 146802, "start": 1438.22, "end": 1443.1000000000001, "text": " pu\u00f2 portare ad una velocizzazione complessiva per qualsiasi numero di elementi.", "tokens": [50364, 26526, 2436, 543, 614, 2002, 1241, 752, 537, 4313, 12928, 1209, 442, 5931, 680, 421, 1124, 4609, 72, 46839, 1026, 4478, 72, 13, 50608], "temperature": 0.0, "avg_logprob": -0.21088129646486517, "compression_ratio": 1.7116788321167884, "no_speech_prob": 0.0151824951171875, "words": null}, {"id": 282, "seek": 146802, "start": 1443.1000000000001, "end": 1448.98, "text": " Questa focalizzazione ha, quindi, portato ad un ulteriore risultato particolarmente", "tokens": [50608, 2326, 7841, 26592, 8072, 12928, 324, 11, 15727, 11, 2436, 2513, 614, 517, 20352, 34345, 418, 2253, 723, 2513, 1276, 15276, 4082, 50902], "temperature": 0.0, "avg_logprob": -0.21088129646486517, "compression_ratio": 1.7116788321167884, "no_speech_prob": 0.0151824951171875, "words": null}, {"id": 283, "seek": 146802, "start": 1448.98, "end": 1454.98, "text": " interessante che \u00e8 venuto fuori per la funzione chiamata varsort4, cio\u00e8 la funzione di ordinamento", "tokens": [50902, 24372, 947, 4873, 6138, 8262, 8536, 7386, 680, 635, 1019, 19706, 417, 2918, 3274, 46130, 477, 19, 11, 41827, 635, 1019, 19706, 1026, 25376, 8824, 51202], "temperature": 0.0, "avg_logprob": -0.21088129646486517, "compression_ratio": 1.7116788321167884, "no_speech_prob": 0.0151824951171875, "words": null}, {"id": 284, "seek": 146802, "start": 1454.98, "end": 1457.02, "text": " di liste di 4 elementi.", "tokens": [51202, 1026, 1329, 68, 1026, 1017, 4478, 72, 13, 51304], "temperature": 0.0, "avg_logprob": -0.21088129646486517, "compression_ratio": 1.7116788321167884, "no_speech_prob": 0.0151824951171875, "words": null}, {"id": 285, "seek": 146802, "start": 1457.02, "end": 1462.3, "text": " Come accennavamo poco fa, nei moderni linguaggi di programmazione, la funzione normalmente", "tokens": [51304, 2492, 1317, 268, 629, 85, 10502, 10639, 2050, 11, 34517, 4363, 72, 21766, 46893, 1026, 37648, 12928, 11, 635, 1019, 19706, 38217, 51568], "temperature": 0.0, "avg_logprob": -0.21088129646486517, "compression_ratio": 1.7116788321167884, "no_speech_prob": 0.0151824951171875, "words": null}, {"id": 286, "seek": 146802, "start": 1462.3, "end": 1468.02, "text": " invocata per l'ordinamento, che di solito si chiama sort o qualcosa del genere, nasconde", "tokens": [51568, 1048, 905, 3274, 680, 287, 6, 6241, 8824, 11, 947, 1026, 1404, 3528, 1511, 13228, 2404, 1333, 277, 42400, 1103, 41553, 11, 297, 4806, 7259, 51854], "temperature": 0.0, "avg_logprob": -0.21088129646486517, "compression_ratio": 1.7116788321167884, "no_speech_prob": 0.0151824951171875, "words": null}, {"id": 287, "seek": 149590, "start": 1468.02, "end": 1473.02, "text": " in realt\u00e0 una serie di funzioni diverse al proprio interno, che vengono impiegate", "tokens": [50364, 294, 47512, 2002, 23030, 1026, 49345, 15273, 9521, 419, 28203, 728, 1771, 11, 947, 371, 1501, 8957, 704, 20408, 473, 50614], "temperature": 0.0, "avg_logprob": -0.2156249945362409, "compression_ratio": 1.7046413502109705, "no_speech_prob": 0.0009398460388183594, "words": null}, {"id": 288, "seek": 149590, "start": 1473.02, "end": 1475.74, "text": " a seconda del numero di elementi da ordinare.", "tokens": [50614, 257, 1150, 64, 1103, 46839, 1026, 4478, 72, 1120, 25376, 543, 13, 50750], "temperature": 0.0, "avg_logprob": -0.2156249945362409, "compression_ratio": 1.7046413502109705, "no_speech_prob": 0.0009398460388183594, "words": null}, {"id": 289, "seek": 149590, "start": 1475.74, "end": 1482.1399999999999, "text": " In pratica, ci\u00f2 vuol dire che se io da programmatore utilizzo la funzione sort, questa a sua volta", "tokens": [50750, 682, 28844, 2262, 11, 6983, 4293, 9732, 401, 1264, 947, 369, 19785, 1120, 37648, 43148, 19906, 4765, 635, 1019, 19706, 1333, 11, 16540, 257, 8233, 18765, 51070], "temperature": 0.0, "avg_logprob": -0.2156249945362409, "compression_ratio": 1.7046413502109705, "no_speech_prob": 0.0009398460388183594, "words": null}, {"id": 290, "seek": 149590, "start": 1482.1399999999999, "end": 1489.22, "text": " conta gli elementi da ordinare e se sono 2 invoca sort2, se sono 3 invoca sort3, se", "tokens": [51070, 24001, 17161, 4478, 72, 1120, 25376, 543, 308, 369, 9259, 568, 1048, 24035, 1333, 17, 11, 369, 9259, 805, 1048, 24035, 1333, 18, 11, 369, 51424], "temperature": 0.0, "avg_logprob": -0.2156249945362409, "compression_ratio": 1.7046413502109705, "no_speech_prob": 0.0009398460388183594, "words": null}, {"id": 291, "seek": 149590, "start": 1489.22, "end": 1495.9, "text": " sono 4 sort4 e cos\u00ec via, fino ad un certo numero che varia a seconda dell'implementazione.", "tokens": [51424, 9259, 1017, 1333, 19, 308, 23278, 5766, 11, 42560, 614, 517, 22261, 46839, 947, 1374, 654, 257, 1150, 64, 19781, 6, 332, 43704, 12928, 13, 51758], "temperature": 0.0, "avg_logprob": -0.2156249945362409, "compression_ratio": 1.7046413502109705, "no_speech_prob": 0.0009398460388183594, "words": null}, {"id": 292, "seek": 152346, "start": 1496.3000000000002, "end": 1502.18, "text": " Poi, superato tale numero, vengono utilizzate combinazioni di tutte queste funzioni per", "tokens": [50384, 430, 4869, 11, 1687, 2513, 17172, 46839, 11, 371, 1501, 8957, 40355, 473, 38514, 27569, 1026, 38632, 35455, 49345, 15273, 680, 50678], "temperature": 0.0, "avg_logprob": -0.23332458484072646, "compression_ratio": 1.5761316872427984, "no_speech_prob": 0.0002913475036621094, "words": null}, {"id": 293, "seek": 152346, "start": 1502.18, "end": 1503.66, "text": " sequenze pi\u00f9 piccole.", "tokens": [50678, 5123, 268, 1381, 10589, 13363, 27247, 13, 50752], "temperature": 0.0, "avg_logprob": -0.23332458484072646, "compression_ratio": 1.5761316872427984, "no_speech_prob": 0.0002913475036621094, "words": null}, {"id": 294, "seek": 152346, "start": 1503.66, "end": 1512.9, "text": " Ebbene, Alphadev ha scoperto che per una lista di 4 elementi questo non \u00e8 il modo pi\u00f9 efficiente", "tokens": [50752, 462, 6692, 1450, 11, 967, 950, 762, 85, 324, 795, 404, 13098, 947, 680, 2002, 27764, 1026, 1017, 4478, 72, 10263, 2107, 4873, 1930, 16664, 10589, 7148, 68, 51214], "temperature": 0.0, "avg_logprob": -0.23332458484072646, "compression_ratio": 1.5761316872427984, "no_speech_prob": 0.0002913475036621094, "words": null}, {"id": 295, "seek": 152346, "start": 1512.9, "end": 1514.94, "text": " di procedere, almeno in assembly.", "tokens": [51214, 1026, 6682, 323, 11, 419, 43232, 294, 5907, 2504, 356, 13, 51316], "temperature": 0.0, "avg_logprob": -0.23332458484072646, "compression_ratio": 1.5761316872427984, "no_speech_prob": 0.0002913475036621094, "words": null}, {"id": 296, "seek": 152346, "start": 1514.94, "end": 1518.42, "text": " Al contrario, ha utilizzato il seguente approccio.", "tokens": [51316, 967, 47642, 11, 324, 40355, 2513, 1930, 8878, 1576, 2075, 66, 8529, 13, 51490], "temperature": 0.0, "avg_logprob": -0.23332458484072646, "compression_ratio": 1.5761316872427984, "no_speech_prob": 0.0002913475036621094, "words": null}, {"id": 297, "seek": 152346, "start": 1518.42, "end": 1523.46, "text": " Come gi\u00e0 noto, se gli elementi sono 2 chiama la funzione varsort2, se gli elementi sono", "tokens": [51490, 2492, 30469, 406, 78, 11, 369, 17161, 4478, 72, 9259, 568, 13228, 2404, 635, 1019, 19706, 46130, 477, 17, 11, 369, 17161, 4478, 72, 9259, 51742], "temperature": 0.0, "avg_logprob": -0.23332458484072646, "compression_ratio": 1.5761316872427984, "no_speech_prob": 0.0002913475036621094, "words": null}, {"id": 298, "seek": 155066, "start": 1523.46, "end": 1531.18, "text": " 3 chiama varsort3, ma se gli elementi sono pi\u00f9 di 3 chiama comunque varsort3 sui primi", "tokens": [50364, 805, 13228, 2404, 46130, 477, 18, 11, 463, 369, 17161, 4478, 72, 9259, 10589, 1026, 805, 13228, 2404, 45736, 46130, 477, 18, 459, 72, 2886, 72, 50750], "temperature": 0.0, "avg_logprob": -0.21114131134489308, "compression_ratio": 1.617117117117117, "no_speech_prob": 0.2091064453125, "words": null}, {"id": 299, "seek": 155066, "start": 1531.18, "end": 1539.7, "text": " tre elementi e poi invoca una versione semplificata di varsort4 che lavora sul risultato parzialmente", "tokens": [50750, 2192, 4478, 72, 308, 19260, 1048, 24035, 2002, 3037, 68, 4361, 564, 1089, 3274, 1026, 46130, 477, 19, 947, 20923, 3252, 17603, 2253, 723, 2513, 971, 17787, 4082, 51176], "temperature": 0.0, "avg_logprob": -0.21114131134489308, "compression_ratio": 1.617117117117117, "no_speech_prob": 0.2091064453125, "words": null}, {"id": 300, "seek": 155066, "start": 1539.7, "end": 1541.42, "text": " ordinato da varsort3.", "tokens": [51176, 25376, 2513, 1120, 46130, 477, 18, 13, 51262], "temperature": 0.0, "avg_logprob": -0.21114131134489308, "compression_ratio": 1.617117117117117, "no_speech_prob": 0.2091064453125, "words": null}, {"id": 301, "seek": 155066, "start": 1541.42, "end": 1546.54, "text": " Ok, lo so che \u00e8 un processo un po' complicato da descrivere a parole e da immaginare, ma", "tokens": [51262, 3477, 11, 450, 370, 947, 4873, 517, 27939, 517, 714, 6, 16060, 2513, 1120, 2189, 5887, 257, 26783, 308, 1120, 3397, 559, 259, 543, 11, 463, 51518], "temperature": 0.0, "avg_logprob": -0.21114131134489308, "compression_ratio": 1.617117117117117, "no_speech_prob": 0.2091064453125, "words": null}, {"id": 302, "seek": 155066, "start": 1546.54, "end": 1550.66, "text": " se vuoi trovi un semplice schema nel paper alla figura 4.", "tokens": [51518, 369, 9732, 4869, 4495, 4917, 517, 4361, 564, 573, 34078, 15373, 3035, 11591, 44691, 1017, 13, 51724], "temperature": 0.0, "avg_logprob": -0.21114131134489308, "compression_ratio": 1.617117117117117, "no_speech_prob": 0.2091064453125, "words": null}, {"id": 303, "seek": 157902, "start": 1551.1000000000001, "end": 1557.5, "text": " Ad ogni modo, cambiando questa strategia che prima era considerata basilare e ovvia quasi", "tokens": [50386, 1999, 33189, 16664, 11, 19569, 1806, 16540, 5464, 654, 947, 19507, 4249, 1949, 3274, 987, 388, 543, 308, 14187, 11617, 20954, 50706], "temperature": 0.0, "avg_logprob": -0.23936169499412496, "compression_ratio": 1.4788732394366197, "no_speech_prob": 0.011505126953125, "words": null}, {"id": 304, "seek": 157902, "start": 1557.5, "end": 1562.98, "text": " scontata, si \u00e8 scoperto che si ottiene un notevole incremento in termini di velocit\u00e0", "tokens": [50706, 795, 896, 3274, 11, 1511, 4873, 795, 404, 13098, 947, 1511, 42772, 10174, 517, 3637, 3080, 306, 26200, 78, 294, 1433, 3812, 1026, 7806, 12445, 50980], "temperature": 0.0, "avg_logprob": -0.23936169499412496, "compression_ratio": 1.4788732394366197, "no_speech_prob": 0.011505126953125, "words": null}, {"id": 305, "seek": 157902, "start": 1562.98, "end": 1566.6200000000001, "text": " complessiva e quindi di efficienza dell'algoritmo.", "tokens": [50980, 1209, 442, 5931, 308, 15727, 1026, 4703, 42331, 19781, 6, 20422, 50017, 3280, 13, 51162], "temperature": 0.0, "avg_logprob": -0.23936169499412496, "compression_ratio": 1.4788732394366197, "no_speech_prob": 0.011505126953125, "words": null}, {"id": 306, "seek": 157902, "start": 1574.5, "end": 1579.02, "text": " Insomma, migliorando uno degli algoritmi pi\u00f9 utilizzati dagli sviluppatori di tutto il", "tokens": [51556, 9442, 30243, 11, 6186, 75, 1973, 1806, 8526, 32079, 3501, 50017, 3057, 10589, 40355, 6908, 15460, 2081, 17342, 388, 10504, 39842, 1026, 23048, 1930, 51782], "temperature": 0.0, "avg_logprob": -0.23936169499412496, "compression_ratio": 1.4788732394366197, "no_speech_prob": 0.011505126953125, "words": null}, {"id": 307, "seek": 160854, "start": 1579.02, "end": 1584.3, "text": " mondo, Alphadev va dimostrato come un'intelligenza artificiale e pu\u00f2 essere utilizzata in modo", "tokens": [50364, 40499, 11, 967, 950, 762, 85, 2773, 5013, 555, 43037, 808, 517, 6, 20761, 3213, 2394, 11677, 68, 308, 26526, 19799, 40355, 3274, 294, 16664, 50628], "temperature": 0.0, "avg_logprob": -0.1756535908755134, "compression_ratio": 1.6433333333333333, "no_speech_prob": 0.0306549072265625, "words": null}, {"id": 308, "seek": 160854, "start": 1584.3, "end": 1587.82, "text": " da avere un impatto positivo e reale sulle nostre vite.", "tokens": [50628, 1120, 37914, 517, 31156, 1353, 44710, 308, 957, 68, 459, 2447, 10397, 265, 24462, 13, 50804], "temperature": 0.0, "avg_logprob": -0.1756535908755134, "compression_ratio": 1.6433333333333333, "no_speech_prob": 0.0306549072265625, "words": null}, {"id": 309, "seek": 160854, "start": 1587.82, "end": 1592.98, "text": " Utilizzandolo in questo modo, questo motore di Machine Learning pu\u00f2 rappresentare un'arma", "tokens": [50804, 12555, 388, 8072, 474, 7902, 294, 10263, 16664, 11, 10263, 2184, 418, 1026, 22155, 15205, 26526, 8125, 11662, 543, 517, 6, 36159, 51062], "temperature": 0.0, "avg_logprob": -0.1756535908755134, "compression_ratio": 1.6433333333333333, "no_speech_prob": 0.0306549072265625, "words": null}, {"id": 310, "seek": 160854, "start": 1592.98, "end": 1598.3, "text": " potentissima nello sviluppo di strumenti che contribuiscono a migliorare l'intero panorama", "tokens": [51062, 27073, 891, 4775, 408, 1913, 17342, 388, 10504, 78, 1026, 1056, 2206, 72, 947, 4226, 8479, 45846, 257, 6186, 75, 1973, 543, 287, 6, 5106, 78, 2462, 32988, 51328], "temperature": 0.0, "avg_logprob": -0.1756535908755134, "compression_ratio": 1.6433333333333333, "no_speech_prob": 0.0306549072265625, "words": null}, {"id": 311, "seek": 160854, "start": 1598.3, "end": 1602.58, "text": " informatico e a risolvere problemi a vantaggio dell'intera societ\u00e0.", "tokens": [51328, 1356, 2399, 78, 308, 257, 2253, 401, 5887, 1154, 72, 257, 371, 394, 30763, 19781, 6, 5106, 64, 14051, 1467, 13, 51542], "temperature": 0.0, "avg_logprob": -0.1756535908755134, "compression_ratio": 1.6433333333333333, "no_speech_prob": 0.0306549072265625, "words": null}, {"id": 312, "seek": 160854, "start": 1602.58, "end": 1608.54, "text": " Migliorando Alphadev, o addirittura sviluppando dei competitor pi\u00f9 potenti, si potrebbero", "tokens": [51542, 18951, 75, 1973, 1806, 967, 950, 762, 85, 11, 277, 909, 347, 593, 2991, 17342, 388, 10504, 1806, 13874, 27266, 10589, 1847, 23012, 11, 1511, 1847, 22692, 46659, 51840], "temperature": 0.0, "avg_logprob": -0.1756535908755134, "compression_ratio": 1.6433333333333333, "no_speech_prob": 0.0306549072265625, "words": null}, {"id": 313, "seek": 163474, "start": 1608.54, "end": 1614.02, "text": " ottimizzare algoritmi direttamente nei vari linguaggi ad alto livello e ci\u00f2 potrebbe", "tokens": [50364, 4337, 31208, 8072, 543, 3501, 50017, 3057, 1264, 6319, 3439, 34517, 3034, 21766, 46893, 614, 21275, 1621, 1913, 308, 6983, 4293, 1847, 39487, 50638], "temperature": 0.0, "avg_logprob": -0.1986268928105181, "compression_ratio": 1.4928057553956835, "no_speech_prob": 0.0226287841796875, "words": null}, {"id": 314, "seek": 163474, "start": 1614.02, "end": 1617.34, "text": " risultare ancora pi\u00f9 utile nel mondo dello sviluppo software.", "tokens": [50638, 2253, 723, 543, 30656, 10589, 2839, 794, 15373, 40499, 368, 1913, 17342, 388, 10504, 78, 4722, 13, 50804], "temperature": 0.0, "avg_logprob": -0.1986268928105181, "compression_ratio": 1.4928057553956835, "no_speech_prob": 0.0226287841796875, "words": null}, {"id": 315, "seek": 163474, "start": 1617.34, "end": 1624.26, "text": " Ma anche cos\u00ec, le creazioni di Alphadev, come le Swap & Copy Moves o la Varsort 4, non solo", "tokens": [50804, 4042, 11585, 23278, 11, 476, 1197, 27569, 1026, 967, 950, 762, 85, 11, 808, 476, 3926, 569, 3693, 25653, 3335, 977, 277, 635, 691, 685, 477, 1017, 11, 2107, 6944, 51150], "temperature": 0.0, "avg_logprob": -0.1986268928105181, "compression_ratio": 1.4928057553956835, "no_speech_prob": 0.0226287841796875, "words": null}, {"id": 316, "seek": 163474, "start": 1624.26, "end": 1629.18, "text": " dimostrano che esso pu\u00f2 migliorare un algoritmo esistente, ma addirittura che \u00e8 in grado", "tokens": [51150, 5013, 555, 81, 3730, 947, 2097, 78, 26526, 6186, 75, 1973, 543, 517, 3501, 50017, 3280, 785, 468, 1576, 11, 463, 909, 347, 593, 2991, 947, 4873, 294, 677, 1573, 51396], "temperature": 0.0, "avg_logprob": -0.1986268928105181, "compression_ratio": 1.4928057553956835, "no_speech_prob": 0.0226287841796875, "words": null}, {"id": 317, "seek": 163474, "start": 1629.18, "end": 1634.74, "text": " di trovare nuove soluzioni del tutto innovative a problemi di complessit\u00e0 enorme.", "tokens": [51396, 1026, 35449, 543, 3822, 1682, 1404, 3334, 15273, 1103, 23048, 12999, 257, 1154, 72, 1026, 1209, 442, 12445, 33648, 13, 51674], "temperature": 0.0, "avg_logprob": -0.1986268928105181, "compression_ratio": 1.4928057553956835, "no_speech_prob": 0.0226287841796875, "words": null}, {"id": 318, "seek": 165710, "start": 1635.18, "end": 1641.86, "text": " E questa cosa \u00e8 possibile perch\u00e9, a differenza dei large language model come ChatGPT, gli", "tokens": [50386, 462, 16540, 10163, 4873, 50184, 14303, 11, 257, 743, 23691, 13874, 2416, 2856, 2316, 808, 27503, 38, 47, 51, 11, 17161, 50720], "temperature": 0.0, "avg_logprob": -0.2895569484445113, "compression_ratio": 1.425, "no_speech_prob": 0.010650634765625, "words": null}, {"id": 319, "seek": 165710, "start": 1641.86, "end": 1648.34, "text": " algoritmi di Deep Reinforcement Learning come Alphadev sono in grado realmente di creare", "tokens": [50720, 3501, 50017, 3057, 1026, 14895, 42116, 9382, 15205, 808, 967, 950, 762, 85, 9259, 294, 677, 1573, 14446, 1026, 1197, 543, 51044], "temperature": 0.0, "avg_logprob": -0.2895569484445113, "compression_ratio": 1.425, "no_speech_prob": 0.010650634765625, "words": null}, {"id": 320, "seek": 165710, "start": 1648.34, "end": 1656.1, "text": " qualcosa di nuovo, di inventare soluzioni e non solo di riprodurre quello che \u00e8 il comportamento", "tokens": [51044, 42400, 1026, 49348, 11, 1026, 7962, 543, 1404, 3334, 15273, 308, 2107, 6944, 1026, 12782, 11452, 374, 265, 22813, 947, 4873, 1930, 25883, 8824, 51432], "temperature": 0.0, "avg_logprob": -0.2895569484445113, "compression_ratio": 1.425, "no_speech_prob": 0.010650634765625, "words": null}, {"id": 321, "seek": 165710, "start": 1656.1, "end": 1657.1, "text": " umano.", "tokens": [51432, 1105, 3730, 13, 51482], "temperature": 0.0, "avg_logprob": -0.2895569484445113, "compression_ratio": 1.425, "no_speech_prob": 0.010650634765625, "words": null}, {"id": 322, "seek": 168530, "start": 1657.1000000000001, "end": 1667.46, "text": " Bene, finisce qui l'episodio di oggi.", "tokens": [50364, 27702, 11, 962, 49596, 1956, 287, 6, 595, 271, 378, 1004, 1026, 34768, 13, 50882], "temperature": 0.0, "avg_logprob": -0.21043577434819774, "compression_ratio": 1.5352112676056338, "no_speech_prob": 0.2169189453125, "words": null}, {"id": 323, "seek": 168530, "start": 1667.46, "end": 1672.22, "text": " Per tutti i dettagli riguardanti la notizia, l'algoritmo, eccetera, ti rimando ovviamente", "tokens": [50882, 3026, 19822, 741, 1141, 25030, 2081, 8329, 16981, 11520, 635, 406, 590, 654, 11, 287, 6, 20422, 50017, 3280, 11, 29613, 20269, 11, 8757, 15982, 1806, 14187, 23347, 51120], "temperature": 0.0, "avg_logprob": -0.21043577434819774, "compression_ratio": 1.5352112676056338, "no_speech_prob": 0.2169189453125, "words": null}, {"id": 324, "seek": 168530, "start": 1672.22, "end": 1673.7800000000002, "text": " ai link in descrizione.", "tokens": [51120, 9783, 2113, 294, 2189, 19706, 13, 51198], "temperature": 0.0, "avg_logprob": -0.21043577434819774, "compression_ratio": 1.5352112676056338, "no_speech_prob": 0.2169189453125, "words": null}, {"id": 325, "seek": 168530, "start": 1673.7800000000002, "end": 1680.14, "text": " Ringrazio come sempre Edoardo e Carlo per la loro donazione mensile e poi Corrado che", "tokens": [51198, 19844, 30695, 1004, 808, 9553, 462, 2595, 12850, 308, 45112, 680, 635, 28810, 500, 12928, 10923, 794, 308, 19260, 3925, 14974, 947, 51516], "temperature": 0.0, "avg_logprob": -0.21043577434819774, "compression_ratio": 1.5352112676056338, "no_speech_prob": 0.2169189453125, "words": null}, {"id": 326, "seek": 168530, "start": 1680.14, "end": 1685.3000000000002, "text": " ha fatto la sua donazione ormai ben due mesi fa, ma io sono super ingolfato e ci ho messo", "tokens": [51516, 324, 23228, 635, 8233, 500, 12928, 420, 76, 1301, 3271, 3462, 3813, 72, 2050, 11, 463, 19785, 9259, 1687, 3957, 7491, 2513, 308, 6983, 1106, 2082, 78, 51774], "temperature": 0.0, "avg_logprob": -0.21043577434819774, "compression_ratio": 1.5352112676056338, "no_speech_prob": 0.2169189453125, "words": null}, {"id": 327, "seek": 171346, "start": 1685.3, "end": 1687.26, "text": " una vita a far uscire questo episodio.", "tokens": [50364, 2002, 32712, 257, 1400, 505, 537, 265, 10263, 39200, 1004, 13, 50462], "temperature": 0.0, "avg_logprob": -0.21832770713277766, "compression_ratio": 1.6142857142857143, "no_speech_prob": 0.70263671875, "words": null}, {"id": 328, "seek": 171346, "start": 1687.26, "end": 1693.46, "text": " A proposito, in queste settimane ho preparato una roba interessantissima, ma che per ora", "tokens": [50462, 316, 7532, 3528, 11, 294, 35455, 5584, 332, 1929, 1106, 8231, 2513, 2002, 3870, 64, 37748, 891, 4775, 11, 463, 947, 680, 33714, 50772], "temperature": 0.0, "avg_logprob": -0.21832770713277766, "compression_ratio": 1.6142857142857143, "no_speech_prob": 0.70263671875, "words": null}, {"id": 329, "seek": 171346, "start": 1693.46, "end": 1694.46, "text": " \u00e8 top secret.", "tokens": [50772, 4873, 1192, 4054, 13, 50822], "temperature": 0.0, "avg_logprob": -0.21832770713277766, "compression_ratio": 1.6142857142857143, "no_speech_prob": 0.70263671875, "words": null}, {"id": 330, "seek": 171346, "start": 1694.46, "end": 1698.46, "text": " Se riesco spero di pubblicarla gi\u00e0 al prossimo episodio.", "tokens": [50822, 1100, 23932, 1291, 24152, 78, 1026, 1535, 11489, 34148, 30469, 419, 48794, 6934, 39200, 1004, 13, 51022], "temperature": 0.0, "avg_logprob": -0.21832770713277766, "compression_ratio": 1.6142857142857143, "no_speech_prob": 0.70263671875, "words": null}, {"id": 331, "seek": 171346, "start": 1698.46, "end": 1703.58, "text": " Tu intanto, se apprezzi il mio lavoro, fai come Carlo, Edoardo e Corrado e dimostralo", "tokens": [51022, 7836, 560, 5857, 11, 369, 724, 17693, 3992, 1930, 29908, 42060, 11, 283, 1301, 808, 45112, 11, 462, 2595, 12850, 308, 3925, 14974, 308, 5013, 555, 2155, 78, 51278], "temperature": 0.0, "avg_logprob": -0.21832770713277766, "compression_ratio": 1.6142857142857143, "no_speech_prob": 0.70263671875, "words": null}, {"id": 332, "seek": 171346, "start": 1703.58, "end": 1704.6599999999999, "text": " concretamente.", "tokens": [51278, 39481, 3439, 13, 51332], "temperature": 0.0, "avg_logprob": -0.21832770713277766, "compression_ratio": 1.6142857142857143, "no_speech_prob": 0.70263671875, "words": null}, {"id": 333, "seek": 171346, "start": 1704.6599999999999, "end": 1710.46, "text": " Sul sito Pensieri in Codice trovi tutti gli episodi, tutti i link per le donazioni, le", "tokens": [51332, 35897, 1394, 78, 45035, 45980, 294, 383, 378, 573, 4495, 4917, 19822, 17161, 2927, 30727, 11, 19822, 741, 2113, 680, 476, 500, 27569, 11, 476, 51622], "temperature": 0.0, "avg_logprob": -0.21832770713277766, "compression_ratio": 1.6142857142857143, "no_speech_prob": 0.70263671875, "words": null}, {"id": 334, "seek": 171346, "start": 1710.46, "end": 1713.46, "text": " affiliazioni, il gruppo Telegram, il canale Telegram, eccetera.", "tokens": [51622, 2096, 24169, 89, 15273, 11, 1930, 47477, 78, 14889, 1342, 11, 1930, 393, 1220, 14889, 1342, 11, 29613, 20269, 13, 51772], "temperature": 0.0, "avg_logprob": -0.21832770713277766, "compression_ratio": 1.6142857142857143, "no_speech_prob": 0.70263671875, "words": null}, {"id": 335, "seek": 174082, "start": 1713.6200000000001, "end": 1719.54, "text": " E in pi\u00f9, da oggi, se doni pi\u00f9 di 10\u20ac, anche accumulando pi\u00f9 donazioni e conteggiando", "tokens": [50372, 462, 294, 10589, 11, 1120, 34768, 11, 369, 500, 72, 10589, 1026, 1266, 28197, 11, 11585, 12989, 425, 1806, 10589, 500, 27569, 308, 660, 1146, 7834, 1806, 50668], "temperature": 0.0, "avg_logprob": -0.18860035798919034, "compression_ratio": 1.555956678700361, "no_speech_prob": 0.117431640625, "words": null}, {"id": 336, "seek": 174082, "start": 1719.54, "end": 1724.78, "text": " le donazioni passate, ricevi a casa tutti gli adesivi e il segnalibro con le nuove", "tokens": [50668, 476, 500, 27569, 1320, 473, 11, 5090, 4917, 257, 9022, 19822, 17161, 614, 279, 33448, 308, 1930, 3896, 4660, 897, 340, 416, 476, 3822, 1682, 50930], "temperature": 0.0, "avg_logprob": -0.18860035798919034, "compression_ratio": 1.555956678700361, "no_speech_prob": 0.117431640625, "words": null}, {"id": 337, "seek": 174082, "start": 1724.78, "end": 1725.78, "text": " grafiche.", "tokens": [50930, 1295, 69, 9304, 13, 50980], "temperature": 0.0, "avg_logprob": -0.18860035798919034, "compression_ratio": 1.555956678700361, "no_speech_prob": 0.117431640625, "words": null}, {"id": 338, "seek": 174082, "start": 1725.78, "end": 1729.02, "text": " Basta che mi scrivi il tuo indirizzo per email o su Telegram.", "tokens": [50980, 363, 12468, 947, 2752, 5545, 4917, 1930, 45352, 1016, 347, 590, 4765, 680, 3796, 277, 459, 14889, 1342, 13, 51142], "temperature": 0.0, "avg_logprob": -0.18860035798919034, "compression_ratio": 1.555956678700361, "no_speech_prob": 0.117431640625, "words": null}, {"id": 339, "seek": 174082, "start": 1729.02, "end": 1734.22, "text": " A proposito poi di Telegram, ti ricordo che l'accesso al gruppo di Pensieri in Codice", "tokens": [51142, 316, 7532, 3528, 19260, 1026, 14889, 1342, 11, 8757, 21040, 23872, 947, 287, 6, 326, 43611, 419, 47477, 78, 1026, 45035, 45980, 294, 383, 378, 573, 51402], "temperature": 0.0, "avg_logprob": -0.18860035798919034, "compression_ratio": 1.555956678700361, "no_speech_prob": 0.117431640625, "words": null}, {"id": 340, "seek": 174082, "start": 1734.22, "end": 1740.82, "text": " \u00e8 su autorizzazione per via dei bot che infestano la piattaforma, quindi ti consiglio di scrivermi", "tokens": [51402, 4873, 459, 19510, 8072, 12928, 680, 5766, 13874, 10592, 947, 1536, 377, 3730, 635, 3895, 18405, 837, 64, 11, 15727, 8757, 40233, 19987, 1026, 5545, 331, 3057, 51732], "temperature": 0.0, "avg_logprob": -0.18860035798919034, "compression_ratio": 1.555956678700361, "no_speech_prob": 0.117431640625, "words": null}, {"id": 341, "seek": 177082, "start": 1740.82, "end": 1745.1, "text": " per velocizzare le procedure di verifica, ti basta cercare chiocciola valerio galano", "tokens": [50364, 680, 1241, 752, 537, 4313, 543, 476, 10747, 1026, 1306, 43377, 11, 8757, 45282, 10146, 5685, 13228, 905, 537, 4711, 1323, 260, 1004, 7660, 3730, 50578], "temperature": 0.0, "avg_logprob": -0.21122685543916844, "compression_ratio": 1.7137931034482758, "no_speech_prob": 0.157958984375, "words": null}, {"id": 342, "seek": 177082, "start": 1745.1, "end": 1748.1, "text": " direttamente nella casella di ricerca di Telegram.", "tokens": [50578, 1264, 6319, 3439, 23878, 1389, 3505, 1026, 21040, 36127, 1026, 14889, 1342, 13, 50728], "temperature": 0.0, "avg_logprob": -0.21122685543916844, "compression_ratio": 1.7137931034482758, "no_speech_prob": 0.157958984375, "words": null}, {"id": 343, "seek": 177082, "start": 1748.1, "end": 1753.8999999999999, "text": " Infine, non dimenticare di condividere l'episodio con amici, parenti, gruppi, eccetera, che", "tokens": [50728, 11537, 533, 11, 2107, 274, 2328, 299, 543, 1026, 2224, 1843, 323, 287, 6, 595, 271, 378, 1004, 416, 669, 8787, 11, 2596, 72, 11, 47477, 72, 11, 29613, 20269, 11, 947, 51018], "temperature": 0.0, "avg_logprob": -0.21122685543916844, "compression_ratio": 1.7137931034482758, "no_speech_prob": 0.157958984375, "words": null}, {"id": 344, "seek": 177082, "start": 1753.8999999999999, "end": 1758.58, "text": " come al solito io cerco di farti fare bella figura e a te spargere la voce non costa", "tokens": [51018, 808, 419, 1404, 3528, 19785, 10146, 1291, 1026, 24575, 72, 11994, 312, 3505, 44691, 308, 257, 535, 637, 33544, 323, 635, 1650, 384, 2107, 2063, 64, 51252], "temperature": 0.0, "avg_logprob": -0.21122685543916844, "compression_ratio": 1.7137931034482758, "no_speech_prob": 0.157958984375, "words": null}, {"id": 345, "seek": 177082, "start": 1758.58, "end": 1759.58, "text": " nulla.", "tokens": [51252, 18184, 64, 13, 51302], "temperature": 0.0, "avg_logprob": -0.21122685543916844, "compression_ratio": 1.7137931034482758, "no_speech_prob": 0.157958984375, "words": null}, {"id": 346, "seek": 177082, "start": 1759.58, "end": 1764.46, "text": " E basta, grazie per aver ascoltato fin qui, noi ci sentiamo al prossimo episodio e tu non", "tokens": [51302, 462, 45282, 11, 1295, 3283, 680, 18247, 15526, 4837, 2513, 962, 1956, 11, 22447, 6983, 2279, 7415, 419, 48794, 6934, 39200, 1004, 308, 2604, 2107, 51546], "temperature": 0.0, "avg_logprob": -0.21122685543916844, "compression_ratio": 1.7137931034482758, "no_speech_prob": 0.157958984375, "words": null}, {"id": 347, "seek": 177082, "start": 1764.46, "end": 1769.78, "text": " dimenticare mai che un informatico risolve problemi, a volte, anche usando il computer.", "tokens": [51546, 274, 2328, 299, 543, 12698, 947, 517, 1356, 2399, 78, 2253, 37361, 1154, 72, 11, 257, 37801, 11, 11585, 29798, 1930, 3820, 13, 51812], "temperature": 0.0, "avg_logprob": -0.21122685543916844, "compression_ratio": 1.7137931034482758, "no_speech_prob": 0.157958984375, "words": null}], "language": "Italian"}