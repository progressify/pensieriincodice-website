{"text": " Pensieri in codice. Idee dal mondo del software a cura di Valerio Galano. Salve a tutti ragazzi e bentornati su Pensieri in codice. Non capita spesso di poter definire avvicente una storia di informatica o di informatici. Tuttavia qualche settimana fa mi \u00e8 capitato di leggere un interessante articolo su Medium in cui l'autore Alex Birsan descriveva il modo in cui ha hackerato oltre 35 aziende grazie ad un particolare tipo di attacco informatico da lui inventato. Questo attacco si basa su di una tecnica di uso estremamente comune nella moderna programmazione e leggerne la descrizione e il tasso di successo mi ha fatto riflettere su alcuni aspetti del modo in cui si sviluppa il software oggigiorno. Come vedremo fra poco l'attacco \u00e8 stato s\u00ec eseguito sfruttando degli specifici linguaggi di programmazione, ma il concetto alla base \u00e8 molto ampio e pu\u00f2 essere facilmente esteso ad altri linguaggi e ad altri livelli dello sviluppo software. Quindi nell'episodio di oggi parleremo di come \u00e8 avvenuto questo attacco, del perch\u00e9 \u00e8 stato eseguito, di che cosa lo ha reso possibile e infine di come questa storia debba servire da lezione a tutti noi sviluppatori. Alex Birsan \u00e8 un cacciatore di bug. Ci\u00f2 vuol dire che il suo lavoro, o almeno parte di esso, consiste nel cercare i bug nei software e nelle piattaforme online. Molte aziende infatti premiano i ricercatori che scovano falle nei loro sistemi. Grosse realt\u00e0 come Google, Apple e altri hanno dei programmi di bug counting ai quali \u00e8 possibile partecipare e che elargiscono compensi in base alle entit\u00e0 dei bug individuati. E cos\u00ec, alla sua ennesima esperienza alla ricerca di bug, Alex ha ben pensato di provare a sfruttare un concetto che nella programmazione moderna \u00e8 ampiamente diffuso e cio\u00e8 il concetto di dipendenza. Quando in informatica si parla di dipendenza, solitamente si intende il fatto che un componente o un software sfrutta le funzionalit\u00e0 di un altro componente o software per svolgere le proprie attivit\u00e0. In altre parole, per fare un esempio semplice e pratico, \u00e8 molto comune che un programma o un sito web utilizzi porzioni di codice create in precedenza da altre persone. Tali codici vengono comunemente definiti librerie e i loro autori li creano tendenzialmente o per soddisfare necessit\u00e0 abbastanza comuni o per condividere funzionalit\u00e0 fra pi\u00f9 software. In generale, quando un programma o una piattaforma per funzionare includono al proprio interno delle librerie, si dice che queste rappresentano delle dipendenze per il progetto. Ora, inizialmente, e con inizialmente intendo 10, forse 15 o 20 anni fa, le dipendenze si concretizzavano con il copiare materialmente il codice delle librerie necessarie all'interno del codice del nostro programma. Se infatti un nostro software avesse avuto fra le sue varie funzioni quella di creare un file pdf, ad esempio, invece di scriverci l'intero codice per generare il file in quel particolare formato, avremmo scaricato un'apposita libreria, possibilmente open source e possibilmente nella versione pi\u00f9 recente disponibile, e l'avremmo integrata al resto del nostro codice. E cos\u00ec facendo, il nostro programma avrebbe quindi contenuto il nostro codice pi\u00f9 una parte di codice scritta da qualcun altro. Il vantaggio di una simile scelta \u00e8 ovvio, ci avrebbe risparmiato tempo e fatica evitandoci di riscrivere qualcosa che qualcun altro aveva gi\u00e0 scritto e messo a nostra disposizione. E allo stesso modo per\u00f2 anche lo svantaggio \u00e8 piuttosto chiaro, essendo codice scritto da altri avrebbe potuto contenere dei bug, o addirittura in casi estremi del codice malevolo di qualche tipo. Ora, giusto per essere chiari, non \u00e8 che se il programma fosse scritto interamente da noi, allora sarebbe esente da bug. Ma \u00e8 ovvio che \u00e8 diverso individuare e risolvere i nostri bug rispetto a quelli presenti nel codice di qualcun altro. In teoria, quando infatti si include una libreria, si d\u00e0 per scontato che essa funzioni gi\u00e0 correttamente e non la si va a ritestare in dettaglio, altrimenti questo vanificherebbe i vantaggi descritti prima. Ad ogni modo, questo concetto di dipendenza fin qui descritto, negli ultimi anni si \u00e8 andato, diciamo cos\u00ec, istituzionalizzando, entrando a far parte di parecchi linguaggi di programmazione e di parecchi componenti che sono poi diventati lo standard de facto. Pensiamo al Python, al PHP, al Ruby, Node, Deno... la lista \u00e8 lunghissima ed elenca tutta una serie di linguaggi di programmazione corredati di un meccanismo atto ad includere in modo automatizzato librerie nei propri progetti e quindi dipendenze. Questo meccanismo \u00e8 realizzato da un altro componente software che, in linea generale, prende il nome di gestore di pacchetti o in inglese Package Manager. Per me che sviluppo principalmente in PHP, ad esempio, esiste un gestore chiamato Composer che mi permette di includere librerie di ogni genere, le quali risiedono su di un enorme archivio online. Quando lancio il comando composer require seguito dal nome di un pacchetto, l'operazione eseguita in modo totalmente automatico \u00e8 molto simile al modo in cui si includevano le dipendenze una volta che abbiamo descritto prima, ma ovviamente \u00e8 anche un'operazione molto pi\u00f9 sofisticata. Il Package Manager, infatti, in pratica ricerca e identifica il pacchetto che ho richiesto e lo fa su degli archivi chiamati repository, uno dei quali \u00e8 pubblico e accessibile a tutti mentre altri possono essere privati, creati da noi, dalla nostra azienda o da qualche altra entit\u00e0 che successivamente ci ha concesso l'accesso. Una volta individuato il pacchetto, poi, il Package Manager scarica in un apposito percorso del nostro progetto il codice corrispondente alla versione da noi richiesta o, se non abbiamo specificato alcuna versione, quello corrispondente alla versione considerata la stabile del momento. Contemporaneamente a tutto questo per\u00f2 il gestore dei pacchetti ha anche un altro compito, in realt\u00e0 ne ha molti ma in questo momento a noi interessa questo in particolare e cio\u00e8 quello di creare e mantenere aggiornata una lista di tutte le dipendenze del progetto. Il vantaggio di un approccio del genere \u00e8, presto detto, dal momento che esiste una precisa lista delle dipendenze e che queste sono inoltre reperibili online, poco importa se su repository pubblici o se provengono da server privati o di accesso esclusivo dello sviluppatore, allora \u00e8 possibile evitare di includere materialmente tutti i file che compongono il progetto all'interno dell'archivio, portando cos\u00ec ad una notevole riduzione della dimensione del codice, cosa che lo rende pi\u00f9 facile da maneggiare, da archiviare, da installare. Ora non scender\u00f2 in dettaglio perch\u00e9 non \u00e8 argomento di questo episodio ma i vantaggi dal punto di vista dello sviluppo e della distribuzione del software rendono questo approccio sicuramente molto migliore di quello descritto in precedenza, ma come per qualsiasi altra cosa non \u00e8 sempre tutto rose e fiori. Infatti \u00e8 proprio su questo meccanismo che Alex Birsan ha potuto basare il proprio attacco. In pratica Alex ha pensato di sfruttare i package manager di alcuni linguaggi di programmazione molto diffusi per provare a installare un proprio codice all'interno dei progetti di moltissime grandi aziende. In particolare si \u00e8 concentrato su tre linguaggi molto diffusi, Python, Node e Ruby. Cercando su repository pubblici, su motori di ricerca e all'interno di progetti e siti web, si \u00e8 procurato tutta una serie di file contenenti liste di dipendenze di software utilizzati e sviluppati nelle aziende prese di mira. Ovviamente ci\u00f2 \u00e8 stato possibile perch\u00e9 spesso accade che questi file finiscano per sbaglio all'interno di progetti successivamente resi pubblici, o addirittura in altri progetti ai quali non dovrebbero appartenere, o ancora che vengano pubblicati direttamente online. Ma ad ogni modo, una volta reperita questa serie di file, Alex ha potuto filtrare al loro interno tutte le dipendenze che si trovano pubblicamente disponibili online. L'obiettivo di Alex era procurarsi una lista delle dipendenze private di queste varie aziende, quindi non ha dovuto fare altro che lavorare per sottrazione, prendere tutte le dipendenze elencate e sottrarre tutte quelle librerie che \u00e8 riuscito a trovare pubblicamente accessibili sul web. Eliminando quindi tutte le librerie pubbliche dalla lista, gli sono per forza di cose rimaste le dipendenze private, quelle che evidentemente le varie aziende rendevano disponibili ai propri sviluppatori tramite server privati. E a questo punto l'hacker ha potuto sferrare il proprio attacco, semplicemente creando sui repository pubblici dei vari linguaggi una serie di pacchetti contenenti tutti lo stesso codice, ma aventi ciascuno il nome di uno dei pacchetti privati della lista. Proviamo a capire meglio questo processo con un esempio. Mettiamo che Alex sia riuscito a trovare il file del package manager di un progetto di una grande azienda come ad esempio Paypal. In questo file saranno elencate le dipendenze di tale progetto. Facciamo finta che siano tre librerie che chiameremo A, B e C. Ora per sferrare il proprio attacco Alex dovrebbe controllare se tutte queste librerie risultano presenti sul repository pubblico. E sempre per amore di esempio immaginiamo che la libreria A non sia fra queste, quindi sia identificabile come una libreria privata di Paypal. A questo punto Alex non dovrebbe far altro che prendere il suo codice e utilizzarlo per creare una libreria sul repository pubblico chiamata A. Al termine di questo processo, ripetuto per tutte le librerie private identificate, la speranza era quella che gli sviluppatori e magari i sistemi automatizzati adibiti all'installazione dei vari progetti scegliessero di scaricare i pacchetti falsi pubblici di Alex invece di quelli veri privati dell'azienda. E indovinate un po', in effetti \u00e8 stato cos\u00ec. L'autore ha battezzato questo suo tipo di attacco Dependency Confusion e nell'articolo che vi lascio in descrizione per maggiori dettagli e che vi consiglio di leggere perch\u00e9 \u00e8 davvero interessante, Alex racconta di oltre 35 compagnie colpite tra cui Shopify, Apple e Paypal, ciascuna delle quali ha riconosciuto al giovane cacciatore una taglia di 30 mila dollari per il bug individuato. Se vi venisse voglia di provare a fare come Alex e diventare bug hunters, tenete presente che le aziende che attaccate devono essere informate prima e che dovete stipulare dei contratti o iscrivervi al programma di bug hunting, altrimenti \u00e8 illegale e si rischia grosso. Inoltre i tentativi di hacking non devono essere mirati al danneggiamento dei sistemi o alle sfiltrazioni dei dati, altrimenti anche in questo caso potrebbero esserci ripercussioni legali. Il codice contenuto nei pacchetti falsi di Alex Birsen infatti conteneva solo dei meccanismi di notifica per avvisare dell'avvenuta installazione e identificare l'azienda colpita. Ma a parte questo, cosa possiamo imparare noi programmatori, professionisti o meno, da questa storia? Io sarei felice di sapere voi cosa ne pensate, magari sul canale telegram o sul gruppo o anche tramite messaggi o commenti, trovate tutti i riferimenti in descrizione. Nel frattempo per\u00f2 una cosa mi sento di dirla, perch\u00e9 \u00e8 un pensiero che gi\u00e0 mi girava in testa da molto tempo e questa storia non fa altro che avallarlo. In informatica si dice sempre che non bisogna reinventare la ruota, se una cosa gi\u00e0 esiste ed \u00e8 gi\u00e0 disponibile non \u00e8 necessario ricrearla e in generale sono tutti i ragionamenti corretti. Tuttavia io per\u00f2 credo che come in tutte le cose anche queste affermazioni vadano ragionate e contestualizzate. \u00c8 vero che in linea generale conviene sfruttare componenti gi\u00e0 esistenti, ma non in modo circotuso. Una dipendenza aggiunta al nostro progetto ci risparmia tempo di sviluppo e a volte anche molto, ma allo stesso tempo aumenta la possibilit\u00e0 che si verifichino dei problemi. In gergo si dice che allarga il perimetro della sicurezza. E non mi riferisco solo all'attacco di Dependency Confusion scoperto da Birsan, esistono molti altri attacchi. La libreria installata ad esempio potrebbe contenere dei bug di sicurezza ancora non scoperti e questo implica un potenziale pericolo, ma anche la necessit\u00e0 di rimanere al passo con gli aggiornamenti. Oppure potremmo paradossalmente sbagliare ad installare dipendenza. Basta sbagliare infatti una lettera e magari c'\u00e8 qualche furbone che ha potuto creare un pacchetto con il nome appositamente sbagliato e delle backdoor all'interno. Oppure ancora qualcuno potrebbe riuscire ad inserire del codice malevolo in un pacchetto pubblico molto conosciuto ed utilizzato. Poco tempo fa c'\u00e8 stato un tentativo di inserire delle backdoor nel codice del linguaggio PHP che fortunatamente \u00e8 stato individuato e corretto immediatamente, ma il tentativo c'\u00e8 stato. E poi attenzione non \u00e8 un discorso che si ferma solo al codice o solo alle librerie. Giusto per fare un esempio nel quale si potrebbe rivedere anche chi non sviluppa codice, pensate ad esempio a quanti siti sono realizzati con WordPress o con altri content management system e a quanti plugin essi utilizzano. Per molti di questi plugin vengono scoperti e risolti bug in continuazione. E se un giorno un plugin, magari anche molto utilizzato, sparisse dal repository pubblico e un malintenzionato lo rimpiazzasse immediatamente con una versione modificata, quanti utenti lo installerebbero per sbaglio, quanti siti lo aggiornerebbero in modo automatico. Certo poi verrebbe scoperto, magari anche abbastanza velocemente, ma nel frattempo quanti siti sarebbero stati infettati, quanti lo saprebbero, quanti si renderebbero conto che \u00e8 necessario eliminare o sostituire il plugin. Si tratta solo di esempi e alcuni anche abbastanza estremi, ma secondo me fermarsi un attimo a chiedersi se quel nuovo componente ci serve effettivamente, se la sua aggiunta ci risparmia abbastanza tempo di sviluppo per giustificare l'ampliamento della superficie di attacco del nostro software e lo sforzo di manutenzione, secondo me \u00e8 una cosa da fare sempre. Bene, come al solito vi ringrazio per avere ascoltato fin qui, spero che l'episodio vi sia piaciuto. Ci tengo davvero a sapere voi cosa ne pensate, che linguaggi utilizzate, se ne utilizzate, quante librerie installate solitamente e se magari vi \u00e8 mai capitato qualche problema di questo tipo. Come avrete capito io in generale sono uno che cerca di evitare di aggiungere componenti esterni quando non \u00e8 indispensabile, ma ci sono dei linguaggi che si basano fortemente su questa pratica come ad esempio javascript, quindi probabilmente fra voi c'\u00e8 chi la pensa molto diversamente e un confronto non pu\u00f2 farci che bene. Detto questo vi ricordo che se volete dare una mano a far crescere il progetto potete condividere questo e gli altri episodi magari aggiungendo una piccola nota su cosa vi \u00e8 piaciuto e cosa vi \u00e8 interessato o addirittura facendolo ascoltare a qualcuno. Magari potrebbe diventare un ascoltatore assiduo e un'altra bella persona con cui discutere. Quindi ancora grazie per avere ascoltato fin qui, vi saluto, vi do appuntamento al prossimo episodio e vi ricordo che un informatico risolve problemi, a volte anche usando il computer.", "segments": [{"id": 1, "seek": 2710, "start": 0.0, "end": 10.0, "text": " Pensieri in codice. Idee dal mondo del software a cura di Valerio Galano.", "tokens": [50364, 45035, 45980, 294, 17656, 573, 13, 13090, 68, 11702, 40499, 1103, 4722, 257, 1262, 64, 1026, 7188, 260, 1004, 7336, 3730, 13, 50864], "temperature": 0.0, "avg_logprob": -0.30902778329672637, "compression_ratio": 1.3577235772357723, "no_speech_prob": 0.0032215118408203125, "words": null}, {"id": 2, "seek": 2710, "start": 10.0, "end": 27.1, "text": " Salve a tutti ragazzi e bentornati su Pensieri in codice. Non capita spesso di poter definire", "tokens": [50864, 5996, 303, 257, 19822, 17539, 33910, 308, 14075, 1865, 6908, 459, 45035, 45980, 294, 17656, 573, 13, 8774, 39727, 637, 5557, 1026, 1847, 260, 1561, 621, 51719], "temperature": 0.0, "avg_logprob": -0.30902778329672637, "compression_ratio": 1.3577235772357723, "no_speech_prob": 0.0032215118408203125, "words": null}, {"id": 3, "seek": 5336, "start": 27.1, "end": 33.5, "text": " avvicente una storia di informatica o di informatici. Tuttavia qualche settimana fa mi \u00e8 capitato", "tokens": [50364, 1305, 25537, 1576, 2002, 5967, 654, 1026, 1356, 267, 2262, 277, 1026, 1356, 2399, 72, 13, 314, 13478, 23015, 38737, 5584, 36497, 2050, 2752, 4873, 33807, 2513, 50684], "temperature": 0.0, "avg_logprob": -0.21363901507074587, "compression_ratio": 1.5956521739130434, "no_speech_prob": 0.8193359375, "words": null}, {"id": 4, "seek": 5336, "start": 33.5, "end": 40.06, "text": " di leggere un interessante articolo su Medium in cui l'autore Alex Birsan descriveva il", "tokens": [50684, 1026, 30991, 323, 517, 24372, 15228, 7902, 459, 38915, 294, 22929, 287, 6, 1375, 418, 5202, 7145, 11491, 2189, 303, 2757, 1930, 51012], "temperature": 0.0, "avg_logprob": -0.21363901507074587, "compression_ratio": 1.5956521739130434, "no_speech_prob": 0.8193359375, "words": null}, {"id": 5, "seek": 5336, "start": 40.06, "end": 46.58, "text": " modo in cui ha hackerato oltre 35 aziende grazie ad un particolare tipo di attacco informatico", "tokens": [51012, 16664, 294, 22929, 324, 38155, 2513, 277, 2282, 265, 6976, 7883, 45816, 1295, 3283, 614, 517, 1276, 43141, 9746, 1026, 951, 18662, 1356, 2399, 78, 51338], "temperature": 0.0, "avg_logprob": -0.21363901507074587, "compression_ratio": 1.5956521739130434, "no_speech_prob": 0.8193359375, "words": null}, {"id": 6, "seek": 5336, "start": 46.58, "end": 53.36, "text": " da lui inventato. Questo attacco si basa su di una tecnica di uso estremamente comune", "tokens": [51338, 1120, 8783, 7962, 2513, 13, 38167, 951, 18662, 1511, 987, 64, 459, 1026, 2002, 20105, 2262, 1026, 22728, 871, 2579, 3439, 395, 2613, 51677], "temperature": 0.0, "avg_logprob": -0.21363901507074587, "compression_ratio": 1.5956521739130434, "no_speech_prob": 0.8193359375, "words": null}, {"id": 7, "seek": 7900, "start": 53.36, "end": 60.4, "text": " nella moderna programmazione e leggerne la descrizione e il tasso di successo mi ha fatto", "tokens": [50364, 23878, 10494, 629, 37648, 12928, 308, 1676, 1321, 716, 635, 2189, 19706, 308, 1930, 8023, 539, 1026, 2245, 78, 2752, 324, 23228, 50716], "temperature": 0.0, "avg_logprob": -0.22420400437319055, "compression_ratio": 1.5854700854700854, "no_speech_prob": 0.454833984375, "words": null}, {"id": 8, "seek": 7900, "start": 60.4, "end": 66.56, "text": " riflettere su alcuni aspetti del modo in cui si sviluppa il software oggigiorno. Come vedremo", "tokens": [50716, 13203, 32547, 323, 459, 20005, 24307, 16817, 12495, 1103, 16664, 294, 22929, 1511, 17342, 388, 10504, 64, 1930, 4722, 277, 1615, 328, 1973, 1771, 13, 2492, 14267, 44172, 51024], "temperature": 0.0, "avg_logprob": -0.22420400437319055, "compression_ratio": 1.5854700854700854, "no_speech_prob": 0.454833984375, "words": null}, {"id": 9, "seek": 7900, "start": 66.56, "end": 73.0, "text": " fra poco l'attacco \u00e8 stato s\u00ec eseguito sfruttando degli specifici linguaggi di programmazione,", "tokens": [51024, 6600, 10639, 287, 6, 1591, 18662, 4873, 29657, 49267, 785, 1146, 22703, 262, 5779, 13478, 1806, 32079, 2685, 72, 21766, 46893, 1026, 37648, 12928, 11, 51346], "temperature": 0.0, "avg_logprob": -0.22420400437319055, "compression_ratio": 1.5854700854700854, "no_speech_prob": 0.454833984375, "words": null}, {"id": 10, "seek": 7900, "start": 73.0, "end": 79.0, "text": " ma il concetto alla base \u00e8 molto ampio e pu\u00f2 essere facilmente esteso ad altri linguaggi", "tokens": [51346, 463, 1930, 1588, 23778, 11591, 3096, 4873, 16394, 18648, 1004, 308, 26526, 19799, 10217, 4082, 871, 41189, 614, 33707, 21766, 46893, 51646], "temperature": 0.0, "avg_logprob": -0.22420400437319055, "compression_ratio": 1.5854700854700854, "no_speech_prob": 0.454833984375, "words": null}, {"id": 11, "seek": 10900, "start": 79.0, "end": 84.68, "text": " e ad altri livelli dello sviluppo software. Quindi nell'episodio di oggi parleremo di come", "tokens": [50364, 308, 614, 33707, 1621, 16320, 368, 1913, 17342, 388, 10504, 78, 4722, 13, 32534, 44666, 6, 595, 271, 378, 1004, 1026, 34768, 13734, 323, 3280, 1026, 808, 50648], "temperature": 0.0, "avg_logprob": -0.22472993827160495, "compression_ratio": 1.4505494505494505, "no_speech_prob": 0.2276611328125, "words": null}, {"id": 12, "seek": 10900, "start": 84.68, "end": 90.24, "text": " \u00e8 avvenuto questo attacco, del perch\u00e9 \u00e8 stato eseguito, di che cosa lo ha reso possibile e", "tokens": [50648, 4873, 1305, 553, 8262, 10263, 951, 18662, 11, 1103, 14303, 4873, 29657, 785, 1146, 22703, 11, 1026, 947, 10163, 450, 324, 319, 539, 50184, 308, 50926], "temperature": 0.0, "avg_logprob": -0.22472993827160495, "compression_ratio": 1.4505494505494505, "no_speech_prob": 0.2276611328125, "words": null}, {"id": 13, "seek": 10900, "start": 90.24, "end": 95.72, "text": " infine di come questa storia debba servire da lezione a tutti noi sviluppatori.", "tokens": [50926, 1536, 533, 1026, 808, 16540, 5967, 654, 3001, 4231, 1658, 621, 1120, 476, 19706, 257, 19822, 22447, 17342, 388, 10504, 39842, 13, 51200], "temperature": 0.0, "avg_logprob": -0.22472993827160495, "compression_ratio": 1.4505494505494505, "no_speech_prob": 0.2276611328125, "words": null}, {"id": 14, "seek": 13876, "start": 109.0, "end": 124.12, "text": " Alex Birsan \u00e8 un cacciatore di bug. Ci\u00f2 vuol dire che il suo lavoro, o almeno parte di esso,", "tokens": [50364, 5202, 7145, 11491, 4873, 517, 269, 43870, 43148, 1026, 7426, 13, 20188, 4293, 9732, 401, 1264, 947, 1930, 34197, 42060, 11, 277, 419, 43232, 6975, 1026, 2097, 78, 11, 51120], "temperature": 0.0, "avg_logprob": -0.24191176961450017, "compression_ratio": 1.4623115577889447, "no_speech_prob": 0.007232666015625, "words": null}, {"id": 15, "seek": 13876, "start": 124.12, "end": 132.04, "text": " consiste nel cercare i bug nei software e nelle piattaforme online. Molte aziende infatti premiano", "tokens": [51120, 49066, 15373, 10146, 5685, 741, 7426, 34517, 4722, 308, 46350, 3895, 18405, 44562, 2950, 13, 28278, 975, 7883, 45816, 1536, 21515, 5624, 6254, 51516], "temperature": 0.0, "avg_logprob": -0.24191176961450017, "compression_ratio": 1.4623115577889447, "no_speech_prob": 0.007232666015625, "words": null}, {"id": 16, "seek": 13876, "start": 132.04, "end": 138.76, "text": " i ricercatori che scovano falle nei loro sistemi. Grosse realt\u00e0 come Google, Apple e altri hanno", "tokens": [51516, 741, 21040, 2869, 39842, 947, 795, 5179, 3730, 2100, 68, 34517, 28810, 10555, 13372, 13, 2606, 14353, 47512, 808, 3329, 11, 6373, 308, 33707, 26595, 51852], "temperature": 0.0, "avg_logprob": -0.24191176961450017, "compression_ratio": 1.4623115577889447, "no_speech_prob": 0.007232666015625, "words": null}, {"id": 17, "seek": 16584, "start": 139.51999999999998, "end": 145.51999999999998, "text": " dei programmi di bug counting ai quali \u00e8 possibile partecipare e che elargiscono", "tokens": [50402, 13874, 1461, 3057, 1026, 7426, 13251, 9783, 4101, 72, 4873, 50184, 6975, 11371, 543, 308, 947, 806, 33544, 271, 45846, 50702], "temperature": 0.0, "avg_logprob": -0.2348214240301223, "compression_ratio": 1.5416666666666667, "no_speech_prob": 0.0037078857421875, "words": null}, {"id": 18, "seek": 16584, "start": 145.51999999999998, "end": 152.95999999999998, "text": " compensi in base alle entit\u00e0 dei bug individuati. E cos\u00ec, alla sua ennesima esperienza alla ricerca", "tokens": [50702, 11598, 72, 294, 3096, 5430, 948, 12445, 13874, 7426, 2461, 84, 6908, 13, 462, 23278, 11, 11591, 8233, 465, 4081, 4775, 10045, 42331, 11591, 21040, 36127, 51074], "temperature": 0.0, "avg_logprob": -0.2348214240301223, "compression_ratio": 1.5416666666666667, "no_speech_prob": 0.0037078857421875, "words": null}, {"id": 19, "seek": 16584, "start": 152.95999999999998, "end": 159.39999999999998, "text": " di bug, Alex ha ben pensato di provare a sfruttare un concetto che nella programmazione moderna \u00e8", "tokens": [51074, 1026, 7426, 11, 5202, 324, 3271, 6099, 2513, 1026, 1439, 543, 257, 262, 5779, 13478, 543, 517, 1588, 23778, 947, 23878, 37648, 12928, 10494, 629, 4873, 51396], "temperature": 0.0, "avg_logprob": -0.2348214240301223, "compression_ratio": 1.5416666666666667, "no_speech_prob": 0.0037078857421875, "words": null}, {"id": 20, "seek": 16584, "start": 159.39999999999998, "end": 165.84, "text": " ampiamente diffuso e cio\u00e8 il concetto di dipendenza. Quando in informatica si parla di", "tokens": [51396, 18648, 16855, 7593, 24431, 308, 41827, 1930, 1588, 23778, 1026, 10460, 8896, 2394, 13, 18725, 294, 1356, 267, 2262, 1511, 971, 875, 1026, 51718], "temperature": 0.0, "avg_logprob": -0.2348214240301223, "compression_ratio": 1.5416666666666667, "no_speech_prob": 0.0037078857421875, "words": null}, {"id": 21, "seek": 19120, "start": 165.92000000000002, "end": 172.0, "text": " dipendenza, solitamente si intende il fatto che un componente o un software sfrutta le", "tokens": [50368, 10460, 8896, 2394, 11, 1404, 270, 3439, 1511, 560, 5445, 1930, 23228, 947, 517, 4026, 1576, 277, 517, 4722, 262, 5779, 27145, 476, 50672], "temperature": 0.0, "avg_logprob": -0.2026909758095388, "compression_ratio": 1.6607142857142858, "no_speech_prob": 0.07147216796875, "words": null}, {"id": 22, "seek": 19120, "start": 172.0, "end": 177.88, "text": " funzionalit\u00e0 di un altro componente o software per svolgere le proprie attivit\u00e0. In altre parole,", "tokens": [50672, 49345, 1966, 12445, 1026, 517, 40924, 4026, 1576, 277, 4722, 680, 262, 9646, 34899, 476, 447, 1424, 414, 951, 592, 12445, 13, 682, 34983, 26783, 11, 50966], "temperature": 0.0, "avg_logprob": -0.2026909758095388, "compression_ratio": 1.6607142857142858, "no_speech_prob": 0.07147216796875, "words": null}, {"id": 23, "seek": 19120, "start": 177.88, "end": 183.92000000000002, "text": " per fare un esempio semplice e pratico, \u00e8 molto comune che un programma o un sito web", "tokens": [50966, 680, 11994, 517, 33627, 4361, 564, 573, 308, 33852, 78, 11, 4873, 16394, 395, 2613, 947, 517, 1461, 1696, 277, 517, 1394, 78, 3670, 51268], "temperature": 0.0, "avg_logprob": -0.2026909758095388, "compression_ratio": 1.6607142857142858, "no_speech_prob": 0.07147216796875, "words": null}, {"id": 24, "seek": 19120, "start": 183.92000000000002, "end": 191.2, "text": " utilizzi porzioni di codice create in precedenza da altre persone. Tali codici vengono comunemente", "tokens": [51268, 19906, 3992, 1515, 89, 15273, 1026, 17656, 573, 1884, 294, 16969, 23691, 1120, 34983, 29944, 13, 314, 5103, 17656, 8787, 371, 1501, 8957, 11040, 16288, 51632], "temperature": 0.0, "avg_logprob": -0.2026909758095388, "compression_ratio": 1.6607142857142858, "no_speech_prob": 0.07147216796875, "words": null}, {"id": 25, "seek": 21824, "start": 191.36, "end": 197.32000000000002, "text": " definiti librerie e i loro autori li creano tendenzialmente o per soddisfare necessit\u00e0", "tokens": [50372, 1561, 8707, 4939, 17487, 308, 741, 28810, 1476, 7386, 375, 1197, 3730, 3928, 11368, 831, 4082, 277, 680, 15047, 67, 4937, 543, 2688, 12445, 50670], "temperature": 0.0, "avg_logprob": -0.17588875490591066, "compression_ratio": 1.631578947368421, "no_speech_prob": 0.1051025390625, "words": null}, {"id": 26, "seek": 21824, "start": 197.32000000000002, "end": 204.44000000000003, "text": " abbastanza comuni o per condividere funzionalit\u00e0 fra pi\u00f9 software. In generale, quando un programma", "tokens": [50670, 16903, 525, 20030, 11040, 72, 277, 680, 2224, 1843, 323, 49345, 1966, 12445, 6600, 10589, 4722, 13, 682, 1337, 1220, 11, 7770, 517, 1461, 1696, 51026], "temperature": 0.0, "avg_logprob": -0.17588875490591066, "compression_ratio": 1.631578947368421, "no_speech_prob": 0.1051025390625, "words": null}, {"id": 27, "seek": 21824, "start": 204.44000000000003, "end": 210.84000000000003, "text": " o una piattaforma per funzionare includono al proprio interno delle librerie, si dice che", "tokens": [51026, 277, 2002, 3895, 18405, 837, 64, 680, 49345, 313, 543, 1637, 8957, 419, 28203, 728, 1771, 16485, 4939, 17487, 11, 1511, 10313, 947, 51346], "temperature": 0.0, "avg_logprob": -0.17588875490591066, "compression_ratio": 1.631578947368421, "no_speech_prob": 0.1051025390625, "words": null}, {"id": 28, "seek": 21824, "start": 210.84000000000003, "end": 218.24, "text": " queste rappresentano delle dipendenze per il progetto. Ora, inizialmente, e con inizialmente", "tokens": [51346, 35455, 8125, 11662, 3730, 16485, 10460, 8896, 1381, 680, 1930, 447, 847, 1353, 13, 43672, 11, 294, 590, 831, 4082, 11, 308, 416, 294, 590, 831, 4082, 51716], "temperature": 0.0, "avg_logprob": -0.17588875490591066, "compression_ratio": 1.631578947368421, "no_speech_prob": 0.1051025390625, "words": null}, {"id": 29, "seek": 24480, "start": 218.24, "end": 225.52, "text": " intendo 10, forse 15 o 20 anni fa, le dipendenze si concretizzavano con il copiare materialmente", "tokens": [50364, 560, 3999, 1266, 11, 337, 405, 2119, 277, 945, 31164, 2050, 11, 476, 10460, 8896, 1381, 1511, 39481, 8072, 706, 3730, 416, 1930, 2971, 72, 543, 2527, 4082, 50728], "temperature": 0.0, "avg_logprob": -0.18790409803904337, "compression_ratio": 1.61864406779661, "no_speech_prob": 0.037872314453125, "words": null}, {"id": 30, "seek": 24480, "start": 225.52, "end": 231.72, "text": " il codice delle librerie necessarie all'interno del codice del nostro programma. Se infatti un", "tokens": [50728, 1930, 17656, 573, 16485, 4939, 17487, 2688, 289, 414, 439, 6, 5106, 1771, 1103, 17656, 573, 1103, 35779, 1461, 1696, 13, 1100, 1536, 21515, 517, 51038], "temperature": 0.0, "avg_logprob": -0.18790409803904337, "compression_ratio": 1.61864406779661, "no_speech_prob": 0.037872314453125, "words": null}, {"id": 31, "seek": 24480, "start": 231.72, "end": 238.68, "text": " nostro software avesse avuto fra le sue varie funzioni quella di creare un file pdf, ad esempio,", "tokens": [51038, 35779, 4722, 257, 977, 405, 1305, 8262, 6600, 476, 20416, 1374, 414, 49345, 15273, 32234, 1026, 1197, 543, 517, 3991, 280, 45953, 11, 614, 33627, 11, 51386], "temperature": 0.0, "avg_logprob": -0.18790409803904337, "compression_ratio": 1.61864406779661, "no_speech_prob": 0.037872314453125, "words": null}, {"id": 32, "seek": 24480, "start": 238.68, "end": 244.8, "text": " invece di scriverci l'intero codice per generare il file in quel particolare formato, avremmo", "tokens": [51386, 36344, 1026, 5545, 331, 537, 287, 6, 5106, 78, 17656, 573, 680, 1337, 543, 1930, 3991, 294, 7178, 1276, 43141, 1254, 2513, 11, 1305, 265, 2174, 78, 51692], "temperature": 0.0, "avg_logprob": -0.18790409803904337, "compression_ratio": 1.61864406779661, "no_speech_prob": 0.037872314453125, "words": null}, {"id": 33, "seek": 27052, "start": 245.0, "end": 250.92000000000002, "text": " scaricato un'apposita libreria, possibilmente open source e possibilmente nella versione pi\u00f9", "tokens": [50374, 10569, 299, 2513, 517, 6, 1746, 329, 2786, 4939, 41568, 11, 24145, 4082, 1269, 4009, 308, 24145, 4082, 23878, 3037, 68, 10589, 50670], "temperature": 0.0, "avg_logprob": -0.19357639054457346, "compression_ratio": 1.64, "no_speech_prob": 0.191650390625, "words": null}, {"id": 34, "seek": 27052, "start": 250.92000000000002, "end": 256.84000000000003, "text": " recente disponibile, e l'avremmo integrata al resto del nostro codice. E cos\u00ec facendo,", "tokens": [50670, 850, 1576, 23311, 30898, 11, 308, 287, 6, 706, 265, 2174, 78, 3572, 3274, 419, 28247, 1103, 35779, 17656, 573, 13, 462, 23278, 1915, 3999, 11, 50966], "temperature": 0.0, "avg_logprob": -0.19357639054457346, "compression_ratio": 1.64, "no_speech_prob": 0.191650390625, "words": null}, {"id": 35, "seek": 27052, "start": 256.84000000000003, "end": 264.16, "text": " il nostro programma avrebbe quindi contenuto il nostro codice pi\u00f9 una parte di codice scritta", "tokens": [50966, 1930, 35779, 1461, 1696, 1305, 39487, 15727, 21795, 8262, 1930, 35779, 17656, 573, 10589, 2002, 6975, 1026, 17656, 573, 5918, 21870, 51332], "temperature": 0.0, "avg_logprob": -0.19357639054457346, "compression_ratio": 1.64, "no_speech_prob": 0.191650390625, "words": null}, {"id": 36, "seek": 27052, "start": 264.16, "end": 270.52, "text": " da qualcun altro. Il vantaggio di una simile scelta \u00e8 ovvio, ci avrebbe risparmiato tempo e", "tokens": [51332, 1120, 32101, 409, 40924, 13, 4416, 371, 394, 30763, 1026, 2002, 1034, 794, 795, 338, 1328, 4873, 14187, 28226, 11, 6983, 1305, 39487, 2253, 2181, 3057, 2513, 8972, 308, 51650], "temperature": 0.0, "avg_logprob": -0.19357639054457346, "compression_ratio": 1.64, "no_speech_prob": 0.191650390625, "words": null}, {"id": 37, "seek": 29388, "start": 270.52, "end": 276.12, "text": " fatica evitandoci di riscrivere qualcosa che qualcun altro aveva gi\u00e0 scritto e messo a nostra", "tokens": [50364, 4046, 2262, 1073, 270, 1806, 537, 1026, 2253, 1142, 5887, 42400, 947, 32101, 409, 40924, 3472, 2757, 30469, 5918, 34924, 308, 2082, 78, 257, 34311, 50644], "temperature": 0.0, "avg_logprob": -0.20024671745404862, "compression_ratio": 1.5959183673469388, "no_speech_prob": 0.0875244140625, "words": null}, {"id": 38, "seek": 29388, "start": 276.12, "end": 282.4, "text": " disposizione. E allo stesso modo per\u00f2 anche lo svantaggio \u00e8 piuttosto chiaro, essendo codice", "tokens": [50644, 15885, 35740, 13, 462, 439, 78, 44413, 16664, 12673, 11585, 450, 262, 5219, 30763, 4873, 3895, 13478, 22756, 47454, 78, 11, 2097, 3999, 17656, 573, 50958], "temperature": 0.0, "avg_logprob": -0.20024671745404862, "compression_ratio": 1.5959183673469388, "no_speech_prob": 0.0875244140625, "words": null}, {"id": 39, "seek": 29388, "start": 282.4, "end": 288.79999999999995, "text": " scritto da altri avrebbe potuto contenere dei bug, o addirittura in casi estremi del codice malevolo", "tokens": [50958, 5918, 34924, 1120, 33707, 1305, 39487, 1847, 8262, 21795, 323, 13874, 7426, 11, 277, 909, 347, 593, 2991, 294, 22567, 871, 2579, 72, 1103, 17656, 573, 7133, 85, 7902, 51278], "temperature": 0.0, "avg_logprob": -0.20024671745404862, "compression_ratio": 1.5959183673469388, "no_speech_prob": 0.0875244140625, "words": null}, {"id": 40, "seek": 29388, "start": 288.79999999999995, "end": 293.88, "text": " di qualche tipo. Ora, giusto per essere chiari, non \u00e8 che se il programma fosse scritto interamente", "tokens": [51278, 1026, 38737, 9746, 13, 43672, 11, 1735, 48260, 680, 19799, 13228, 3504, 11, 2107, 4873, 947, 369, 1930, 1461, 1696, 24528, 5918, 34924, 728, 3439, 51532], "temperature": 0.0, "avg_logprob": -0.20024671745404862, "compression_ratio": 1.5959183673469388, "no_speech_prob": 0.0875244140625, "words": null}, {"id": 41, "seek": 31884, "start": 293.88, "end": 301.15999999999997, "text": " da noi, allora sarebbe esente da bug. Ma \u00e8 ovvio che \u00e8 diverso individuare e risolvere i nostri bug", "tokens": [50364, 1120, 22447, 11, 44141, 38706, 39042, 785, 1576, 1120, 7426, 13, 4042, 4873, 14187, 28226, 947, 4873, 18558, 539, 2461, 84, 543, 308, 2253, 401, 5887, 741, 10397, 470, 7426, 50728], "temperature": 0.0, "avg_logprob": -0.20220587609194907, "compression_ratio": 1.5614754098360655, "no_speech_prob": 0.34423828125, "words": null}, {"id": 42, "seek": 31884, "start": 301.15999999999997, "end": 307.8, "text": " rispetto a quelli presenti nel codice di qualcun altro. In teoria, quando infatti si include una", "tokens": [50728, 2253, 42801, 257, 631, 16320, 1974, 72, 15373, 17656, 573, 1026, 32101, 409, 40924, 13, 682, 535, 8172, 11, 7770, 1536, 21515, 1511, 4090, 2002, 51060], "temperature": 0.0, "avg_logprob": -0.20220587609194907, "compression_ratio": 1.5614754098360655, "no_speech_prob": 0.34423828125, "words": null}, {"id": 43, "seek": 31884, "start": 307.8, "end": 313.71999999999997, "text": " libreria, si d\u00e0 per scontato che essa funzioni gi\u00e0 correttamente e non la si va a ritestare in", "tokens": [51060, 4939, 41568, 11, 1511, 274, 1467, 680, 795, 896, 2513, 947, 7208, 49345, 15273, 30469, 1181, 14313, 3439, 308, 2107, 635, 1511, 2773, 257, 11289, 377, 543, 294, 51356], "temperature": 0.0, "avg_logprob": -0.20220587609194907, "compression_ratio": 1.5614754098360655, "no_speech_prob": 0.34423828125, "words": null}, {"id": 44, "seek": 31884, "start": 313.71999999999997, "end": 318.84, "text": " dettaglio, altrimenti questo vanificherebbe i vantaggi descritti prima. Ad ogni modo,", "tokens": [51356, 1141, 25030, 19987, 11, 4955, 30591, 72, 10263, 3161, 351, 480, 323, 39042, 741, 371, 394, 46893, 7471, 18579, 72, 19507, 13, 1999, 33189, 16664, 11, 51612], "temperature": 0.0, "avg_logprob": -0.20220587609194907, "compression_ratio": 1.5614754098360655, "no_speech_prob": 0.34423828125, "words": null}, {"id": 45, "seek": 34352, "start": 318.84000000000003, "end": 324.64000000000004, "text": " questo concetto di dipendenza fin qui descritto, negli ultimi anni si \u00e8 andato, diciamo cos\u00ec,", "tokens": [50364, 10263, 1588, 23778, 1026, 10460, 8896, 2394, 962, 1956, 7471, 18579, 78, 11, 2485, 2081, 3725, 10121, 31164, 1511, 4873, 293, 2513, 11, 14285, 7415, 23278, 11, 50654], "temperature": 0.0, "avg_logprob": -0.21653760428977223, "compression_ratio": 1.6196581196581197, "no_speech_prob": 0.3837890625, "words": null}, {"id": 46, "seek": 34352, "start": 324.64000000000004, "end": 330.44000000000005, "text": " istituzionalizzando, entrando a far parte di parecchi linguaggi di programmazione e di parecchi", "tokens": [50654, 1418, 270, 3334, 1966, 8072, 1806, 11, 948, 19845, 257, 1400, 6975, 1026, 7448, 66, 8036, 21766, 46893, 1026, 37648, 12928, 308, 1026, 7448, 66, 8036, 50944], "temperature": 0.0, "avg_logprob": -0.21653760428977223, "compression_ratio": 1.6196581196581197, "no_speech_prob": 0.3837890625, "words": null}, {"id": 47, "seek": 34352, "start": 330.44000000000005, "end": 337.44000000000005, "text": " componenti che sono poi diventati lo standard de facto. Pensiamo al Python, al PHP, al Ruby,", "tokens": [50944, 6542, 72, 947, 9259, 19260, 3414, 317, 6908, 450, 3832, 368, 42225, 13, 45035, 7415, 419, 15329, 11, 419, 47298, 11, 419, 19907, 11, 51294], "temperature": 0.0, "avg_logprob": -0.21653760428977223, "compression_ratio": 1.6196581196581197, "no_speech_prob": 0.3837890625, "words": null}, {"id": 48, "seek": 34352, "start": 337.44000000000005, "end": 343.52000000000004, "text": " Node, Deno... la lista \u00e8 lunghissima ed elenca tutta una serie di linguaggi di programmazione", "tokens": [51294, 38640, 11, 6458, 78, 485, 635, 27764, 4873, 16730, 71, 891, 4775, 1257, 806, 268, 496, 3672, 1328, 2002, 23030, 1026, 21766, 46893, 1026, 37648, 12928, 51598], "temperature": 0.0, "avg_logprob": -0.21653760428977223, "compression_ratio": 1.6196581196581197, "no_speech_prob": 0.3837890625, "words": null}, {"id": 49, "seek": 37092, "start": 343.52, "end": 350.91999999999996, "text": " corredati di un meccanismo atto ad includere in modo automatizzato librerie nei propri progetti", "tokens": [50364, 1181, 986, 6908, 1026, 517, 385, 1914, 282, 6882, 951, 78, 614, 1637, 323, 294, 16664, 28034, 8072, 2513, 4939, 17487, 34517, 40465, 447, 847, 7317, 50734], "temperature": 0.0, "avg_logprob": -0.2169200522942586, "compression_ratio": 1.5588235294117647, "no_speech_prob": 0.1820068359375, "words": null}, {"id": 50, "seek": 37092, "start": 350.91999999999996, "end": 358.32, "text": " e quindi dipendenze. Questo meccanismo \u00e8 realizzato da un altro componente software che,", "tokens": [50734, 308, 15727, 10460, 8896, 1381, 13, 38167, 385, 1914, 282, 6882, 4873, 957, 8072, 2513, 1120, 517, 40924, 4026, 1576, 4722, 947, 11, 51104], "temperature": 0.0, "avg_logprob": -0.2169200522942586, "compression_ratio": 1.5588235294117647, "no_speech_prob": 0.1820068359375, "words": null}, {"id": 51, "seek": 37092, "start": 358.32, "end": 364.76, "text": " in linea generale, prende il nome di gestore di pacchetti o in inglese Package Manager. Per me", "tokens": [51104, 294, 1622, 64, 1337, 1220, 11, 9866, 68, 1930, 19003, 1026, 7219, 418, 1026, 15165, 339, 12495, 277, 294, 3957, 904, 68, 18466, 609, 13821, 13, 3026, 385, 51426], "temperature": 0.0, "avg_logprob": -0.2169200522942586, "compression_ratio": 1.5588235294117647, "no_speech_prob": 0.1820068359375, "words": null}, {"id": 52, "seek": 37092, "start": 364.76, "end": 370.91999999999996, "text": " che sviluppo principalmente in PHP, ad esempio, esiste un gestore chiamato Composer che mi", "tokens": [51426, 947, 17342, 388, 10504, 78, 32258, 294, 47298, 11, 614, 33627, 11, 785, 8375, 517, 7219, 418, 417, 2918, 2513, 6620, 22150, 947, 2752, 51734], "temperature": 0.0, "avg_logprob": -0.2169200522942586, "compression_ratio": 1.5588235294117647, "no_speech_prob": 0.1820068359375, "words": null}, {"id": 53, "seek": 39712, "start": 370.92, "end": 376.56, "text": " permette di includere librerie di ogni genere, le quali risiedono su di un enorme archivio online.", "tokens": [50364, 4784, 3007, 1026, 1637, 323, 4939, 17487, 1026, 33189, 41553, 11, 476, 4101, 72, 2253, 1091, 8957, 459, 1026, 517, 33648, 3912, 592, 1004, 2950, 13, 50646], "temperature": 0.0, "avg_logprob": -0.22323495508344085, "compression_ratio": 1.5942622950819672, "no_speech_prob": 0.03460693359375, "words": null}, {"id": 54, "seek": 39712, "start": 376.56, "end": 384.04, "text": " Quando lancio il comando composer require seguito dal nome di un pacchetto, l'operazione eseguita", "tokens": [50646, 18725, 9326, 8529, 1930, 395, 1806, 26003, 3651, 3896, 22703, 11702, 19003, 1026, 517, 15165, 339, 23778, 11, 287, 6, 7192, 12928, 785, 1146, 1983, 64, 51020], "temperature": 0.0, "avg_logprob": -0.22323495508344085, "compression_ratio": 1.5942622950819672, "no_speech_prob": 0.03460693359375, "words": null}, {"id": 55, "seek": 39712, "start": 384.04, "end": 390.08000000000004, "text": " in modo totalmente automatico \u00e8 molto simile al modo in cui si includevano le dipendenze una", "tokens": [51020, 294, 16664, 30865, 12509, 78, 4873, 16394, 1034, 794, 419, 16664, 294, 22929, 1511, 4090, 85, 3730, 476, 10460, 8896, 1381, 2002, 51322], "temperature": 0.0, "avg_logprob": -0.22323495508344085, "compression_ratio": 1.5942622950819672, "no_speech_prob": 0.03460693359375, "words": null}, {"id": 56, "seek": 39712, "start": 390.08000000000004, "end": 397.12, "text": " volta che abbiamo descritto prima, ma ovviamente \u00e8 anche un'operazione molto pi\u00f9 sofisticata. Il", "tokens": [51322, 18765, 947, 22815, 7471, 18579, 78, 19507, 11, 463, 14187, 23347, 4873, 11585, 517, 6, 7192, 12928, 16394, 10589, 37259, 3142, 3274, 13, 4416, 51674], "temperature": 0.0, "avg_logprob": -0.22323495508344085, "compression_ratio": 1.5942622950819672, "no_speech_prob": 0.03460693359375, "words": null}, {"id": 57, "seek": 42600, "start": 397.12, "end": 404.44, "text": " Package Manager, infatti, in pratica ricerca e identifica il pacchetto che ho richiesto e lo fa", "tokens": [50364, 18466, 609, 13821, 11, 1536, 21515, 11, 294, 28844, 2262, 21040, 36127, 308, 2473, 43377, 1930, 15165, 339, 23778, 947, 1106, 4593, 6495, 78, 308, 450, 2050, 50730], "temperature": 0.0, "avg_logprob": -0.21065341532230378, "compression_ratio": 1.6192468619246863, "no_speech_prob": 0.001987457275390625, "words": null}, {"id": 58, "seek": 42600, "start": 404.44, "end": 411.44, "text": " su degli archivi chiamati repository, uno dei quali \u00e8 pubblico e accessibile a tutti mentre", "tokens": [50730, 459, 32079, 3912, 33448, 417, 2918, 6908, 25841, 11, 8526, 13874, 4101, 72, 4873, 1535, 11489, 78, 308, 2105, 30898, 257, 19822, 49601, 51080], "temperature": 0.0, "avg_logprob": -0.21065341532230378, "compression_ratio": 1.6192468619246863, "no_speech_prob": 0.001987457275390625, "words": null}, {"id": 59, "seek": 42600, "start": 411.44, "end": 418.4, "text": " altri possono essere privati, creati da noi, dalla nostra azienda o da qualche altra entit\u00e0 che", "tokens": [51080, 33707, 43857, 19799, 2915, 6908, 11, 1428, 72, 1120, 22447, 11, 35566, 34311, 7883, 30498, 277, 1120, 38737, 4955, 424, 948, 12445, 947, 51428], "temperature": 0.0, "avg_logprob": -0.21065341532230378, "compression_ratio": 1.6192468619246863, "no_speech_prob": 0.001987457275390625, "words": null}, {"id": 60, "seek": 42600, "start": 418.4, "end": 426.0, "text": " successivamente ci ha concesso l'accesso. Una volta individuato il pacchetto, poi, il Package Manager", "tokens": [51428, 2245, 23957, 6983, 324, 416, 43611, 287, 6, 326, 43611, 13, 15491, 18765, 2461, 84, 2513, 1930, 15165, 339, 23778, 11, 19260, 11, 1930, 18466, 609, 13821, 51808], "temperature": 0.0, "avg_logprob": -0.21065341532230378, "compression_ratio": 1.6192468619246863, "no_speech_prob": 0.001987457275390625, "words": null}, {"id": 61, "seek": 45004, "start": 426.12, "end": 432.04, "text": " scarica in un apposito percorso del nostro progetto il codice corrispondente alla versione", "tokens": [50370, 10569, 2262, 294, 517, 724, 329, 3528, 680, 19558, 539, 1103, 35779, 447, 847, 1353, 1930, 17656, 573, 1181, 5714, 79, 684, 1576, 11591, 3037, 68, 50666], "temperature": 0.0, "avg_logprob": -0.2034226201829456, "compression_ratio": 1.7181818181818183, "no_speech_prob": 0.00021648406982421875, "words": null}, {"id": 62, "seek": 45004, "start": 432.04, "end": 437.28, "text": " da noi richiesta o, se non abbiamo specificato alcuna versione, quello corrispondente alla", "tokens": [50666, 1120, 22447, 4593, 38804, 277, 11, 369, 2107, 22815, 2685, 2513, 20005, 5051, 3037, 68, 11, 22813, 1181, 5714, 79, 684, 1576, 11591, 50928], "temperature": 0.0, "avg_logprob": -0.2034226201829456, "compression_ratio": 1.7181818181818183, "no_speech_prob": 0.00021648406982421875, "words": null}, {"id": 63, "seek": 45004, "start": 437.28, "end": 443.96, "text": " versione considerata la stabile del momento. Contemporaneamente a tutto questo per\u00f2 il gestore", "tokens": [50928, 3037, 68, 1949, 3274, 635, 16343, 794, 1103, 9333, 13, 4839, 11840, 1929, 3439, 257, 23048, 10263, 12673, 1930, 7219, 418, 51262], "temperature": 0.0, "avg_logprob": -0.2034226201829456, "compression_ratio": 1.7181818181818183, "no_speech_prob": 0.00021648406982421875, "words": null}, {"id": 64, "seek": 45004, "start": 443.96, "end": 450.04, "text": " dei pacchetti ha anche un altro compito, in realt\u00e0 ne ha molti ma in questo momento a noi interessa", "tokens": [51262, 13874, 15165, 339, 12495, 324, 11585, 517, 40924, 715, 3528, 11, 294, 47512, 408, 324, 10739, 72, 463, 294, 10263, 9333, 257, 22447, 728, 8391, 51566], "temperature": 0.0, "avg_logprob": -0.2034226201829456, "compression_ratio": 1.7181818181818183, "no_speech_prob": 0.00021648406982421875, "words": null}, {"id": 65, "seek": 47636, "start": 450.04, "end": 456.28000000000003, "text": " questo in particolare e cio\u00e8 quello di creare e mantenere aggiornata una lista di tutte le", "tokens": [50364, 10263, 294, 1276, 43141, 308, 41827, 22813, 1026, 1197, 543, 308, 38417, 323, 42254, 1865, 3274, 2002, 27764, 1026, 38632, 476, 50676], "temperature": 0.0, "avg_logprob": -0.2198329213822242, "compression_ratio": 1.635135135135135, "no_speech_prob": 0.293701171875, "words": null}, {"id": 66, "seek": 47636, "start": 456.28000000000003, "end": 462.88, "text": " dipendenze del progetto. Il vantaggio di un approccio del genere \u00e8, presto detto, dal momento", "tokens": [50676, 10460, 8896, 1381, 1103, 447, 847, 1353, 13, 4416, 371, 394, 30763, 1026, 517, 2075, 66, 8529, 1103, 41553, 4873, 11, 16305, 78, 41031, 11, 11702, 9333, 51006], "temperature": 0.0, "avg_logprob": -0.2198329213822242, "compression_ratio": 1.635135135135135, "no_speech_prob": 0.293701171875, "words": null}, {"id": 67, "seek": 47636, "start": 462.88, "end": 469.48, "text": " che esiste una precisa lista delle dipendenze e che queste sono inoltre reperibili online,", "tokens": [51006, 947, 785, 8375, 2002, 18861, 27764, 16485, 10460, 8896, 1381, 308, 947, 35455, 9259, 294, 401, 3599, 28946, 897, 2312, 2950, 11, 51336], "temperature": 0.0, "avg_logprob": -0.2198329213822242, "compression_ratio": 1.635135135135135, "no_speech_prob": 0.293701171875, "words": null}, {"id": 68, "seek": 47636, "start": 469.48, "end": 476.36, "text": " poco importa se su repository pubblici o se provengono da server privati o di accesso", "tokens": [51336, 10639, 33218, 369, 459, 25841, 1535, 11489, 72, 277, 369, 12785, 70, 8957, 1120, 7154, 2915, 6908, 277, 1026, 2105, 78, 51680], "temperature": 0.0, "avg_logprob": -0.2198329213822242, "compression_ratio": 1.635135135135135, "no_speech_prob": 0.293701171875, "words": null}, {"id": 69, "seek": 50176, "start": 476.8, "end": 484.28000000000003, "text": " esclusivo dello sviluppatore, allora \u00e8 possibile evitare di includere materialmente tutti i file", "tokens": [50386, 4721, 3063, 6340, 368, 1913, 17342, 388, 10504, 43148, 11, 44141, 4873, 50184, 1073, 270, 543, 1026, 1637, 323, 2527, 4082, 19822, 741, 3991, 50760], "temperature": 0.0, "avg_logprob": -0.20521763898432255, "compression_ratio": 1.5648535564853556, "no_speech_prob": 0.173095703125, "words": null}, {"id": 70, "seek": 50176, "start": 484.28000000000003, "end": 489.96000000000004, "text": " che compongono il progetto all'interno dell'archivio, portando cos\u00ec ad una notevole", "tokens": [50760, 947, 715, 556, 8957, 1930, 447, 847, 1353, 439, 6, 5106, 1771, 19781, 6, 1178, 592, 1004, 11, 2436, 1806, 23278, 614, 2002, 3637, 3080, 306, 51044], "temperature": 0.0, "avg_logprob": -0.20521763898432255, "compression_ratio": 1.5648535564853556, "no_speech_prob": 0.173095703125, "words": null}, {"id": 71, "seek": 50176, "start": 489.96000000000004, "end": 495.52000000000004, "text": " riduzione della dimensione del codice, cosa che lo rende pi\u00f9 facile da maneggiare, da archiviare,", "tokens": [51044, 3973, 3334, 5328, 11618, 10139, 68, 1103, 17656, 573, 11, 10163, 947, 450, 6125, 68, 10589, 23670, 1120, 587, 1146, 7834, 543, 11, 1120, 3912, 33448, 543, 11, 51322], "temperature": 0.0, "avg_logprob": -0.20521763898432255, "compression_ratio": 1.5648535564853556, "no_speech_prob": 0.173095703125, "words": null}, {"id": 72, "seek": 50176, "start": 495.52000000000004, "end": 501.76, "text": " da installare. Ora non scender\u00f2 in dettaglio perch\u00e9 non \u00e8 argomento di questo episodio ma", "tokens": [51322, 1120, 3625, 543, 13, 43672, 2107, 795, 3216, 4293, 294, 1141, 25030, 19987, 14303, 2107, 4873, 3882, 298, 15467, 1026, 10263, 39200, 1004, 463, 51634], "temperature": 0.0, "avg_logprob": -0.20521763898432255, "compression_ratio": 1.5648535564853556, "no_speech_prob": 0.173095703125, "words": null}, {"id": 73, "seek": 52812, "start": 501.76, "end": 507.08, "text": " i vantaggi dal punto di vista dello sviluppo e della distribuzione del software rendono questo", "tokens": [50364, 741, 371, 394, 46893, 11702, 14326, 1026, 22553, 368, 1913, 17342, 388, 10504, 78, 308, 11618, 4400, 3334, 5328, 1103, 4722, 6125, 8957, 10263, 50630], "temperature": 0.0, "avg_logprob": -0.1863738733368951, "compression_ratio": 1.5932203389830508, "no_speech_prob": 0.06744384765625, "words": null}, {"id": 74, "seek": 52812, "start": 507.08, "end": 513.3199999999999, "text": " approccio sicuramente molto migliore di quello descritto in precedenza, ma come per qualsiasi", "tokens": [50630, 2075, 66, 8529, 33579, 374, 3439, 16394, 6186, 2081, 418, 1026, 22813, 7471, 18579, 78, 294, 16969, 23691, 11, 463, 808, 680, 421, 1124, 4609, 72, 50942], "temperature": 0.0, "avg_logprob": -0.1863738733368951, "compression_ratio": 1.5932203389830508, "no_speech_prob": 0.06744384765625, "words": null}, {"id": 75, "seek": 52812, "start": 513.3199999999999, "end": 520.0, "text": " altra cosa non \u00e8 sempre tutto rose e fiori. Infatti \u00e8 proprio su questo meccanismo che", "tokens": [50942, 4955, 424, 10163, 2107, 4873, 9553, 23048, 10895, 308, 283, 1973, 72, 13, 11537, 21515, 4873, 28203, 459, 10263, 385, 1914, 282, 6882, 947, 51276], "temperature": 0.0, "avg_logprob": -0.1863738733368951, "compression_ratio": 1.5932203389830508, "no_speech_prob": 0.06744384765625, "words": null}, {"id": 76, "seek": 52812, "start": 520.0, "end": 528.12, "text": " Alex Birsan ha potuto basare il proprio attacco. In pratica Alex ha pensato di sfruttare i package", "tokens": [51276, 5202, 7145, 11491, 324, 1847, 8262, 987, 543, 1930, 28203, 951, 18662, 13, 682, 28844, 2262, 5202, 324, 6099, 2513, 1026, 262, 5779, 13478, 543, 741, 7372, 51682], "temperature": 0.0, "avg_logprob": -0.1863738733368951, "compression_ratio": 1.5932203389830508, "no_speech_prob": 0.06744384765625, "words": null}, {"id": 77, "seek": 55516, "start": 528.12, "end": 534.52, "text": " manager di alcuni linguaggi di programmazione molto diffusi per provare a installare un proprio", "tokens": [50364, 6598, 1026, 20005, 24307, 21766, 46893, 1026, 37648, 12928, 16394, 7593, 33016, 680, 1439, 543, 257, 3625, 543, 517, 28203, 50684], "temperature": 0.0, "avg_logprob": -0.19580517803226505, "compression_ratio": 1.6425531914893616, "no_speech_prob": 0.340576171875, "words": null}, {"id": 78, "seek": 55516, "start": 534.52, "end": 541.32, "text": " codice all'interno dei progetti di moltissime grandi aziende. In particolare si \u00e8 concentrato", "tokens": [50684, 17656, 573, 439, 6, 5106, 1771, 13874, 447, 847, 7317, 1026, 10739, 891, 1312, 45155, 7883, 45816, 13, 682, 1276, 43141, 1511, 4873, 5512, 43037, 51024], "temperature": 0.0, "avg_logprob": -0.19580517803226505, "compression_ratio": 1.6425531914893616, "no_speech_prob": 0.340576171875, "words": null}, {"id": 79, "seek": 55516, "start": 541.32, "end": 548.44, "text": " su tre linguaggi molto diffusi, Python, Node e Ruby. Cercando su repository pubblici, su motori", "tokens": [51024, 459, 2192, 21766, 46893, 16394, 7593, 33016, 11, 15329, 11, 38640, 308, 19907, 13, 383, 2869, 1806, 459, 25841, 1535, 11489, 72, 11, 459, 2184, 7386, 51380], "temperature": 0.0, "avg_logprob": -0.19580517803226505, "compression_ratio": 1.6425531914893616, "no_speech_prob": 0.340576171875, "words": null}, {"id": 80, "seek": 55516, "start": 548.44, "end": 555.16, "text": " di ricerca e all'interno di progetti e siti web, si \u00e8 procurato tutta una serie di file contenenti", "tokens": [51380, 1026, 21040, 36127, 308, 439, 6, 5106, 1771, 1026, 447, 847, 7317, 308, 1394, 72, 3670, 11, 1511, 4873, 9510, 374, 2513, 3672, 1328, 2002, 23030, 1026, 3991, 21795, 23012, 51716], "temperature": 0.0, "avg_logprob": -0.19580517803226505, "compression_ratio": 1.6425531914893616, "no_speech_prob": 0.340576171875, "words": null}, {"id": 81, "seek": 58076, "start": 555.24, "end": 561.64, "text": " liste di dipendenze di software utilizzati e sviluppati nelle aziende prese di mira. Ovviamente", "tokens": [50368, 1329, 68, 1026, 10460, 8896, 1381, 1026, 4722, 40355, 6908, 308, 17342, 388, 10504, 6908, 46350, 7883, 45816, 659, 405, 1026, 30286, 13, 50005, 23347, 50688], "temperature": 0.0, "avg_logprob": -0.19886364191770553, "compression_ratio": 1.5477178423236515, "no_speech_prob": 0.0209503173828125, "words": null}, {"id": 82, "seek": 58076, "start": 561.64, "end": 568.24, "text": " ci\u00f2 \u00e8 stato possibile perch\u00e9 spesso accade che questi file finiscano per sbaglio all'interno di", "tokens": [50688, 6983, 4293, 4873, 29657, 50184, 14303, 637, 5557, 1317, 762, 947, 29729, 3991, 962, 5606, 3730, 680, 262, 17282, 19987, 439, 6, 5106, 1771, 1026, 51018], "temperature": 0.0, "avg_logprob": -0.19886364191770553, "compression_ratio": 1.5477178423236515, "no_speech_prob": 0.0209503173828125, "words": null}, {"id": 83, "seek": 58076, "start": 568.24, "end": 573.88, "text": " progetti successivamente resi pubblici, o addirittura in altri progetti ai quali non", "tokens": [51018, 447, 847, 7317, 2245, 23957, 725, 72, 1535, 11489, 72, 11, 277, 909, 347, 593, 2991, 294, 33707, 447, 847, 7317, 9783, 4101, 72, 2107, 51300], "temperature": 0.0, "avg_logprob": -0.19886364191770553, "compression_ratio": 1.5477178423236515, "no_speech_prob": 0.0209503173828125, "words": null}, {"id": 84, "seek": 58076, "start": 573.88, "end": 580.76, "text": " dovrebbero appartenere, o ancora che vengano pubblicati direttamente online. Ma ad ogni modo,", "tokens": [51300, 30870, 22692, 46659, 724, 11719, 323, 11, 277, 30656, 947, 6138, 35255, 1535, 11489, 6908, 1264, 6319, 3439, 2950, 13, 4042, 614, 33189, 16664, 11, 51644], "temperature": 0.0, "avg_logprob": -0.19886364191770553, "compression_ratio": 1.5477178423236515, "no_speech_prob": 0.0209503173828125, "words": null}, {"id": 85, "seek": 60764, "start": 580.92, "end": 587.64, "text": " una volta reperita questa serie di file, Alex ha potuto filtrare al loro interno tutte le", "tokens": [50372, 2002, 18765, 28946, 2786, 16540, 23030, 1026, 3991, 11, 5202, 324, 1847, 8262, 1387, 17227, 265, 419, 28810, 728, 1771, 38632, 476, 50708], "temperature": 0.0, "avg_logprob": -0.19092261677696593, "compression_ratio": 1.7156398104265402, "no_speech_prob": 0.048065185546875, "words": null}, {"id": 86, "seek": 60764, "start": 587.64, "end": 593.4399999999999, "text": " dipendenze che si trovano pubblicamente disponibili online. L'obiettivo di Alex era", "tokens": [50708, 10460, 8896, 1381, 947, 1511, 35449, 3730, 1535, 11489, 3439, 23311, 897, 2312, 2950, 13, 441, 6, 996, 1684, 83, 6340, 1026, 5202, 4249, 50998], "temperature": 0.0, "avg_logprob": -0.19092261677696593, "compression_ratio": 1.7156398104265402, "no_speech_prob": 0.048065185546875, "words": null}, {"id": 87, "seek": 60764, "start": 593.4399999999999, "end": 600.3199999999999, "text": " procurarsi una lista delle dipendenze private di queste varie aziende, quindi non ha dovuto fare", "tokens": [50998, 9510, 374, 32742, 2002, 27764, 16485, 10460, 8896, 1381, 4551, 1026, 35455, 1374, 414, 7883, 45816, 11, 15727, 2107, 324, 30870, 8262, 11994, 51342], "temperature": 0.0, "avg_logprob": -0.19092261677696593, "compression_ratio": 1.7156398104265402, "no_speech_prob": 0.048065185546875, "words": null}, {"id": 88, "seek": 60764, "start": 600.3199999999999, "end": 607.64, "text": " altro che lavorare per sottrazione, prendere tutte le dipendenze elencate e sottrarre tutte", "tokens": [51342, 40924, 947, 29241, 543, 680, 262, 1521, 424, 19706, 11, 9866, 323, 38632, 476, 10460, 8896, 1381, 806, 22660, 473, 308, 262, 1521, 5352, 265, 38632, 51708], "temperature": 0.0, "avg_logprob": -0.19092261677696593, "compression_ratio": 1.7156398104265402, "no_speech_prob": 0.048065185546875, "words": null}, {"id": 89, "seek": 63196, "start": 607.64, "end": 614.1999999999999, "text": " quelle librerie che \u00e8 riuscito a trovare pubblicamente accessibili sul web. Eliminando", "tokens": [50364, 29237, 4939, 17487, 947, 4873, 367, 4872, 32030, 257, 35449, 543, 1535, 11489, 3439, 2105, 897, 2312, 17603, 3670, 13, 2699, 4395, 1806, 50692], "temperature": 0.0, "avg_logprob": -0.21696428684961228, "compression_ratio": 1.5769230769230769, "no_speech_prob": 0.0306549072265625, "words": null}, {"id": 90, "seek": 63196, "start": 614.1999999999999, "end": 619.84, "text": " quindi tutte le librerie pubbliche dalla lista, gli sono per forza di cose rimaste le dipendenze", "tokens": [50692, 15727, 38632, 476, 4939, 17487, 1535, 65, 10185, 35566, 27764, 11, 17161, 9259, 680, 337, 2394, 1026, 30261, 15982, 9079, 476, 10460, 8896, 1381, 50974], "temperature": 0.0, "avg_logprob": -0.21696428684961228, "compression_ratio": 1.5769230769230769, "no_speech_prob": 0.0306549072265625, "words": null}, {"id": 91, "seek": 63196, "start": 619.84, "end": 625.48, "text": " private, quelle che evidentemente le varie aziende rendevano disponibili ai propri sviluppatori", "tokens": [50974, 4551, 11, 29237, 947, 16371, 16288, 476, 1374, 414, 7883, 45816, 6125, 13379, 3730, 23311, 897, 2312, 9783, 40465, 17342, 388, 10504, 39842, 51256], "temperature": 0.0, "avg_logprob": -0.21696428684961228, "compression_ratio": 1.5769230769230769, "no_speech_prob": 0.0306549072265625, "words": null}, {"id": 92, "seek": 63196, "start": 625.48, "end": 631.96, "text": " tramite server privati. E a questo punto l'hacker ha potuto sferrare il proprio attacco,", "tokens": [51256, 25749, 642, 7154, 2915, 6908, 13, 462, 257, 10263, 14326, 287, 6, 71, 23599, 324, 1847, 8262, 262, 612, 35559, 1930, 28203, 951, 18662, 11, 51580], "temperature": 0.0, "avg_logprob": -0.21696428684961228, "compression_ratio": 1.5769230769230769, "no_speech_prob": 0.0306549072265625, "words": null}, {"id": 93, "seek": 65652, "start": 631.96, "end": 636.64, "text": " semplicemente creando sui repository pubblici dei vari linguaggi una serie di pacchetti", "tokens": [50364, 4361, 4770, 16288, 1197, 1806, 459, 72, 25841, 1535, 11489, 72, 13874, 3034, 21766, 46893, 2002, 23030, 1026, 15165, 339, 12495, 50598], "temperature": 0.0, "avg_logprob": -0.2317187552154064, "compression_ratio": 1.6017699115044248, "no_speech_prob": 0.1021728515625, "words": null}, {"id": 94, "seek": 65652, "start": 636.64, "end": 643.1600000000001, "text": " contenenti tutti lo stesso codice, ma aventi ciascuno il nome di uno dei pacchetti privati", "tokens": [50598, 21795, 23012, 19822, 450, 44413, 17656, 573, 11, 463, 1305, 23012, 269, 4609, 66, 12638, 1930, 19003, 1026, 8526, 13874, 15165, 339, 12495, 2915, 6908, 50924], "temperature": 0.0, "avg_logprob": -0.2317187552154064, "compression_ratio": 1.6017699115044248, "no_speech_prob": 0.1021728515625, "words": null}, {"id": 95, "seek": 65652, "start": 643.1600000000001, "end": 649.32, "text": " della lista. Proviamo a capire meglio questo processo con un esempio. Mettiamo che Alex sia", "tokens": [50924, 11618, 27764, 13, 15685, 7415, 257, 1410, 621, 48911, 10263, 27939, 416, 517, 33627, 13, 376, 3093, 7415, 947, 5202, 25176, 51232], "temperature": 0.0, "avg_logprob": -0.2317187552154064, "compression_ratio": 1.6017699115044248, "no_speech_prob": 0.1021728515625, "words": null}, {"id": 96, "seek": 65652, "start": 649.32, "end": 656.52, "text": " riuscito a trovare il file del package manager di un progetto di una grande azienda come ad", "tokens": [51232, 367, 4872, 32030, 257, 35449, 543, 1930, 3991, 1103, 7372, 6598, 1026, 517, 447, 847, 1353, 1026, 2002, 8883, 7883, 30498, 808, 614, 51592], "temperature": 0.0, "avg_logprob": -0.2317187552154064, "compression_ratio": 1.6017699115044248, "no_speech_prob": 0.1021728515625, "words": null}, {"id": 97, "seek": 68560, "start": 656.52, "end": 663.88, "text": " esempio Paypal. In questo file saranno elencate le dipendenze di tale progetto. Facciamo finta", "tokens": [50364, 33627, 11431, 31862, 13, 682, 10263, 3991, 13782, 13484, 806, 22660, 473, 476, 10460, 8896, 1381, 1026, 17172, 447, 847, 1353, 13, 17667, 42052, 283, 16071, 50732], "temperature": 0.0, "avg_logprob": -0.19403409280560233, "compression_ratio": 1.5967078189300412, "no_speech_prob": 0.28076171875, "words": null}, {"id": 98, "seek": 68560, "start": 663.88, "end": 671.3199999999999, "text": " che siano tre librerie che chiameremo A, B e C. Ora per sferrare il proprio attacco Alex dovrebbe", "tokens": [50732, 947, 262, 6254, 2192, 4939, 17487, 947, 417, 2918, 323, 3280, 316, 11, 363, 308, 383, 13, 43672, 680, 262, 612, 35559, 1930, 28203, 951, 18662, 5202, 30870, 39487, 51104], "temperature": 0.0, "avg_logprob": -0.19403409280560233, "compression_ratio": 1.5967078189300412, "no_speech_prob": 0.28076171875, "words": null}, {"id": 99, "seek": 68560, "start": 671.3199999999999, "end": 678.1999999999999, "text": " controllare se tutte queste librerie risultano presenti sul repository pubblico. E sempre per", "tokens": [51104, 45159, 543, 369, 38632, 35455, 4939, 17487, 2253, 723, 3730, 1974, 72, 17603, 25841, 1535, 11489, 78, 13, 462, 9553, 680, 51448], "temperature": 0.0, "avg_logprob": -0.19403409280560233, "compression_ratio": 1.5967078189300412, "no_speech_prob": 0.28076171875, "words": null}, {"id": 100, "seek": 68560, "start": 678.1999999999999, "end": 685.6, "text": " amore di esempio immaginiamo che la libreria A non sia fra queste, quindi sia identificabile come una", "tokens": [51448, 669, 418, 1026, 33627, 3397, 559, 259, 7415, 947, 635, 4939, 41568, 316, 2107, 25176, 6600, 35455, 11, 15727, 25176, 49456, 33288, 808, 2002, 51818], "temperature": 0.0, "avg_logprob": -0.19403409280560233, "compression_ratio": 1.5967078189300412, "no_speech_prob": 0.28076171875, "words": null}, {"id": 101, "seek": 71512, "start": 685.64, "end": 693.36, "text": " libreria privata di Paypal. A questo punto Alex non dovrebbe far altro che prendere il suo codice e", "tokens": [50366, 4939, 41568, 2915, 3274, 1026, 11431, 31862, 13, 316, 10263, 14326, 5202, 2107, 30870, 39487, 1400, 40924, 947, 9866, 323, 1930, 34197, 17656, 573, 308, 50752], "temperature": 0.0, "avg_logprob": -0.2177465558052063, "compression_ratio": 1.6276150627615062, "no_speech_prob": 0.00154876708984375, "words": null}, {"id": 102, "seek": 71512, "start": 693.36, "end": 701.76, "text": " utilizzarlo per creare una libreria sul repository pubblico chiamata A. Al termine di questo processo,", "tokens": [50752, 40355, 19457, 680, 1197, 543, 2002, 4939, 41568, 17603, 25841, 1535, 11489, 78, 417, 2918, 3274, 316, 13, 967, 1433, 533, 1026, 10263, 27939, 11, 51172], "temperature": 0.0, "avg_logprob": -0.2177465558052063, "compression_ratio": 1.6276150627615062, "no_speech_prob": 0.00154876708984375, "words": null}, {"id": 103, "seek": 71512, "start": 701.76, "end": 709.6, "text": " ripetuto per tutte le librerie private identificate, la speranza era quella che gli sviluppatori e", "tokens": [51172, 12782, 302, 8262, 680, 38632, 476, 4939, 17487, 4551, 49456, 473, 11, 635, 24152, 20030, 4249, 32234, 947, 17161, 17342, 388, 10504, 39842, 308, 51564], "temperature": 0.0, "avg_logprob": -0.2177465558052063, "compression_ratio": 1.6276150627615062, "no_speech_prob": 0.00154876708984375, "words": null}, {"id": 104, "seek": 71512, "start": 709.6, "end": 715.12, "text": " magari i sistemi automatizzati adibiti all'installazione dei vari progetti scegliessero", "tokens": [51564, 49932, 741, 10555, 13372, 28034, 8072, 6908, 614, 897, 8707, 439, 6, 40166, 12928, 13874, 3034, 447, 847, 7317, 262, 384, 70, 2081, 442, 2032, 51840], "temperature": 0.0, "avg_logprob": -0.2177465558052063, "compression_ratio": 1.6276150627615062, "no_speech_prob": 0.00154876708984375, "words": null}, {"id": 105, "seek": 74236, "start": 715.12, "end": 722.28, "text": " di scaricare i pacchetti falsi pubblici di Alex invece di quelli veri privati dell'azienda. E", "tokens": [50364, 1026, 10569, 299, 543, 741, 15165, 339, 12495, 16720, 72, 1535, 11489, 72, 1026, 5202, 36344, 1026, 631, 16320, 1306, 72, 2915, 6908, 19781, 6, 921, 30498, 13, 462, 50722], "temperature": 0.0, "avg_logprob": -0.18045594921854677, "compression_ratio": 1.503875968992248, "no_speech_prob": 0.002758026123046875, "words": null}, {"id": 106, "seek": 74236, "start": 722.28, "end": 728.24, "text": " indovinate un po', in effetti \u00e8 stato cos\u00ec. L'autore ha battezzato questo suo tipo di attacco", "tokens": [50722, 1016, 5179, 13923, 517, 714, 6098, 294, 1244, 12495, 4873, 29657, 23278, 13, 441, 6, 1375, 418, 324, 7362, 975, 4313, 2513, 10263, 34197, 9746, 1026, 951, 18662, 51020], "temperature": 0.0, "avg_logprob": -0.18045594921854677, "compression_ratio": 1.503875968992248, "no_speech_prob": 0.002758026123046875, "words": null}, {"id": 107, "seek": 74236, "start": 728.24, "end": 734.4, "text": " Dependency Confusion e nell'articolo che vi lascio in descrizione per maggiori dettagli e che vi", "tokens": [51020, 4056, 521, 3020, 11701, 5704, 308, 44666, 6, 446, 299, 7902, 947, 1932, 2439, 8529, 294, 2189, 19706, 680, 44639, 1973, 72, 1141, 25030, 2081, 308, 947, 1932, 51328], "temperature": 0.0, "avg_logprob": -0.18045594921854677, "compression_ratio": 1.503875968992248, "no_speech_prob": 0.002758026123046875, "words": null}, {"id": 108, "seek": 74236, "start": 734.4, "end": 742.36, "text": " consiglio di leggere perch\u00e9 \u00e8 davvero interessante, Alex racconta di oltre 35 compagnie colpite tra", "tokens": [51328, 40233, 19987, 1026, 30991, 323, 14303, 4873, 11753, 39332, 24372, 11, 5202, 4129, 9000, 64, 1026, 277, 2282, 265, 6976, 715, 559, 2766, 1173, 79, 642, 944, 51726], "temperature": 0.0, "avg_logprob": -0.18045594921854677, "compression_ratio": 1.503875968992248, "no_speech_prob": 0.002758026123046875, "words": null}, {"id": 109, "seek": 77236, "start": 742.36, "end": 749.08, "text": " cui Shopify, Apple e Paypal, ciascuna delle quali ha riconosciuto al giovane cacciatore", "tokens": [50364, 22929, 43991, 11, 6373, 308, 11431, 31862, 11, 269, 4609, 66, 5051, 16485, 4101, 72, 324, 367, 11911, 329, 537, 8262, 419, 290, 20675, 1929, 269, 43870, 43148, 50700], "temperature": 0.0, "avg_logprob": -0.19212371962411062, "compression_ratio": 1.2155172413793103, "no_speech_prob": 0.07916259765625, "words": null}, {"id": 110, "seek": 77236, "start": 749.08, "end": 753.16, "text": " una taglia di 30 mila dollari per il bug individuato.", "tokens": [50700, 2002, 6162, 14218, 1026, 2217, 1962, 64, 2722, 3504, 680, 1930, 7426, 2461, 84, 2513, 13, 50904], "temperature": 0.0, "avg_logprob": -0.19212371962411062, "compression_ratio": 1.2155172413793103, "no_speech_prob": 0.07916259765625, "words": null}, {"id": 111, "seek": 79900, "start": 773.36, "end": 780.92, "text": " Se vi venisse voglia di provare a fare come Alex e diventare bug hunters, tenete presente che le", "tokens": [50414, 1100, 1932, 6138, 7746, 31273, 14218, 1026, 1439, 543, 257, 11994, 808, 5202, 308, 3414, 317, 543, 7426, 29509, 11, 2064, 3498, 28709, 947, 476, 50792], "temperature": 0.0, "avg_logprob": -0.2173672545272692, "compression_ratio": 1.6180257510729614, "no_speech_prob": 0.0684814453125, "words": null}, {"id": 112, "seek": 79900, "start": 780.92, "end": 786.88, "text": " aziende che attaccate devono essere informate prima e che dovete stipulare dei contratti o", "tokens": [50792, 7883, 45816, 947, 951, 8476, 473, 1905, 8957, 19799, 1356, 473, 19507, 308, 947, 30870, 3498, 37001, 425, 543, 13874, 10273, 21515, 277, 51090], "temperature": 0.0, "avg_logprob": -0.2173672545272692, "compression_ratio": 1.6180257510729614, "no_speech_prob": 0.0684814453125, "words": null}, {"id": 113, "seek": 79900, "start": 786.88, "end": 794.2, "text": " iscrivervi al programma di bug hunting, altrimenti \u00e8 illegale e si rischia grosso. Inoltre i tentativi", "tokens": [51090, 307, 1142, 331, 4917, 419, 1461, 1696, 1026, 7426, 12599, 11, 4955, 30591, 72, 4873, 9976, 1220, 308, 1511, 2253, 339, 654, 18638, 539, 13, 682, 401, 3599, 741, 7054, 10662, 72, 51456], "temperature": 0.0, "avg_logprob": -0.2173672545272692, "compression_ratio": 1.6180257510729614, "no_speech_prob": 0.0684814453125, "words": null}, {"id": 114, "seek": 79900, "start": 794.2, "end": 799.0, "text": " di hacking non devono essere mirati al danneggiamento dei sistemi o alle sfiltrazioni", "tokens": [51456, 1026, 31422, 2107, 1905, 8957, 19799, 3149, 6908, 419, 3277, 716, 22771, 8824, 13874, 10555, 13372, 277, 5430, 262, 69, 2352, 30695, 15273, 51696], "temperature": 0.0, "avg_logprob": -0.2173672545272692, "compression_ratio": 1.6180257510729614, "no_speech_prob": 0.0684814453125, "words": null}, {"id": 115, "seek": 82248, "start": 799.0, "end": 803.36, "text": " dei dati, altrimenti anche in questo caso potrebbero esserci ripercussioni legali.", "tokens": [50364, 13874, 1137, 72, 11, 4955, 30591, 72, 11585, 294, 10263, 9666, 1847, 22692, 46659, 2097, 260, 537, 367, 15402, 2169, 15273, 1676, 5103, 13, 50582], "temperature": 0.0, "avg_logprob": -0.23184120923549206, "compression_ratio": 1.5689655172413792, "no_speech_prob": 0.333984375, "words": null}, {"id": 116, "seek": 82248, "start": 803.36, "end": 810.52, "text": " Il codice contenuto nei pacchetti falsi di Alex Birsen infatti conteneva solo dei meccanismi di", "tokens": [50582, 4416, 17656, 573, 21795, 8262, 34517, 15165, 339, 12495, 16720, 72, 1026, 5202, 7145, 6748, 1536, 21515, 660, 1450, 2757, 6944, 13874, 385, 1914, 282, 1434, 72, 1026, 50940], "temperature": 0.0, "avg_logprob": -0.23184120923549206, "compression_ratio": 1.5689655172413792, "no_speech_prob": 0.333984375, "words": null}, {"id": 117, "seek": 82248, "start": 810.52, "end": 817.32, "text": " notifica per avvisare dell'avvenuta installazione e identificare l'azienda colpita. Ma a parte questo,", "tokens": [50940, 406, 43377, 680, 1305, 4938, 543, 19781, 6, 706, 553, 12093, 3625, 12928, 308, 49456, 543, 287, 6, 921, 30498, 1173, 79, 2786, 13, 4042, 257, 6975, 10263, 11, 51280], "temperature": 0.0, "avg_logprob": -0.23184120923549206, "compression_ratio": 1.5689655172413792, "no_speech_prob": 0.333984375, "words": null}, {"id": 118, "seek": 82248, "start": 817.32, "end": 822.48, "text": " cosa possiamo imparare noi programmatori, professionisti o meno, da questa storia?", "tokens": [51280, 10163, 44758, 704, 289, 543, 22447, 1461, 15677, 7386, 11, 7032, 45308, 277, 40236, 11, 1120, 16540, 5967, 654, 30, 51538], "temperature": 0.0, "avg_logprob": -0.23184120923549206, "compression_ratio": 1.5689655172413792, "no_speech_prob": 0.333984375, "words": null}, {"id": 119, "seek": 84852, "start": 823.12, "end": 829.6800000000001, "text": " Io sarei felice di sapere voi cosa ne pensate, magari sul canale telegram o sul gruppo o anche", "tokens": [50396, 19239, 38706, 72, 11094, 573, 1026, 18985, 323, 20931, 10163, 408, 6099, 473, 11, 49932, 17603, 393, 1220, 4304, 1342, 277, 17603, 47477, 78, 277, 11585, 50724], "temperature": 0.0, "avg_logprob": -0.2007211574122437, "compression_ratio": 1.5657370517928286, "no_speech_prob": 0.274658203125, "words": null}, {"id": 120, "seek": 84852, "start": 829.6800000000001, "end": 835.6800000000001, "text": " tramite messaggi o commenti, trovate tutti i riferimenti in descrizione. Nel frattempo per\u00f2", "tokens": [50724, 25749, 642, 2082, 46893, 277, 2871, 72, 11, 4495, 19083, 19822, 741, 367, 9361, 2328, 72, 294, 2189, 19706, 13, 426, 338, 431, 1591, 443, 2259, 12673, 51024], "temperature": 0.0, "avg_logprob": -0.2007211574122437, "compression_ratio": 1.5657370517928286, "no_speech_prob": 0.274658203125, "words": null}, {"id": 121, "seek": 84852, "start": 835.6800000000001, "end": 842.04, "text": " una cosa mi sento di dirla, perch\u00e9 \u00e8 un pensiero che gi\u00e0 mi girava in testa da molto tempo e questa", "tokens": [51024, 2002, 10163, 2752, 2279, 78, 1026, 4746, 875, 11, 14303, 4873, 517, 6099, 12030, 947, 30469, 2752, 14703, 4061, 294, 1500, 64, 1120, 16394, 8972, 308, 16540, 51342], "temperature": 0.0, "avg_logprob": -0.2007211574122437, "compression_ratio": 1.5657370517928286, "no_speech_prob": 0.274658203125, "words": null}, {"id": 122, "seek": 84852, "start": 842.04, "end": 848.52, "text": " storia non fa altro che avallarlo. In informatica si dice sempre che non bisogna reinventare la ruota,", "tokens": [51342, 5967, 654, 2107, 2050, 40924, 947, 1305, 336, 19457, 13, 682, 1356, 267, 2262, 1511, 10313, 9553, 947, 2107, 40505, 629, 33477, 543, 635, 5420, 5377, 11, 51666], "temperature": 0.0, "avg_logprob": -0.2007211574122437, "compression_ratio": 1.5657370517928286, "no_speech_prob": 0.274658203125, "words": null}, {"id": 123, "seek": 87720, "start": 848.52, "end": 854.92, "text": " se una cosa gi\u00e0 esiste ed \u00e8 gi\u00e0 disponibile non \u00e8 necessario ricrearla e in generale sono", "tokens": [50364, 369, 2002, 10163, 30469, 785, 8375, 1257, 4873, 30469, 23311, 30898, 2107, 4873, 2688, 4912, 21040, 265, 34148, 308, 294, 1337, 1220, 9259, 50684], "temperature": 0.0, "avg_logprob": -0.1930717054263566, "compression_ratio": 1.6374045801526718, "no_speech_prob": 0.00490570068359375, "words": null}, {"id": 124, "seek": 87720, "start": 854.92, "end": 860.72, "text": " tutti i ragionamenti corretti. Tuttavia io per\u00f2 credo che come in tutte le cose anche", "tokens": [50684, 19822, 741, 17539, 313, 2466, 72, 1181, 1505, 7317, 13, 314, 13478, 23015, 19785, 12673, 3864, 78, 947, 808, 294, 38632, 476, 30261, 11585, 50974], "temperature": 0.0, "avg_logprob": -0.1930717054263566, "compression_ratio": 1.6374045801526718, "no_speech_prob": 0.00490570068359375, "words": null}, {"id": 125, "seek": 87720, "start": 860.72, "end": 865.0799999999999, "text": " queste affermazioni vadano ragionate e contestualizzate. \u00c8 vero che in linea", "tokens": [50974, 35455, 2096, 966, 27569, 16684, 3730, 17539, 313, 473, 308, 10287, 901, 8072, 473, 13, 34495, 1306, 78, 947, 294, 1622, 64, 51192], "temperature": 0.0, "avg_logprob": -0.1930717054263566, "compression_ratio": 1.6374045801526718, "no_speech_prob": 0.00490570068359375, "words": null}, {"id": 126, "seek": 87720, "start": 865.0799999999999, "end": 870.68, "text": " generale conviene sfruttare componenti gi\u00e0 esistenti, ma non in modo circotuso.", "tokens": [51192, 1337, 1220, 3754, 10174, 262, 5779, 13478, 543, 6542, 72, 30469, 785, 468, 23012, 11, 463, 2107, 294, 16664, 3510, 310, 24431, 13, 51472], "temperature": 0.0, "avg_logprob": -0.1930717054263566, "compression_ratio": 1.6374045801526718, "no_speech_prob": 0.00490570068359375, "words": null}, {"id": 127, "seek": 87720, "start": 870.68, "end": 877.1999999999999, "text": " Una dipendenza aggiunta al nostro progetto ci risparmia tempo di sviluppo e a volte anche", "tokens": [51472, 15491, 10460, 8896, 2394, 42254, 46380, 419, 35779, 447, 847, 1353, 6983, 2253, 2181, 29958, 8972, 1026, 17342, 388, 10504, 78, 308, 257, 37801, 11585, 51798], "temperature": 0.0, "avg_logprob": -0.1930717054263566, "compression_ratio": 1.6374045801526718, "no_speech_prob": 0.00490570068359375, "words": null}, {"id": 128, "seek": 90164, "start": 877.2, "end": 884.4000000000001, "text": " molto, ma allo stesso tempo aumenta la possibilit\u00e0 che si verifichino dei problemi. In gergo si dice", "tokens": [50364, 16394, 11, 463, 439, 78, 44413, 8972, 17128, 64, 635, 24145, 12445, 947, 1511, 1306, 351, 480, 2982, 13874, 1154, 72, 13, 682, 5713, 1571, 1511, 10313, 50724], "temperature": 0.0, "avg_logprob": -0.19825114350800122, "compression_ratio": 1.5127118644067796, "no_speech_prob": 0.0027141571044921875, "words": null}, {"id": 129, "seek": 90164, "start": 884.4000000000001, "end": 889.32, "text": " che allarga il perimetro della sicurezza. E non mi riferisco solo all'attacco di", "tokens": [50724, 947, 439, 289, 3680, 1930, 680, 26123, 340, 11618, 33579, 540, 26786, 13, 462, 2107, 2752, 367, 9361, 8610, 6944, 439, 6, 1591, 18662, 1026, 50970], "temperature": 0.0, "avg_logprob": -0.19825114350800122, "compression_ratio": 1.5127118644067796, "no_speech_prob": 0.0027141571044921875, "words": null}, {"id": 130, "seek": 90164, "start": 889.32, "end": 895.88, "text": " Dependency Confusion scoperto da Birsan, esistono molti altri attacchi. La libreria", "tokens": [50970, 4056, 521, 3020, 11701, 5704, 795, 404, 13098, 1120, 7145, 11491, 11, 785, 468, 8957, 10739, 72, 33707, 951, 326, 8036, 13, 2369, 4939, 41568, 51298], "temperature": 0.0, "avg_logprob": -0.19825114350800122, "compression_ratio": 1.5127118644067796, "no_speech_prob": 0.0027141571044921875, "words": null}, {"id": 131, "seek": 90164, "start": 895.88, "end": 901.6400000000001, "text": " installata ad esempio potrebbe contenere dei bug di sicurezza ancora non scoperti e questo", "tokens": [51298, 3625, 3274, 614, 33627, 1847, 39487, 21795, 323, 13874, 7426, 1026, 33579, 540, 26786, 30656, 2107, 795, 404, 911, 72, 308, 10263, 51586], "temperature": 0.0, "avg_logprob": -0.19825114350800122, "compression_ratio": 1.5127118644067796, "no_speech_prob": 0.0027141571044921875, "words": null}, {"id": 132, "seek": 93108, "start": 901.64, "end": 906.4399999999999, "text": " implica un potenziale pericolo, ma anche la necessit\u00e0 di rimanere al passo con gli", "tokens": [50364, 8484, 2262, 517, 1847, 11368, 25051, 680, 299, 7902, 11, 463, 11585, 635, 2688, 12445, 1026, 15982, 282, 323, 419, 38159, 416, 17161, 50604], "temperature": 0.0, "avg_logprob": -0.15931166084231557, "compression_ratio": 1.6798561151079137, "no_speech_prob": 0.358642578125, "words": null}, {"id": 133, "seek": 93108, "start": 906.4399999999999, "end": 913.04, "text": " aggiornamenti. Oppure potremmo paradossalmente sbagliare ad installare dipendenza. Basta sbagliare", "tokens": [50604, 42254, 1865, 2466, 72, 13, 15666, 540, 1847, 265, 2174, 78, 13480, 772, 304, 4082, 262, 17282, 2081, 543, 614, 3625, 543, 10460, 8896, 2394, 13, 363, 12468, 262, 17282, 2081, 543, 50934], "temperature": 0.0, "avg_logprob": -0.15931166084231557, "compression_ratio": 1.6798561151079137, "no_speech_prob": 0.358642578125, "words": null}, {"id": 134, "seek": 93108, "start": 913.04, "end": 919.4, "text": " infatti una lettera e magari c'\u00e8 qualche furbone che ha potuto creare un pacchetto con il nome", "tokens": [50934, 1536, 21515, 2002, 5063, 64, 308, 49932, 269, 6, 1462, 38737, 2687, 19782, 947, 324, 1847, 8262, 1197, 543, 517, 15165, 339, 23778, 416, 1930, 19003, 51252], "temperature": 0.0, "avg_logprob": -0.15931166084231557, "compression_ratio": 1.6798561151079137, "no_speech_prob": 0.358642578125, "words": null}, {"id": 135, "seek": 93108, "start": 919.4, "end": 925.48, "text": " appositamente sbagliato e delle backdoor all'interno. Oppure ancora qualcuno potrebbe riuscire ad", "tokens": [51252, 724, 9598, 3439, 262, 17282, 2081, 2513, 308, 16485, 646, 10441, 439, 6, 5106, 1771, 13, 15666, 540, 30656, 32101, 12638, 1847, 39487, 367, 4872, 537, 265, 614, 51556], "temperature": 0.0, "avg_logprob": -0.15931166084231557, "compression_ratio": 1.6798561151079137, "no_speech_prob": 0.358642578125, "words": null}, {"id": 136, "seek": 93108, "start": 925.48, "end": 931.08, "text": " inserire del codice malevolo in un pacchetto pubblico molto conosciuto ed utilizzato. Poco", "tokens": [51556, 1028, 260, 621, 1103, 17656, 573, 7133, 85, 7902, 294, 517, 15165, 339, 23778, 1535, 11489, 78, 16394, 49892, 537, 8262, 1257, 40355, 2513, 13, 430, 11198, 51836], "temperature": 0.0, "avg_logprob": -0.15931166084231557, "compression_ratio": 1.6798561151079137, "no_speech_prob": 0.358642578125, "words": null}, {"id": 137, "seek": 95488, "start": 931.08, "end": 936.72, "text": " tempo fa c'\u00e8 stato un tentativo di inserire delle backdoor nel codice del linguaggio PHP che", "tokens": [50364, 8972, 2050, 269, 6, 1462, 29657, 517, 7054, 18586, 1026, 1028, 260, 621, 16485, 646, 10441, 15373, 17656, 573, 1103, 21766, 30763, 47298, 947, 50646], "temperature": 0.0, "avg_logprob": -0.18516995862387775, "compression_ratio": 1.6538461538461537, "no_speech_prob": 0.08148193359375, "words": null}, {"id": 138, "seek": 95488, "start": 936.72, "end": 943.2, "text": " fortunatamente \u00e8 stato individuato e corretto immediatamente, ma il tentativo c'\u00e8 stato. E poi", "tokens": [50646, 10506, 25354, 4873, 29657, 2461, 84, 2513, 308, 1181, 1505, 1353, 3640, 25354, 11, 463, 1930, 7054, 18586, 269, 6, 1462, 29657, 13, 462, 19260, 50970], "temperature": 0.0, "avg_logprob": -0.18516995862387775, "compression_ratio": 1.6538461538461537, "no_speech_prob": 0.08148193359375, "words": null}, {"id": 139, "seek": 95488, "start": 943.2, "end": 949.36, "text": " attenzione non \u00e8 un discorso che si ferma solo al codice o solo alle librerie. Giusto per fare un", "tokens": [50970, 951, 11368, 5328, 2107, 4873, 517, 2983, 284, 539, 947, 1511, 26558, 64, 6944, 419, 17656, 573, 277, 6944, 5430, 4939, 17487, 13, 15334, 48260, 680, 11994, 517, 51278], "temperature": 0.0, "avg_logprob": -0.18516995862387775, "compression_ratio": 1.6538461538461537, "no_speech_prob": 0.08148193359375, "words": null}, {"id": 140, "seek": 95488, "start": 949.36, "end": 954.88, "text": " esempio nel quale si potrebbe rivedere anche chi non sviluppa codice, pensate ad esempio a quanti", "tokens": [51278, 33627, 15373, 421, 1220, 1511, 1847, 39487, 367, 3194, 323, 11585, 13228, 2107, 17342, 388, 10504, 64, 17656, 573, 11, 6099, 473, 614, 33627, 257, 4426, 72, 51554], "temperature": 0.0, "avg_logprob": -0.18516995862387775, "compression_ratio": 1.6538461538461537, "no_speech_prob": 0.08148193359375, "words": null}, {"id": 141, "seek": 98000, "start": 954.88, "end": 961.4, "text": " siti sono realizzati con WordPress o con altri content management system e a quanti plugin essi", "tokens": [50364, 1394, 72, 9259, 957, 8072, 6908, 416, 23239, 277, 416, 33707, 2701, 4592, 1185, 308, 257, 4426, 72, 23407, 2097, 72, 50690], "temperature": 0.0, "avg_logprob": -0.2261363698677583, "compression_ratio": 1.6638297872340426, "no_speech_prob": 0.413818359375, "words": null}, {"id": 142, "seek": 98000, "start": 961.4, "end": 968.0, "text": " utilizzano. Per molti di questi plugin vengono scoperti e risolti bug in continuazione. E se un", "tokens": [50690, 40355, 3730, 13, 3026, 10739, 72, 1026, 29729, 23407, 371, 1501, 8957, 795, 404, 911, 72, 308, 2253, 4837, 72, 7426, 294, 2993, 12928, 13, 462, 369, 517, 51020], "temperature": 0.0, "avg_logprob": -0.2261363698677583, "compression_ratio": 1.6638297872340426, "no_speech_prob": 0.413818359375, "words": null}, {"id": 143, "seek": 98000, "start": 968.0, "end": 975.04, "text": " giorno un plugin, magari anche molto utilizzato, sparisse dal repository pubblico e un malintenzionato", "tokens": [51020, 42202, 517, 23407, 11, 49932, 11585, 16394, 40355, 2513, 11, 637, 27489, 405, 11702, 25841, 1535, 11489, 78, 308, 517, 2806, 686, 11368, 313, 2513, 51372], "temperature": 0.0, "avg_logprob": -0.2261363698677583, "compression_ratio": 1.6638297872340426, "no_speech_prob": 0.413818359375, "words": null}, {"id": 144, "seek": 98000, "start": 975.04, "end": 980.0, "text": " lo rimpiazzasse immediatamente con una versione modificata, quanti utenti lo installerebbero per", "tokens": [51372, 450, 367, 8814, 654, 4313, 8604, 3640, 25354, 416, 2002, 3037, 68, 1072, 1089, 3274, 11, 4426, 72, 2839, 23012, 450, 3625, 323, 65, 46659, 680, 51620], "temperature": 0.0, "avg_logprob": -0.2261363698677583, "compression_ratio": 1.6638297872340426, "no_speech_prob": 0.413818359375, "words": null}, {"id": 145, "seek": 100888, "start": 980.0, "end": 985.88, "text": " sbaglio, quanti siti lo aggiornerebbero in modo automatico. Certo poi verrebbe scoperto,", "tokens": [50364, 262, 17282, 19987, 11, 4426, 72, 1394, 72, 450, 42254, 1865, 323, 65, 46659, 294, 16664, 12509, 78, 13, 383, 13098, 19260, 1306, 39487, 795, 404, 13098, 11, 50658], "temperature": 0.0, "avg_logprob": -0.17765410499621745, "compression_ratio": 1.739622641509434, "no_speech_prob": 0.1383056640625, "words": null}, {"id": 146, "seek": 100888, "start": 985.88, "end": 990.88, "text": " magari anche abbastanza velocemente, ma nel frattempo quanti siti sarebbero stati infettati,", "tokens": [50658, 49932, 11585, 16903, 525, 20030, 1241, 752, 384, 4082, 11, 463, 15373, 431, 1591, 443, 2259, 4426, 72, 1394, 72, 38706, 65, 46659, 2219, 72, 1536, 3093, 6908, 11, 50908], "temperature": 0.0, "avg_logprob": -0.17765410499621745, "compression_ratio": 1.739622641509434, "no_speech_prob": 0.1383056640625, "words": null}, {"id": 147, "seek": 100888, "start": 990.88, "end": 996.56, "text": " quanti lo saprebbero, quanti si renderebbero conto che \u00e8 necessario eliminare o sostituire", "tokens": [50908, 4426, 72, 450, 18985, 22692, 46659, 11, 4426, 72, 1511, 6125, 323, 65, 46659, 660, 78, 947, 4873, 2688, 4912, 7892, 543, 277, 41585, 6380, 621, 51192], "temperature": 0.0, "avg_logprob": -0.17765410499621745, "compression_ratio": 1.739622641509434, "no_speech_prob": 0.1383056640625, "words": null}, {"id": 148, "seek": 100888, "start": 996.56, "end": 1003.44, "text": " il plugin. Si tratta solo di esempi e alcuni anche abbastanza estremi, ma secondo me fermarsi", "tokens": [51192, 1930, 23407, 13, 4909, 504, 18405, 6944, 1026, 32340, 72, 308, 20005, 24307, 11585, 16903, 525, 20030, 871, 2579, 72, 11, 463, 41601, 385, 26558, 32742, 51536], "temperature": 0.0, "avg_logprob": -0.17765410499621745, "compression_ratio": 1.739622641509434, "no_speech_prob": 0.1383056640625, "words": null}, {"id": 149, "seek": 100888, "start": 1003.44, "end": 1008.88, "text": " un attimo a chiedersi se quel nuovo componente ci serve effettivamente, se la sua aggiunta ci", "tokens": [51536, 517, 951, 6934, 257, 417, 1091, 433, 72, 369, 7178, 49348, 4026, 1576, 6983, 4596, 1244, 3093, 23957, 11, 369, 635, 8233, 42254, 46380, 6983, 51808], "temperature": 0.0, "avg_logprob": -0.17765410499621745, "compression_ratio": 1.739622641509434, "no_speech_prob": 0.1383056640625, "words": null}, {"id": 150, "seek": 103888, "start": 1008.88, "end": 1013.56, "text": " risparmia abbastanza tempo di sviluppo per giustificare l'ampliamento della superficie", "tokens": [50364, 2253, 2181, 29958, 16903, 525, 20030, 8972, 1026, 17342, 388, 10504, 78, 680, 1735, 381, 1089, 543, 287, 6, 335, 564, 72, 8824, 11618, 23881, 414, 50598], "temperature": 0.0, "avg_logprob": -0.17089844282184327, "compression_ratio": 1.3503649635036497, "no_speech_prob": 0.00400543212890625, "words": null}, {"id": 151, "seek": 103888, "start": 1013.56, "end": 1019.68, "text": " di attacco del nostro software e lo sforzo di manutenzione, secondo me \u00e8 una cosa da fare sempre.", "tokens": [50598, 1026, 951, 18662, 1103, 35779, 4722, 308, 450, 262, 2994, 4765, 1026, 587, 7886, 19706, 11, 41601, 385, 4873, 2002, 10163, 1120, 11994, 9553, 13, 50904], "temperature": 0.0, "avg_logprob": -0.17089844282184327, "compression_ratio": 1.3503649635036497, "no_speech_prob": 0.00400543212890625, "words": null}, {"id": 152, "seek": 106336, "start": 1039.88, "end": 1045.72, "text": " Bene, come al solito vi ringrazio per avere ascoltato fin qui, spero che l'episodio vi", "tokens": [50414, 27702, 11, 808, 419, 1404, 3528, 1932, 4875, 30695, 1004, 680, 18247, 68, 15526, 4837, 2513, 962, 1956, 11, 24152, 78, 947, 287, 6, 595, 271, 378, 1004, 1932, 50706], "temperature": 0.0, "avg_logprob": -0.2065476247242519, "compression_ratio": 1.6129032258064515, "no_speech_prob": 0.044647216796875, "words": null}, {"id": 153, "seek": 106336, "start": 1045.72, "end": 1051.88, "text": " sia piaciuto. Ci tengo davvero a sapere voi cosa ne pensate, che linguaggi utilizzate,", "tokens": [50706, 25176, 3895, 22086, 8262, 13, 20188, 13989, 11753, 39332, 257, 18985, 323, 20931, 10163, 408, 6099, 473, 11, 947, 21766, 46893, 40355, 473, 11, 51014], "temperature": 0.0, "avg_logprob": -0.2065476247242519, "compression_ratio": 1.6129032258064515, "no_speech_prob": 0.044647216796875, "words": null}, {"id": 154, "seek": 106336, "start": 1051.88, "end": 1057.7600000000002, "text": " se ne utilizzate, quante librerie installate solitamente e se magari vi \u00e8 mai capitato", "tokens": [51014, 369, 408, 40355, 473, 11, 421, 2879, 4939, 17487, 3625, 473, 1404, 270, 3439, 308, 369, 49932, 1932, 4873, 12698, 33807, 2513, 51308], "temperature": 0.0, "avg_logprob": -0.2065476247242519, "compression_ratio": 1.6129032258064515, "no_speech_prob": 0.044647216796875, "words": null}, {"id": 155, "seek": 106336, "start": 1057.7600000000002, "end": 1063.3600000000001, "text": " qualche problema di questo tipo. Come avrete capito io in generale sono uno che cerca di", "tokens": [51308, 38737, 12395, 1026, 10263, 9746, 13, 2492, 1305, 7600, 1410, 3528, 19785, 294, 1337, 1220, 9259, 8526, 947, 26770, 1026, 51588], "temperature": 0.0, "avg_logprob": -0.2065476247242519, "compression_ratio": 1.6129032258064515, "no_speech_prob": 0.044647216796875, "words": null}, {"id": 156, "seek": 109216, "start": 1063.3600000000001, "end": 1068.96, "text": " evitare di aggiungere componenti esterni quando non \u00e8 indispensabile, ma ci sono dei linguaggi", "tokens": [50364, 1073, 270, 543, 1026, 42254, 1063, 323, 6542, 72, 871, 1248, 72, 7770, 2107, 4873, 42937, 33288, 11, 463, 6983, 9259, 13874, 21766, 46893, 50644], "temperature": 0.0, "avg_logprob": -0.19864341085271317, "compression_ratio": 1.6714801444043321, "no_speech_prob": 0.53759765625, "words": null}, {"id": 157, "seek": 109216, "start": 1068.96, "end": 1075.5600000000002, "text": " che si basano fortemente su questa pratica come ad esempio javascript, quindi probabilmente fra", "tokens": [50644, 947, 1511, 987, 3730, 5009, 16288, 459, 16540, 28844, 2262, 808, 614, 33627, 361, 37331, 5944, 11, 15727, 31959, 4082, 6600, 50974], "temperature": 0.0, "avg_logprob": -0.19864341085271317, "compression_ratio": 1.6714801444043321, "no_speech_prob": 0.53759765625, "words": null}, {"id": 158, "seek": 109216, "start": 1075.5600000000002, "end": 1081.5200000000002, "text": " voi c'\u00e8 chi la pensa molto diversamente e un confronto non pu\u00f2 farci che bene. Detto questo", "tokens": [50974, 20931, 269, 6, 1462, 13228, 635, 46909, 16394, 6111, 3439, 308, 517, 1497, 81, 7556, 2107, 26526, 1400, 537, 947, 2537, 13, 4237, 1353, 10263, 51272], "temperature": 0.0, "avg_logprob": -0.19864341085271317, "compression_ratio": 1.6714801444043321, "no_speech_prob": 0.53759765625, "words": null}, {"id": 159, "seek": 109216, "start": 1081.5200000000002, "end": 1087.48, "text": " vi ricordo che se volete dare una mano a far crescere il progetto potete condividere questo", "tokens": [51272, 1932, 21040, 23872, 947, 369, 1996, 3498, 8955, 2002, 18384, 257, 1400, 20964, 15312, 1930, 447, 847, 1353, 1847, 3498, 2224, 1843, 323, 10263, 51570], "temperature": 0.0, "avg_logprob": -0.19864341085271317, "compression_ratio": 1.6714801444043321, "no_speech_prob": 0.53759765625, "words": null}, {"id": 160, "seek": 109216, "start": 1087.48, "end": 1092.16, "text": " e gli altri episodi magari aggiungendo una piccola nota su cosa vi \u00e8 piaciuto e cosa", "tokens": [51570, 308, 17161, 33707, 2927, 30727, 49932, 42254, 1063, 3999, 2002, 13363, 66, 4711, 36192, 459, 10163, 1932, 4873, 3895, 22086, 8262, 308, 10163, 51804], "temperature": 0.0, "avg_logprob": -0.19864341085271317, "compression_ratio": 1.6714801444043321, "no_speech_prob": 0.53759765625, "words": null}, {"id": 161, "seek": 112216, "start": 1092.16, "end": 1098.0, "text": " vi \u00e8 interessato o addirittura facendolo ascoltare a qualcuno. Magari potrebbe diventare", "tokens": [50364, 1932, 4873, 12478, 2513, 277, 909, 347, 593, 2991, 1915, 521, 7902, 15526, 4837, 543, 257, 32101, 12638, 13, 6395, 3504, 1847, 39487, 3414, 317, 543, 50656], "temperature": 0.0, "avg_logprob": -0.22487745404827827, "compression_ratio": 1.5570776255707763, "no_speech_prob": 0.021270751953125, "words": null}, {"id": 162, "seek": 112216, "start": 1098.0, "end": 1104.5600000000002, "text": " un ascoltatore assiduo e un'altra bella persona con cui discutere. Quindi ancora grazie per avere", "tokens": [50656, 517, 15526, 4837, 43148, 1256, 327, 18655, 308, 517, 6, 38865, 312, 3505, 12184, 416, 22929, 42085, 323, 13, 32534, 30656, 1295, 3283, 680, 18247, 68, 50984], "temperature": 0.0, "avg_logprob": -0.22487745404827827, "compression_ratio": 1.5570776255707763, "no_speech_prob": 0.021270751953125, "words": null}, {"id": 163, "seek": 112216, "start": 1104.5600000000002, "end": 1111.0, "text": " ascoltato fin qui, vi saluto, vi do appuntamento al prossimo episodio e vi ricordo che un informatico", "tokens": [50984, 15526, 4837, 2513, 962, 1956, 11, 1932, 1845, 8262, 11, 1932, 360, 724, 2760, 8824, 419, 48794, 6934, 39200, 1004, 308, 1932, 21040, 23872, 947, 517, 1356, 2399, 78, 51306], "temperature": 0.0, "avg_logprob": -0.22487745404827827, "compression_ratio": 1.5570776255707763, "no_speech_prob": 0.021270751953125, "words": null}, {"id": 164, "seek": 112216, "start": 1111.0, "end": 1114.6000000000001, "text": " risolve problemi, a volte anche usando il computer.", "tokens": [51306, 2253, 37361, 1154, 72, 11, 257, 37801, 11585, 29798, 1930, 3820, 13, 51486], "temperature": 0.0, "avg_logprob": -0.22487745404827827, "compression_ratio": 1.5570776255707763, "no_speech_prob": 0.021270751953125, "words": null}], "language": "Italian"}